
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Region
 * 
 */
export type Region = $Result.DefaultSelection<Prisma.$RegionPayload>
/**
 * Model Ciudad
 * 
 */
export type Ciudad = $Result.DefaultSelection<Prisma.$CiudadPayload>
/**
 * Model Comuna
 * 
 */
export type Comuna = $Result.DefaultSelection<Prisma.$ComunaPayload>
/**
 * Model Direccion
 * 
 */
export type Direccion = $Result.DefaultSelection<Prisma.$DireccionPayload>
/**
 * Model Rol
 * 
 */
export type Rol = $Result.DefaultSelection<Prisma.$RolPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Permiso
 * 
 */
export type Permiso = $Result.DefaultSelection<Prisma.$PermisoPayload>
/**
 * Model Pyme
 * 
 */
export type Pyme = $Result.DefaultSelection<Prisma.$PymePayload>
/**
 * Model CategoriaDeProducto
 * 
 */
export type CategoriaDeProducto = $Result.DefaultSelection<Prisma.$CategoriaDeProductoPayload>
/**
 * Model Producto
 * 
 */
export type Producto = $Result.DefaultSelection<Prisma.$ProductoPayload>
/**
 * Model CarroDeCompras
 * 
 */
export type CarroDeCompras = $Result.DefaultSelection<Prisma.$CarroDeComprasPayload>
/**
 * Model DetalleCarroCompras
 * 
 */
export type DetalleCarroCompras = $Result.DefaultSelection<Prisma.$DetalleCarroComprasPayload>
/**
 * Model ListaDeDeseos
 * 
 */
export type ListaDeDeseos = $Result.DefaultSelection<Prisma.$ListaDeDeseosPayload>
/**
 * Model DetalleListaDeseos
 * 
 */
export type DetalleListaDeseos = $Result.DefaultSelection<Prisma.$DetalleListaDeseosPayload>
/**
 * Model Valoracion
 * 
 */
export type Valoracion = $Result.DefaultSelection<Prisma.$ValoracionPayload>
/**
 * Model MetodoPago
 * 
 */
export type MetodoPago = $Result.DefaultSelection<Prisma.$MetodoPagoPayload>
/**
 * Model Venta
 * 
 */
export type Venta = $Result.DefaultSelection<Prisma.$VentaPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Regions
 * const regions = await prisma.region.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Regions
   * const regions = await prisma.region.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.region`: Exposes CRUD operations for the **Region** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Regions
    * const regions = await prisma.region.findMany()
    * ```
    */
  get region(): Prisma.RegionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ciudad`: Exposes CRUD operations for the **Ciudad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ciudads
    * const ciudads = await prisma.ciudad.findMany()
    * ```
    */
  get ciudad(): Prisma.CiudadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comuna`: Exposes CRUD operations for the **Comuna** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comunas
    * const comunas = await prisma.comuna.findMany()
    * ```
    */
  get comuna(): Prisma.ComunaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.direccion`: Exposes CRUD operations for the **Direccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Direccions
    * const direccions = await prisma.direccion.findMany()
    * ```
    */
  get direccion(): Prisma.DireccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rol`: Exposes CRUD operations for the **Rol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rols
    * const rols = await prisma.rol.findMany()
    * ```
    */
  get rol(): Prisma.RolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permiso`: Exposes CRUD operations for the **Permiso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permisos
    * const permisos = await prisma.permiso.findMany()
    * ```
    */
  get permiso(): Prisma.PermisoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pyme`: Exposes CRUD operations for the **Pyme** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pymes
    * const pymes = await prisma.pyme.findMany()
    * ```
    */
  get pyme(): Prisma.PymeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoriaDeProducto`: Exposes CRUD operations for the **CategoriaDeProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoriaDeProductos
    * const categoriaDeProductos = await prisma.categoriaDeProducto.findMany()
    * ```
    */
  get categoriaDeProducto(): Prisma.CategoriaDeProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto`: Exposes CRUD operations for the **Producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.producto.findMany()
    * ```
    */
  get producto(): Prisma.ProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.carroDeCompras`: Exposes CRUD operations for the **CarroDeCompras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CarroDeCompras
    * const carroDeCompras = await prisma.carroDeCompras.findMany()
    * ```
    */
  get carroDeCompras(): Prisma.CarroDeComprasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalleCarroCompras`: Exposes CRUD operations for the **DetalleCarroCompras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleCarroCompras
    * const detalleCarroCompras = await prisma.detalleCarroCompras.findMany()
    * ```
    */
  get detalleCarroCompras(): Prisma.DetalleCarroComprasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listaDeDeseos`: Exposes CRUD operations for the **ListaDeDeseos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListaDeDeseos
    * const listaDeDeseos = await prisma.listaDeDeseos.findMany()
    * ```
    */
  get listaDeDeseos(): Prisma.ListaDeDeseosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalleListaDeseos`: Exposes CRUD operations for the **DetalleListaDeseos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetalleListaDeseos
    * const detalleListaDeseos = await prisma.detalleListaDeseos.findMany()
    * ```
    */
  get detalleListaDeseos(): Prisma.DetalleListaDeseosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.valoracion`: Exposes CRUD operations for the **Valoracion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Valoracions
    * const valoracions = await prisma.valoracion.findMany()
    * ```
    */
  get valoracion(): Prisma.ValoracionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.metodoPago`: Exposes CRUD operations for the **MetodoPago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MetodoPagos
    * const metodoPagos = await prisma.metodoPago.findMany()
    * ```
    */
  get metodoPago(): Prisma.MetodoPagoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.venta`: Exposes CRUD operations for the **Venta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.venta.findMany()
    * ```
    */
  get venta(): Prisma.VentaDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.11.1
   * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Region: 'Region',
    Ciudad: 'Ciudad',
    Comuna: 'Comuna',
    Direccion: 'Direccion',
    Rol: 'Rol',
    Usuario: 'Usuario',
    Permiso: 'Permiso',
    Pyme: 'Pyme',
    CategoriaDeProducto: 'CategoriaDeProducto',
    Producto: 'Producto',
    CarroDeCompras: 'CarroDeCompras',
    DetalleCarroCompras: 'DetalleCarroCompras',
    ListaDeDeseos: 'ListaDeDeseos',
    DetalleListaDeseos: 'DetalleListaDeseos',
    Valoracion: 'Valoracion',
    MetodoPago: 'MetodoPago',
    Venta: 'Venta'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "region" | "ciudad" | "comuna" | "direccion" | "rol" | "usuario" | "permiso" | "pyme" | "categoriaDeProducto" | "producto" | "carroDeCompras" | "detalleCarroCompras" | "listaDeDeseos" | "detalleListaDeseos" | "valoracion" | "metodoPago" | "venta"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Region: {
        payload: Prisma.$RegionPayload<ExtArgs>
        fields: Prisma.RegionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          findFirst: {
            args: Prisma.RegionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          findMany: {
            args: Prisma.RegionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>[]
          }
          create: {
            args: Prisma.RegionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          createMany: {
            args: Prisma.RegionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>[]
          }
          delete: {
            args: Prisma.RegionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          update: {
            args: Prisma.RegionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          deleteMany: {
            args: Prisma.RegionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>[]
          }
          upsert: {
            args: Prisma.RegionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegionPayload>
          }
          aggregate: {
            args: Prisma.RegionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegion>
          }
          groupBy: {
            args: Prisma.RegionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegionCountArgs<ExtArgs>
            result: $Utils.Optional<RegionCountAggregateOutputType> | number
          }
        }
      }
      Ciudad: {
        payload: Prisma.$CiudadPayload<ExtArgs>
        fields: Prisma.CiudadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiudadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiudadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>
          }
          findFirst: {
            args: Prisma.CiudadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiudadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>
          }
          findMany: {
            args: Prisma.CiudadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>[]
          }
          create: {
            args: Prisma.CiudadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>
          }
          createMany: {
            args: Prisma.CiudadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiudadCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>[]
          }
          delete: {
            args: Prisma.CiudadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>
          }
          update: {
            args: Prisma.CiudadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>
          }
          deleteMany: {
            args: Prisma.CiudadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiudadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiudadUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>[]
          }
          upsert: {
            args: Prisma.CiudadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiudadPayload>
          }
          aggregate: {
            args: Prisma.CiudadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiudad>
          }
          groupBy: {
            args: Prisma.CiudadGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiudadGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiudadCountArgs<ExtArgs>
            result: $Utils.Optional<CiudadCountAggregateOutputType> | number
          }
        }
      }
      Comuna: {
        payload: Prisma.$ComunaPayload<ExtArgs>
        fields: Prisma.ComunaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComunaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComunaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>
          }
          findFirst: {
            args: Prisma.ComunaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComunaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>
          }
          findMany: {
            args: Prisma.ComunaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>[]
          }
          create: {
            args: Prisma.ComunaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>
          }
          createMany: {
            args: Prisma.ComunaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComunaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>[]
          }
          delete: {
            args: Prisma.ComunaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>
          }
          update: {
            args: Prisma.ComunaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>
          }
          deleteMany: {
            args: Prisma.ComunaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComunaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ComunaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>[]
          }
          upsert: {
            args: Prisma.ComunaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComunaPayload>
          }
          aggregate: {
            args: Prisma.ComunaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComuna>
          }
          groupBy: {
            args: Prisma.ComunaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComunaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComunaCountArgs<ExtArgs>
            result: $Utils.Optional<ComunaCountAggregateOutputType> | number
          }
        }
      }
      Direccion: {
        payload: Prisma.$DireccionPayload<ExtArgs>
        fields: Prisma.DireccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DireccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DireccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          findFirst: {
            args: Prisma.DireccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DireccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          findMany: {
            args: Prisma.DireccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>[]
          }
          create: {
            args: Prisma.DireccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          createMany: {
            args: Prisma.DireccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DireccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>[]
          }
          delete: {
            args: Prisma.DireccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          update: {
            args: Prisma.DireccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          deleteMany: {
            args: Prisma.DireccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DireccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DireccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>[]
          }
          upsert: {
            args: Prisma.DireccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DireccionPayload>
          }
          aggregate: {
            args: Prisma.DireccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDireccion>
          }
          groupBy: {
            args: Prisma.DireccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DireccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.DireccionCountArgs<ExtArgs>
            result: $Utils.Optional<DireccionCountAggregateOutputType> | number
          }
        }
      }
      Rol: {
        payload: Prisma.$RolPayload<ExtArgs>
        fields: Prisma.RolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          findFirst: {
            args: Prisma.RolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          findMany: {
            args: Prisma.RolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          create: {
            args: Prisma.RolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          createMany: {
            args: Prisma.RolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          delete: {
            args: Prisma.RolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          update: {
            args: Prisma.RolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          deleteMany: {
            args: Prisma.RolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>[]
          }
          upsert: {
            args: Prisma.RolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolPayload>
          }
          aggregate: {
            args: Prisma.RolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRol>
          }
          groupBy: {
            args: Prisma.RolGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolCountArgs<ExtArgs>
            result: $Utils.Optional<RolCountAggregateOutputType> | number
          }
        }
      }
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Permiso: {
        payload: Prisma.$PermisoPayload<ExtArgs>
        fields: Prisma.PermisoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermisoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermisoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findFirst: {
            args: Prisma.PermisoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermisoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          findMany: {
            args: Prisma.PermisoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          create: {
            args: Prisma.PermisoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          createMany: {
            args: Prisma.PermisoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermisoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          delete: {
            args: Prisma.PermisoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          update: {
            args: Prisma.PermisoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          deleteMany: {
            args: Prisma.PermisoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermisoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermisoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>[]
          }
          upsert: {
            args: Prisma.PermisoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermisoPayload>
          }
          aggregate: {
            args: Prisma.PermisoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermiso>
          }
          groupBy: {
            args: Prisma.PermisoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermisoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermisoCountArgs<ExtArgs>
            result: $Utils.Optional<PermisoCountAggregateOutputType> | number
          }
        }
      }
      Pyme: {
        payload: Prisma.$PymePayload<ExtArgs>
        fields: Prisma.PymeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PymeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PymeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>
          }
          findFirst: {
            args: Prisma.PymeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PymeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>
          }
          findMany: {
            args: Prisma.PymeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>[]
          }
          create: {
            args: Prisma.PymeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>
          }
          createMany: {
            args: Prisma.PymeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PymeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>[]
          }
          delete: {
            args: Prisma.PymeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>
          }
          update: {
            args: Prisma.PymeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>
          }
          deleteMany: {
            args: Prisma.PymeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PymeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PymeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>[]
          }
          upsert: {
            args: Prisma.PymeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PymePayload>
          }
          aggregate: {
            args: Prisma.PymeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePyme>
          }
          groupBy: {
            args: Prisma.PymeGroupByArgs<ExtArgs>
            result: $Utils.Optional<PymeGroupByOutputType>[]
          }
          count: {
            args: Prisma.PymeCountArgs<ExtArgs>
            result: $Utils.Optional<PymeCountAggregateOutputType> | number
          }
        }
      }
      CategoriaDeProducto: {
        payload: Prisma.$CategoriaDeProductoPayload<ExtArgs>
        fields: Prisma.CategoriaDeProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaDeProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaDeProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>
          }
          findFirst: {
            args: Prisma.CategoriaDeProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaDeProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>
          }
          findMany: {
            args: Prisma.CategoriaDeProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>[]
          }
          create: {
            args: Prisma.CategoriaDeProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>
          }
          createMany: {
            args: Prisma.CategoriaDeProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaDeProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>[]
          }
          delete: {
            args: Prisma.CategoriaDeProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>
          }
          update: {
            args: Prisma.CategoriaDeProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaDeProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaDeProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoriaDeProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>[]
          }
          upsert: {
            args: Prisma.CategoriaDeProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaDeProductoPayload>
          }
          aggregate: {
            args: Prisma.CategoriaDeProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoriaDeProducto>
          }
          groupBy: {
            args: Prisma.CategoriaDeProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaDeProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaDeProductoCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaDeProductoCountAggregateOutputType> | number
          }
        }
      }
      Producto: {
        payload: Prisma.$ProductoPayload<ExtArgs>
        fields: Prisma.ProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findFirst: {
            args: Prisma.ProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findMany: {
            args: Prisma.ProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          create: {
            args: Prisma.ProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          createMany: {
            args: Prisma.ProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          delete: {
            args: Prisma.ProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          update: {
            args: Prisma.ProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          deleteMany: {
            args: Prisma.ProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          upsert: {
            args: Prisma.ProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          aggregate: {
            args: Prisma.ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto>
          }
          groupBy: {
            args: Prisma.ProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoCountAggregateOutputType> | number
          }
        }
      }
      CarroDeCompras: {
        payload: Prisma.$CarroDeComprasPayload<ExtArgs>
        fields: Prisma.CarroDeComprasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CarroDeComprasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CarroDeComprasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>
          }
          findFirst: {
            args: Prisma.CarroDeComprasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CarroDeComprasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>
          }
          findMany: {
            args: Prisma.CarroDeComprasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>[]
          }
          create: {
            args: Prisma.CarroDeComprasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>
          }
          createMany: {
            args: Prisma.CarroDeComprasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CarroDeComprasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>[]
          }
          delete: {
            args: Prisma.CarroDeComprasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>
          }
          update: {
            args: Prisma.CarroDeComprasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>
          }
          deleteMany: {
            args: Prisma.CarroDeComprasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CarroDeComprasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CarroDeComprasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>[]
          }
          upsert: {
            args: Prisma.CarroDeComprasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarroDeComprasPayload>
          }
          aggregate: {
            args: Prisma.CarroDeComprasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCarroDeCompras>
          }
          groupBy: {
            args: Prisma.CarroDeComprasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CarroDeComprasGroupByOutputType>[]
          }
          count: {
            args: Prisma.CarroDeComprasCountArgs<ExtArgs>
            result: $Utils.Optional<CarroDeComprasCountAggregateOutputType> | number
          }
        }
      }
      DetalleCarroCompras: {
        payload: Prisma.$DetalleCarroComprasPayload<ExtArgs>
        fields: Prisma.DetalleCarroComprasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetalleCarroComprasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetalleCarroComprasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>
          }
          findFirst: {
            args: Prisma.DetalleCarroComprasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetalleCarroComprasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>
          }
          findMany: {
            args: Prisma.DetalleCarroComprasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>[]
          }
          create: {
            args: Prisma.DetalleCarroComprasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>
          }
          createMany: {
            args: Prisma.DetalleCarroComprasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetalleCarroComprasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>[]
          }
          delete: {
            args: Prisma.DetalleCarroComprasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>
          }
          update: {
            args: Prisma.DetalleCarroComprasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>
          }
          deleteMany: {
            args: Prisma.DetalleCarroComprasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetalleCarroComprasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DetalleCarroComprasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>[]
          }
          upsert: {
            args: Prisma.DetalleCarroComprasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleCarroComprasPayload>
          }
          aggregate: {
            args: Prisma.DetalleCarroComprasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleCarroCompras>
          }
          groupBy: {
            args: Prisma.DetalleCarroComprasGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleCarroComprasGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetalleCarroComprasCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleCarroComprasCountAggregateOutputType> | number
          }
        }
      }
      ListaDeDeseos: {
        payload: Prisma.$ListaDeDeseosPayload<ExtArgs>
        fields: Prisma.ListaDeDeseosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListaDeDeseosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListaDeDeseosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>
          }
          findFirst: {
            args: Prisma.ListaDeDeseosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListaDeDeseosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>
          }
          findMany: {
            args: Prisma.ListaDeDeseosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>[]
          }
          create: {
            args: Prisma.ListaDeDeseosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>
          }
          createMany: {
            args: Prisma.ListaDeDeseosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListaDeDeseosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>[]
          }
          delete: {
            args: Prisma.ListaDeDeseosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>
          }
          update: {
            args: Prisma.ListaDeDeseosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>
          }
          deleteMany: {
            args: Prisma.ListaDeDeseosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListaDeDeseosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListaDeDeseosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>[]
          }
          upsert: {
            args: Prisma.ListaDeDeseosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListaDeDeseosPayload>
          }
          aggregate: {
            args: Prisma.ListaDeDeseosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListaDeDeseos>
          }
          groupBy: {
            args: Prisma.ListaDeDeseosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListaDeDeseosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListaDeDeseosCountArgs<ExtArgs>
            result: $Utils.Optional<ListaDeDeseosCountAggregateOutputType> | number
          }
        }
      }
      DetalleListaDeseos: {
        payload: Prisma.$DetalleListaDeseosPayload<ExtArgs>
        fields: Prisma.DetalleListaDeseosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetalleListaDeseosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetalleListaDeseosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>
          }
          findFirst: {
            args: Prisma.DetalleListaDeseosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetalleListaDeseosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>
          }
          findMany: {
            args: Prisma.DetalleListaDeseosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>[]
          }
          create: {
            args: Prisma.DetalleListaDeseosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>
          }
          createMany: {
            args: Prisma.DetalleListaDeseosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetalleListaDeseosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>[]
          }
          delete: {
            args: Prisma.DetalleListaDeseosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>
          }
          update: {
            args: Prisma.DetalleListaDeseosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>
          }
          deleteMany: {
            args: Prisma.DetalleListaDeseosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetalleListaDeseosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DetalleListaDeseosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>[]
          }
          upsert: {
            args: Prisma.DetalleListaDeseosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetalleListaDeseosPayload>
          }
          aggregate: {
            args: Prisma.DetalleListaDeseosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleListaDeseos>
          }
          groupBy: {
            args: Prisma.DetalleListaDeseosGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleListaDeseosGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetalleListaDeseosCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleListaDeseosCountAggregateOutputType> | number
          }
        }
      }
      Valoracion: {
        payload: Prisma.$ValoracionPayload<ExtArgs>
        fields: Prisma.ValoracionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ValoracionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ValoracionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>
          }
          findFirst: {
            args: Prisma.ValoracionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ValoracionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>
          }
          findMany: {
            args: Prisma.ValoracionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>[]
          }
          create: {
            args: Prisma.ValoracionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>
          }
          createMany: {
            args: Prisma.ValoracionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ValoracionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>[]
          }
          delete: {
            args: Prisma.ValoracionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>
          }
          update: {
            args: Prisma.ValoracionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>
          }
          deleteMany: {
            args: Prisma.ValoracionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ValoracionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ValoracionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>[]
          }
          upsert: {
            args: Prisma.ValoracionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ValoracionPayload>
          }
          aggregate: {
            args: Prisma.ValoracionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateValoracion>
          }
          groupBy: {
            args: Prisma.ValoracionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ValoracionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ValoracionCountArgs<ExtArgs>
            result: $Utils.Optional<ValoracionCountAggregateOutputType> | number
          }
        }
      }
      MetodoPago: {
        payload: Prisma.$MetodoPagoPayload<ExtArgs>
        fields: Prisma.MetodoPagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MetodoPagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MetodoPagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>
          }
          findFirst: {
            args: Prisma.MetodoPagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MetodoPagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>
          }
          findMany: {
            args: Prisma.MetodoPagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>[]
          }
          create: {
            args: Prisma.MetodoPagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>
          }
          createMany: {
            args: Prisma.MetodoPagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MetodoPagoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>[]
          }
          delete: {
            args: Prisma.MetodoPagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>
          }
          update: {
            args: Prisma.MetodoPagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>
          }
          deleteMany: {
            args: Prisma.MetodoPagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MetodoPagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MetodoPagoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>[]
          }
          upsert: {
            args: Prisma.MetodoPagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetodoPagoPayload>
          }
          aggregate: {
            args: Prisma.MetodoPagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMetodoPago>
          }
          groupBy: {
            args: Prisma.MetodoPagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<MetodoPagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.MetodoPagoCountArgs<ExtArgs>
            result: $Utils.Optional<MetodoPagoCountAggregateOutputType> | number
          }
        }
      }
      Venta: {
        payload: Prisma.$VentaPayload<ExtArgs>
        fields: Prisma.VentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findFirst: {
            args: Prisma.VentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findMany: {
            args: Prisma.VentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          create: {
            args: Prisma.VentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          createMany: {
            args: Prisma.VentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          delete: {
            args: Prisma.VentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          update: {
            args: Prisma.VentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          deleteMany: {
            args: Prisma.VentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VentaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          upsert: {
            args: Prisma.VentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          aggregate: {
            args: Prisma.VentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVenta>
          }
          groupBy: {
            args: Prisma.VentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    region?: RegionOmit
    ciudad?: CiudadOmit
    comuna?: ComunaOmit
    direccion?: DireccionOmit
    rol?: RolOmit
    usuario?: UsuarioOmit
    permiso?: PermisoOmit
    pyme?: PymeOmit
    categoriaDeProducto?: CategoriaDeProductoOmit
    producto?: ProductoOmit
    carroDeCompras?: CarroDeComprasOmit
    detalleCarroCompras?: DetalleCarroComprasOmit
    listaDeDeseos?: ListaDeDeseosOmit
    detalleListaDeseos?: DetalleListaDeseosOmit
    valoracion?: ValoracionOmit
    metodoPago?: MetodoPagoOmit
    venta?: VentaOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type RegionCountOutputType
   */

  export type RegionCountOutputType = {
    Ciudad: number
  }

  export type RegionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Ciudad?: boolean | RegionCountOutputTypeCountCiudadArgs
  }

  // Custom InputTypes
  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegionCountOutputType
     */
    select?: RegionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RegionCountOutputType without action
   */
  export type RegionCountOutputTypeCountCiudadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiudadWhereInput
  }


  /**
   * Count Type CiudadCountOutputType
   */

  export type CiudadCountOutputType = {
    Comuna: number
  }

  export type CiudadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Comuna?: boolean | CiudadCountOutputTypeCountComunaArgs
  }

  // Custom InputTypes
  /**
   * CiudadCountOutputType without action
   */
  export type CiudadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiudadCountOutputType
     */
    select?: CiudadCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CiudadCountOutputType without action
   */
  export type CiudadCountOutputTypeCountComunaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComunaWhereInput
  }


  /**
   * Count Type ComunaCountOutputType
   */

  export type ComunaCountOutputType = {
    Direccion: number
  }

  export type ComunaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Direccion?: boolean | ComunaCountOutputTypeCountDireccionArgs
  }

  // Custom InputTypes
  /**
   * ComunaCountOutputType without action
   */
  export type ComunaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComunaCountOutputType
     */
    select?: ComunaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ComunaCountOutputType without action
   */
  export type ComunaCountOutputTypeCountDireccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionWhereInput
  }


  /**
   * Count Type RolCountOutputType
   */

  export type RolCountOutputType = {
    Usuario: number
    Permiso: number
  }

  export type RolCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | RolCountOutputTypeCountUsuarioArgs
    Permiso?: boolean | RolCountOutputTypeCountPermisoArgs
  }

  // Custom InputTypes
  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolCountOutputType
     */
    select?: RolCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountPermisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    CarroDeCompras: number
    Valoracion: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CarroDeCompras?: boolean | UsuarioCountOutputTypeCountCarroDeComprasArgs
    Valoracion?: boolean | UsuarioCountOutputTypeCountValoracionArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCarroDeComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarroDeComprasWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountValoracionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ValoracionWhereInput
  }


  /**
   * Count Type PymeCountOutputType
   */

  export type PymeCountOutputType = {
    Producto: number
  }

  export type PymeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Producto?: boolean | PymeCountOutputTypeCountProductoArgs
  }

  // Custom InputTypes
  /**
   * PymeCountOutputType without action
   */
  export type PymeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PymeCountOutputType
     */
    select?: PymeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PymeCountOutputType without action
   */
  export type PymeCountOutputTypeCountProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }


  /**
   * Count Type CategoriaDeProductoCountOutputType
   */

  export type CategoriaDeProductoCountOutputType = {
    Producto: number
  }

  export type CategoriaDeProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Producto?: boolean | CategoriaDeProductoCountOutputTypeCountProductoArgs
  }

  // Custom InputTypes
  /**
   * CategoriaDeProductoCountOutputType without action
   */
  export type CategoriaDeProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProductoCountOutputType
     */
    select?: CategoriaDeProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaDeProductoCountOutputType without action
   */
  export type CategoriaDeProductoCountOutputTypeCountProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }


  /**
   * Count Type ProductoCountOutputType
   */

  export type ProductoCountOutputType = {
    DetalleCarroCompras: number
    DetalleListaDeseos: number
    Valoracion: number
  }

  export type ProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DetalleCarroCompras?: boolean | ProductoCountOutputTypeCountDetalleCarroComprasArgs
    DetalleListaDeseos?: boolean | ProductoCountOutputTypeCountDetalleListaDeseosArgs
    Valoracion?: boolean | ProductoCountOutputTypeCountValoracionArgs
  }

  // Custom InputTypes
  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoCountOutputType
     */
    select?: ProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountDetalleCarroComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCarroComprasWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountDetalleListaDeseosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleListaDeseosWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountValoracionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ValoracionWhereInput
  }


  /**
   * Count Type CarroDeComprasCountOutputType
   */

  export type CarroDeComprasCountOutputType = {
    DetalleCarroCompras: number
  }

  export type CarroDeComprasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DetalleCarroCompras?: boolean | CarroDeComprasCountOutputTypeCountDetalleCarroComprasArgs
  }

  // Custom InputTypes
  /**
   * CarroDeComprasCountOutputType without action
   */
  export type CarroDeComprasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeComprasCountOutputType
     */
    select?: CarroDeComprasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CarroDeComprasCountOutputType without action
   */
  export type CarroDeComprasCountOutputTypeCountDetalleCarroComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCarroComprasWhereInput
  }


  /**
   * Count Type ListaDeDeseosCountOutputType
   */

  export type ListaDeDeseosCountOutputType = {
    DetalleListaDeseos: number
  }

  export type ListaDeDeseosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DetalleListaDeseos?: boolean | ListaDeDeseosCountOutputTypeCountDetalleListaDeseosArgs
  }

  // Custom InputTypes
  /**
   * ListaDeDeseosCountOutputType without action
   */
  export type ListaDeDeseosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseosCountOutputType
     */
    select?: ListaDeDeseosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ListaDeDeseosCountOutputType without action
   */
  export type ListaDeDeseosCountOutputTypeCountDetalleListaDeseosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleListaDeseosWhereInput
  }


  /**
   * Count Type MetodoPagoCountOutputType
   */

  export type MetodoPagoCountOutputType = {
    Venta: number
  }

  export type MetodoPagoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Venta?: boolean | MetodoPagoCountOutputTypeCountVentaArgs
  }

  // Custom InputTypes
  /**
   * MetodoPagoCountOutputType without action
   */
  export type MetodoPagoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPagoCountOutputType
     */
    select?: MetodoPagoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MetodoPagoCountOutputType without action
   */
  export type MetodoPagoCountOutputTypeCountVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Region
   */

  export type AggregateRegion = {
    _count: RegionCountAggregateOutputType | null
    _avg: RegionAvgAggregateOutputType | null
    _sum: RegionSumAggregateOutputType | null
    _min: RegionMinAggregateOutputType | null
    _max: RegionMaxAggregateOutputType | null
  }

  export type RegionAvgAggregateOutputType = {
    id_region: number | null
  }

  export type RegionSumAggregateOutputType = {
    id_region: number | null
  }

  export type RegionMinAggregateOutputType = {
    id_region: number | null
    nombre: string | null
  }

  export type RegionMaxAggregateOutputType = {
    id_region: number | null
    nombre: string | null
  }

  export type RegionCountAggregateOutputType = {
    id_region: number
    nombre: number
    _all: number
  }


  export type RegionAvgAggregateInputType = {
    id_region?: true
  }

  export type RegionSumAggregateInputType = {
    id_region?: true
  }

  export type RegionMinAggregateInputType = {
    id_region?: true
    nombre?: true
  }

  export type RegionMaxAggregateInputType = {
    id_region?: true
    nombre?: true
  }

  export type RegionCountAggregateInputType = {
    id_region?: true
    nombre?: true
    _all?: true
  }

  export type RegionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Region to aggregate.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Regions
    **/
    _count?: true | RegionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegionMaxAggregateInputType
  }

  export type GetRegionAggregateType<T extends RegionAggregateArgs> = {
        [P in keyof T & keyof AggregateRegion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegion[P]>
      : GetScalarType<T[P], AggregateRegion[P]>
  }




  export type RegionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegionWhereInput
    orderBy?: RegionOrderByWithAggregationInput | RegionOrderByWithAggregationInput[]
    by: RegionScalarFieldEnum[] | RegionScalarFieldEnum
    having?: RegionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegionCountAggregateInputType | true
    _avg?: RegionAvgAggregateInputType
    _sum?: RegionSumAggregateInputType
    _min?: RegionMinAggregateInputType
    _max?: RegionMaxAggregateInputType
  }

  export type RegionGroupByOutputType = {
    id_region: number
    nombre: string
    _count: RegionCountAggregateOutputType | null
    _avg: RegionAvgAggregateOutputType | null
    _sum: RegionSumAggregateOutputType | null
    _min: RegionMinAggregateOutputType | null
    _max: RegionMaxAggregateOutputType | null
  }

  type GetRegionGroupByPayload<T extends RegionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegionGroupByOutputType[P]>
            : GetScalarType<T[P], RegionGroupByOutputType[P]>
        }
      >
    >


  export type RegionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_region?: boolean
    nombre?: boolean
    Ciudad?: boolean | Region$CiudadArgs<ExtArgs>
    _count?: boolean | RegionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["region"]>

  export type RegionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_region?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["region"]>

  export type RegionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_region?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["region"]>

  export type RegionSelectScalar = {
    id_region?: boolean
    nombre?: boolean
  }

  export type RegionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_region" | "nombre", ExtArgs["result"]["region"]>
  export type RegionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Ciudad?: boolean | Region$CiudadArgs<ExtArgs>
    _count?: boolean | RegionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RegionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RegionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RegionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Region"
    objects: {
      Ciudad: Prisma.$CiudadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_region: number
      nombre: string
    }, ExtArgs["result"]["region"]>
    composites: {}
  }

  type RegionGetPayload<S extends boolean | null | undefined | RegionDefaultArgs> = $Result.GetResult<Prisma.$RegionPayload, S>

  type RegionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegionCountAggregateInputType | true
    }

  export interface RegionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Region'], meta: { name: 'Region' } }
    /**
     * Find zero or one Region that matches the filter.
     * @param {RegionFindUniqueArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegionFindUniqueArgs>(args: SelectSubset<T, RegionFindUniqueArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Region that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegionFindUniqueOrThrowArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegionFindUniqueOrThrowArgs>(args: SelectSubset<T, RegionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Region that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindFirstArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegionFindFirstArgs>(args?: SelectSubset<T, RegionFindFirstArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Region that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindFirstOrThrowArgs} args - Arguments to find a Region
     * @example
     * // Get one Region
     * const region = await prisma.region.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegionFindFirstOrThrowArgs>(args?: SelectSubset<T, RegionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Regions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Regions
     * const regions = await prisma.region.findMany()
     * 
     * // Get first 10 Regions
     * const regions = await prisma.region.findMany({ take: 10 })
     * 
     * // Only select the `id_region`
     * const regionWithId_regionOnly = await prisma.region.findMany({ select: { id_region: true } })
     * 
     */
    findMany<T extends RegionFindManyArgs>(args?: SelectSubset<T, RegionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Region.
     * @param {RegionCreateArgs} args - Arguments to create a Region.
     * @example
     * // Create one Region
     * const Region = await prisma.region.create({
     *   data: {
     *     // ... data to create a Region
     *   }
     * })
     * 
     */
    create<T extends RegionCreateArgs>(args: SelectSubset<T, RegionCreateArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Regions.
     * @param {RegionCreateManyArgs} args - Arguments to create many Regions.
     * @example
     * // Create many Regions
     * const region = await prisma.region.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegionCreateManyArgs>(args?: SelectSubset<T, RegionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Regions and returns the data saved in the database.
     * @param {RegionCreateManyAndReturnArgs} args - Arguments to create many Regions.
     * @example
     * // Create many Regions
     * const region = await prisma.region.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Regions and only return the `id_region`
     * const regionWithId_regionOnly = await prisma.region.createManyAndReturn({
     *   select: { id_region: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegionCreateManyAndReturnArgs>(args?: SelectSubset<T, RegionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Region.
     * @param {RegionDeleteArgs} args - Arguments to delete one Region.
     * @example
     * // Delete one Region
     * const Region = await prisma.region.delete({
     *   where: {
     *     // ... filter to delete one Region
     *   }
     * })
     * 
     */
    delete<T extends RegionDeleteArgs>(args: SelectSubset<T, RegionDeleteArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Region.
     * @param {RegionUpdateArgs} args - Arguments to update one Region.
     * @example
     * // Update one Region
     * const region = await prisma.region.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegionUpdateArgs>(args: SelectSubset<T, RegionUpdateArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Regions.
     * @param {RegionDeleteManyArgs} args - Arguments to filter Regions to delete.
     * @example
     * // Delete a few Regions
     * const { count } = await prisma.region.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegionDeleteManyArgs>(args?: SelectSubset<T, RegionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Regions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Regions
     * const region = await prisma.region.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegionUpdateManyArgs>(args: SelectSubset<T, RegionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Regions and returns the data updated in the database.
     * @param {RegionUpdateManyAndReturnArgs} args - Arguments to update many Regions.
     * @example
     * // Update many Regions
     * const region = await prisma.region.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Regions and only return the `id_region`
     * const regionWithId_regionOnly = await prisma.region.updateManyAndReturn({
     *   select: { id_region: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegionUpdateManyAndReturnArgs>(args: SelectSubset<T, RegionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Region.
     * @param {RegionUpsertArgs} args - Arguments to update or create a Region.
     * @example
     * // Update or create a Region
     * const region = await prisma.region.upsert({
     *   create: {
     *     // ... data to create a Region
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Region we want to update
     *   }
     * })
     */
    upsert<T extends RegionUpsertArgs>(args: SelectSubset<T, RegionUpsertArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Regions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionCountArgs} args - Arguments to filter Regions to count.
     * @example
     * // Count the number of Regions
     * const count = await prisma.region.count({
     *   where: {
     *     // ... the filter for the Regions we want to count
     *   }
     * })
    **/
    count<T extends RegionCountArgs>(
      args?: Subset<T, RegionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Region.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegionAggregateArgs>(args: Subset<T, RegionAggregateArgs>): Prisma.PrismaPromise<GetRegionAggregateType<T>>

    /**
     * Group by Region.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegionGroupByArgs['orderBy'] }
        : { orderBy?: RegionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Region model
   */
  readonly fields: RegionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Region.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Ciudad<T extends Region$CiudadArgs<ExtArgs> = {}>(args?: Subset<T, Region$CiudadArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Region model
   */
  interface RegionFieldRefs {
    readonly id_region: FieldRef<"Region", 'Int'>
    readonly nombre: FieldRef<"Region", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Region findUnique
   */
  export type RegionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region findUniqueOrThrow
   */
  export type RegionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region findFirst
   */
  export type RegionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Regions.
     */
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region findFirstOrThrow
   */
  export type RegionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Region to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Regions.
     */
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region findMany
   */
  export type RegionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter, which Regions to fetch.
     */
    where?: RegionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Regions to fetch.
     */
    orderBy?: RegionOrderByWithRelationInput | RegionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Regions.
     */
    cursor?: RegionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Regions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Regions.
     */
    skip?: number
    distinct?: RegionScalarFieldEnum | RegionScalarFieldEnum[]
  }

  /**
   * Region create
   */
  export type RegionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The data needed to create a Region.
     */
    data: XOR<RegionCreateInput, RegionUncheckedCreateInput>
  }

  /**
   * Region createMany
   */
  export type RegionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Regions.
     */
    data: RegionCreateManyInput | RegionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Region createManyAndReturn
   */
  export type RegionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * The data used to create many Regions.
     */
    data: RegionCreateManyInput | RegionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Region update
   */
  export type RegionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The data needed to update a Region.
     */
    data: XOR<RegionUpdateInput, RegionUncheckedUpdateInput>
    /**
     * Choose, which Region to update.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region updateMany
   */
  export type RegionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Regions.
     */
    data: XOR<RegionUpdateManyMutationInput, RegionUncheckedUpdateManyInput>
    /**
     * Filter which Regions to update
     */
    where?: RegionWhereInput
    /**
     * Limit how many Regions to update.
     */
    limit?: number
  }

  /**
   * Region updateManyAndReturn
   */
  export type RegionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * The data used to update Regions.
     */
    data: XOR<RegionUpdateManyMutationInput, RegionUncheckedUpdateManyInput>
    /**
     * Filter which Regions to update
     */
    where?: RegionWhereInput
    /**
     * Limit how many Regions to update.
     */
    limit?: number
  }

  /**
   * Region upsert
   */
  export type RegionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * The filter to search for the Region to update in case it exists.
     */
    where: RegionWhereUniqueInput
    /**
     * In case the Region found by the `where` argument doesn't exist, create a new Region with this data.
     */
    create: XOR<RegionCreateInput, RegionUncheckedCreateInput>
    /**
     * In case the Region was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegionUpdateInput, RegionUncheckedUpdateInput>
  }

  /**
   * Region delete
   */
  export type RegionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
    /**
     * Filter which Region to delete.
     */
    where: RegionWhereUniqueInput
  }

  /**
   * Region deleteMany
   */
  export type RegionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Regions to delete
     */
    where?: RegionWhereInput
    /**
     * Limit how many Regions to delete.
     */
    limit?: number
  }

  /**
   * Region.Ciudad
   */
  export type Region$CiudadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    where?: CiudadWhereInput
    orderBy?: CiudadOrderByWithRelationInput | CiudadOrderByWithRelationInput[]
    cursor?: CiudadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiudadScalarFieldEnum | CiudadScalarFieldEnum[]
  }

  /**
   * Region without action
   */
  export type RegionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Region
     */
    select?: RegionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Region
     */
    omit?: RegionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegionInclude<ExtArgs> | null
  }


  /**
   * Model Ciudad
   */

  export type AggregateCiudad = {
    _count: CiudadCountAggregateOutputType | null
    _avg: CiudadAvgAggregateOutputType | null
    _sum: CiudadSumAggregateOutputType | null
    _min: CiudadMinAggregateOutputType | null
    _max: CiudadMaxAggregateOutputType | null
  }

  export type CiudadAvgAggregateOutputType = {
    id_ciudad: number | null
    id_region: number | null
  }

  export type CiudadSumAggregateOutputType = {
    id_ciudad: number | null
    id_region: number | null
  }

  export type CiudadMinAggregateOutputType = {
    id_ciudad: number | null
    nombre: string | null
    id_region: number | null
  }

  export type CiudadMaxAggregateOutputType = {
    id_ciudad: number | null
    nombre: string | null
    id_region: number | null
  }

  export type CiudadCountAggregateOutputType = {
    id_ciudad: number
    nombre: number
    id_region: number
    _all: number
  }


  export type CiudadAvgAggregateInputType = {
    id_ciudad?: true
    id_region?: true
  }

  export type CiudadSumAggregateInputType = {
    id_ciudad?: true
    id_region?: true
  }

  export type CiudadMinAggregateInputType = {
    id_ciudad?: true
    nombre?: true
    id_region?: true
  }

  export type CiudadMaxAggregateInputType = {
    id_ciudad?: true
    nombre?: true
    id_region?: true
  }

  export type CiudadCountAggregateInputType = {
    id_ciudad?: true
    nombre?: true
    id_region?: true
    _all?: true
  }

  export type CiudadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ciudad to aggregate.
     */
    where?: CiudadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ciudads to fetch.
     */
    orderBy?: CiudadOrderByWithRelationInput | CiudadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiudadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ciudads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ciudads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ciudads
    **/
    _count?: true | CiudadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CiudadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CiudadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiudadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiudadMaxAggregateInputType
  }

  export type GetCiudadAggregateType<T extends CiudadAggregateArgs> = {
        [P in keyof T & keyof AggregateCiudad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiudad[P]>
      : GetScalarType<T[P], AggregateCiudad[P]>
  }




  export type CiudadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiudadWhereInput
    orderBy?: CiudadOrderByWithAggregationInput | CiudadOrderByWithAggregationInput[]
    by: CiudadScalarFieldEnum[] | CiudadScalarFieldEnum
    having?: CiudadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiudadCountAggregateInputType | true
    _avg?: CiudadAvgAggregateInputType
    _sum?: CiudadSumAggregateInputType
    _min?: CiudadMinAggregateInputType
    _max?: CiudadMaxAggregateInputType
  }

  export type CiudadGroupByOutputType = {
    id_ciudad: number
    nombre: string
    id_region: number
    _count: CiudadCountAggregateOutputType | null
    _avg: CiudadAvgAggregateOutputType | null
    _sum: CiudadSumAggregateOutputType | null
    _min: CiudadMinAggregateOutputType | null
    _max: CiudadMaxAggregateOutputType | null
  }

  type GetCiudadGroupByPayload<T extends CiudadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiudadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiudadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiudadGroupByOutputType[P]>
            : GetScalarType<T[P], CiudadGroupByOutputType[P]>
        }
      >
    >


  export type CiudadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ciudad?: boolean
    nombre?: boolean
    id_region?: boolean
    Region?: boolean | RegionDefaultArgs<ExtArgs>
    Comuna?: boolean | Ciudad$ComunaArgs<ExtArgs>
    _count?: boolean | CiudadCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciudad"]>

  export type CiudadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ciudad?: boolean
    nombre?: boolean
    id_region?: boolean
    Region?: boolean | RegionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciudad"]>

  export type CiudadSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ciudad?: boolean
    nombre?: boolean
    id_region?: boolean
    Region?: boolean | RegionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciudad"]>

  export type CiudadSelectScalar = {
    id_ciudad?: boolean
    nombre?: boolean
    id_region?: boolean
  }

  export type CiudadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_ciudad" | "nombre" | "id_region", ExtArgs["result"]["ciudad"]>
  export type CiudadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Region?: boolean | RegionDefaultArgs<ExtArgs>
    Comuna?: boolean | Ciudad$ComunaArgs<ExtArgs>
    _count?: boolean | CiudadCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CiudadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Region?: boolean | RegionDefaultArgs<ExtArgs>
  }
  export type CiudadIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Region?: boolean | RegionDefaultArgs<ExtArgs>
  }

  export type $CiudadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ciudad"
    objects: {
      Region: Prisma.$RegionPayload<ExtArgs>
      Comuna: Prisma.$ComunaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_ciudad: number
      nombre: string
      id_region: number
    }, ExtArgs["result"]["ciudad"]>
    composites: {}
  }

  type CiudadGetPayload<S extends boolean | null | undefined | CiudadDefaultArgs> = $Result.GetResult<Prisma.$CiudadPayload, S>

  type CiudadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiudadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiudadCountAggregateInputType | true
    }

  export interface CiudadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ciudad'], meta: { name: 'Ciudad' } }
    /**
     * Find zero or one Ciudad that matches the filter.
     * @param {CiudadFindUniqueArgs} args - Arguments to find a Ciudad
     * @example
     * // Get one Ciudad
     * const ciudad = await prisma.ciudad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiudadFindUniqueArgs>(args: SelectSubset<T, CiudadFindUniqueArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ciudad that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiudadFindUniqueOrThrowArgs} args - Arguments to find a Ciudad
     * @example
     * // Get one Ciudad
     * const ciudad = await prisma.ciudad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiudadFindUniqueOrThrowArgs>(args: SelectSubset<T, CiudadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ciudad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadFindFirstArgs} args - Arguments to find a Ciudad
     * @example
     * // Get one Ciudad
     * const ciudad = await prisma.ciudad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiudadFindFirstArgs>(args?: SelectSubset<T, CiudadFindFirstArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ciudad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadFindFirstOrThrowArgs} args - Arguments to find a Ciudad
     * @example
     * // Get one Ciudad
     * const ciudad = await prisma.ciudad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiudadFindFirstOrThrowArgs>(args?: SelectSubset<T, CiudadFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ciudads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ciudads
     * const ciudads = await prisma.ciudad.findMany()
     * 
     * // Get first 10 Ciudads
     * const ciudads = await prisma.ciudad.findMany({ take: 10 })
     * 
     * // Only select the `id_ciudad`
     * const ciudadWithId_ciudadOnly = await prisma.ciudad.findMany({ select: { id_ciudad: true } })
     * 
     */
    findMany<T extends CiudadFindManyArgs>(args?: SelectSubset<T, CiudadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ciudad.
     * @param {CiudadCreateArgs} args - Arguments to create a Ciudad.
     * @example
     * // Create one Ciudad
     * const Ciudad = await prisma.ciudad.create({
     *   data: {
     *     // ... data to create a Ciudad
     *   }
     * })
     * 
     */
    create<T extends CiudadCreateArgs>(args: SelectSubset<T, CiudadCreateArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ciudads.
     * @param {CiudadCreateManyArgs} args - Arguments to create many Ciudads.
     * @example
     * // Create many Ciudads
     * const ciudad = await prisma.ciudad.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiudadCreateManyArgs>(args?: SelectSubset<T, CiudadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ciudads and returns the data saved in the database.
     * @param {CiudadCreateManyAndReturnArgs} args - Arguments to create many Ciudads.
     * @example
     * // Create many Ciudads
     * const ciudad = await prisma.ciudad.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ciudads and only return the `id_ciudad`
     * const ciudadWithId_ciudadOnly = await prisma.ciudad.createManyAndReturn({
     *   select: { id_ciudad: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiudadCreateManyAndReturnArgs>(args?: SelectSubset<T, CiudadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ciudad.
     * @param {CiudadDeleteArgs} args - Arguments to delete one Ciudad.
     * @example
     * // Delete one Ciudad
     * const Ciudad = await prisma.ciudad.delete({
     *   where: {
     *     // ... filter to delete one Ciudad
     *   }
     * })
     * 
     */
    delete<T extends CiudadDeleteArgs>(args: SelectSubset<T, CiudadDeleteArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ciudad.
     * @param {CiudadUpdateArgs} args - Arguments to update one Ciudad.
     * @example
     * // Update one Ciudad
     * const ciudad = await prisma.ciudad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiudadUpdateArgs>(args: SelectSubset<T, CiudadUpdateArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ciudads.
     * @param {CiudadDeleteManyArgs} args - Arguments to filter Ciudads to delete.
     * @example
     * // Delete a few Ciudads
     * const { count } = await prisma.ciudad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiudadDeleteManyArgs>(args?: SelectSubset<T, CiudadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ciudads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ciudads
     * const ciudad = await prisma.ciudad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiudadUpdateManyArgs>(args: SelectSubset<T, CiudadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ciudads and returns the data updated in the database.
     * @param {CiudadUpdateManyAndReturnArgs} args - Arguments to update many Ciudads.
     * @example
     * // Update many Ciudads
     * const ciudad = await prisma.ciudad.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ciudads and only return the `id_ciudad`
     * const ciudadWithId_ciudadOnly = await prisma.ciudad.updateManyAndReturn({
     *   select: { id_ciudad: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiudadUpdateManyAndReturnArgs>(args: SelectSubset<T, CiudadUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ciudad.
     * @param {CiudadUpsertArgs} args - Arguments to update or create a Ciudad.
     * @example
     * // Update or create a Ciudad
     * const ciudad = await prisma.ciudad.upsert({
     *   create: {
     *     // ... data to create a Ciudad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ciudad we want to update
     *   }
     * })
     */
    upsert<T extends CiudadUpsertArgs>(args: SelectSubset<T, CiudadUpsertArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ciudads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadCountArgs} args - Arguments to filter Ciudads to count.
     * @example
     * // Count the number of Ciudads
     * const count = await prisma.ciudad.count({
     *   where: {
     *     // ... the filter for the Ciudads we want to count
     *   }
     * })
    **/
    count<T extends CiudadCountArgs>(
      args?: Subset<T, CiudadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiudadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ciudad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiudadAggregateArgs>(args: Subset<T, CiudadAggregateArgs>): Prisma.PrismaPromise<GetCiudadAggregateType<T>>

    /**
     * Group by Ciudad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiudadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiudadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiudadGroupByArgs['orderBy'] }
        : { orderBy?: CiudadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiudadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiudadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ciudad model
   */
  readonly fields: CiudadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ciudad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiudadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Region<T extends RegionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegionDefaultArgs<ExtArgs>>): Prisma__RegionClient<$Result.GetResult<Prisma.$RegionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Comuna<T extends Ciudad$ComunaArgs<ExtArgs> = {}>(args?: Subset<T, Ciudad$ComunaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ciudad model
   */
  interface CiudadFieldRefs {
    readonly id_ciudad: FieldRef<"Ciudad", 'Int'>
    readonly nombre: FieldRef<"Ciudad", 'String'>
    readonly id_region: FieldRef<"Ciudad", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Ciudad findUnique
   */
  export type CiudadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * Filter, which Ciudad to fetch.
     */
    where: CiudadWhereUniqueInput
  }

  /**
   * Ciudad findUniqueOrThrow
   */
  export type CiudadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * Filter, which Ciudad to fetch.
     */
    where: CiudadWhereUniqueInput
  }

  /**
   * Ciudad findFirst
   */
  export type CiudadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * Filter, which Ciudad to fetch.
     */
    where?: CiudadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ciudads to fetch.
     */
    orderBy?: CiudadOrderByWithRelationInput | CiudadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ciudads.
     */
    cursor?: CiudadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ciudads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ciudads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ciudads.
     */
    distinct?: CiudadScalarFieldEnum | CiudadScalarFieldEnum[]
  }

  /**
   * Ciudad findFirstOrThrow
   */
  export type CiudadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * Filter, which Ciudad to fetch.
     */
    where?: CiudadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ciudads to fetch.
     */
    orderBy?: CiudadOrderByWithRelationInput | CiudadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ciudads.
     */
    cursor?: CiudadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ciudads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ciudads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ciudads.
     */
    distinct?: CiudadScalarFieldEnum | CiudadScalarFieldEnum[]
  }

  /**
   * Ciudad findMany
   */
  export type CiudadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * Filter, which Ciudads to fetch.
     */
    where?: CiudadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ciudads to fetch.
     */
    orderBy?: CiudadOrderByWithRelationInput | CiudadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ciudads.
     */
    cursor?: CiudadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ciudads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ciudads.
     */
    skip?: number
    distinct?: CiudadScalarFieldEnum | CiudadScalarFieldEnum[]
  }

  /**
   * Ciudad create
   */
  export type CiudadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * The data needed to create a Ciudad.
     */
    data: XOR<CiudadCreateInput, CiudadUncheckedCreateInput>
  }

  /**
   * Ciudad createMany
   */
  export type CiudadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ciudads.
     */
    data: CiudadCreateManyInput | CiudadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ciudad createManyAndReturn
   */
  export type CiudadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * The data used to create many Ciudads.
     */
    data: CiudadCreateManyInput | CiudadCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ciudad update
   */
  export type CiudadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * The data needed to update a Ciudad.
     */
    data: XOR<CiudadUpdateInput, CiudadUncheckedUpdateInput>
    /**
     * Choose, which Ciudad to update.
     */
    where: CiudadWhereUniqueInput
  }

  /**
   * Ciudad updateMany
   */
  export type CiudadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ciudads.
     */
    data: XOR<CiudadUpdateManyMutationInput, CiudadUncheckedUpdateManyInput>
    /**
     * Filter which Ciudads to update
     */
    where?: CiudadWhereInput
    /**
     * Limit how many Ciudads to update.
     */
    limit?: number
  }

  /**
   * Ciudad updateManyAndReturn
   */
  export type CiudadUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * The data used to update Ciudads.
     */
    data: XOR<CiudadUpdateManyMutationInput, CiudadUncheckedUpdateManyInput>
    /**
     * Filter which Ciudads to update
     */
    where?: CiudadWhereInput
    /**
     * Limit how many Ciudads to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ciudad upsert
   */
  export type CiudadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * The filter to search for the Ciudad to update in case it exists.
     */
    where: CiudadWhereUniqueInput
    /**
     * In case the Ciudad found by the `where` argument doesn't exist, create a new Ciudad with this data.
     */
    create: XOR<CiudadCreateInput, CiudadUncheckedCreateInput>
    /**
     * In case the Ciudad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiudadUpdateInput, CiudadUncheckedUpdateInput>
  }

  /**
   * Ciudad delete
   */
  export type CiudadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
    /**
     * Filter which Ciudad to delete.
     */
    where: CiudadWhereUniqueInput
  }

  /**
   * Ciudad deleteMany
   */
  export type CiudadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ciudads to delete
     */
    where?: CiudadWhereInput
    /**
     * Limit how many Ciudads to delete.
     */
    limit?: number
  }

  /**
   * Ciudad.Comuna
   */
  export type Ciudad$ComunaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    where?: ComunaWhereInput
    orderBy?: ComunaOrderByWithRelationInput | ComunaOrderByWithRelationInput[]
    cursor?: ComunaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComunaScalarFieldEnum | ComunaScalarFieldEnum[]
  }

  /**
   * Ciudad without action
   */
  export type CiudadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ciudad
     */
    select?: CiudadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ciudad
     */
    omit?: CiudadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiudadInclude<ExtArgs> | null
  }


  /**
   * Model Comuna
   */

  export type AggregateComuna = {
    _count: ComunaCountAggregateOutputType | null
    _avg: ComunaAvgAggregateOutputType | null
    _sum: ComunaSumAggregateOutputType | null
    _min: ComunaMinAggregateOutputType | null
    _max: ComunaMaxAggregateOutputType | null
  }

  export type ComunaAvgAggregateOutputType = {
    id_comuna: number | null
    id_ciudad: number | null
  }

  export type ComunaSumAggregateOutputType = {
    id_comuna: number | null
    id_ciudad: number | null
  }

  export type ComunaMinAggregateOutputType = {
    id_comuna: number | null
    nombre: string | null
    id_ciudad: number | null
  }

  export type ComunaMaxAggregateOutputType = {
    id_comuna: number | null
    nombre: string | null
    id_ciudad: number | null
  }

  export type ComunaCountAggregateOutputType = {
    id_comuna: number
    nombre: number
    id_ciudad: number
    _all: number
  }


  export type ComunaAvgAggregateInputType = {
    id_comuna?: true
    id_ciudad?: true
  }

  export type ComunaSumAggregateInputType = {
    id_comuna?: true
    id_ciudad?: true
  }

  export type ComunaMinAggregateInputType = {
    id_comuna?: true
    nombre?: true
    id_ciudad?: true
  }

  export type ComunaMaxAggregateInputType = {
    id_comuna?: true
    nombre?: true
    id_ciudad?: true
  }

  export type ComunaCountAggregateInputType = {
    id_comuna?: true
    nombre?: true
    id_ciudad?: true
    _all?: true
  }

  export type ComunaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comuna to aggregate.
     */
    where?: ComunaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comunas to fetch.
     */
    orderBy?: ComunaOrderByWithRelationInput | ComunaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComunaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comunas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comunas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comunas
    **/
    _count?: true | ComunaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComunaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComunaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComunaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComunaMaxAggregateInputType
  }

  export type GetComunaAggregateType<T extends ComunaAggregateArgs> = {
        [P in keyof T & keyof AggregateComuna]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComuna[P]>
      : GetScalarType<T[P], AggregateComuna[P]>
  }




  export type ComunaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComunaWhereInput
    orderBy?: ComunaOrderByWithAggregationInput | ComunaOrderByWithAggregationInput[]
    by: ComunaScalarFieldEnum[] | ComunaScalarFieldEnum
    having?: ComunaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComunaCountAggregateInputType | true
    _avg?: ComunaAvgAggregateInputType
    _sum?: ComunaSumAggregateInputType
    _min?: ComunaMinAggregateInputType
    _max?: ComunaMaxAggregateInputType
  }

  export type ComunaGroupByOutputType = {
    id_comuna: number
    nombre: string
    id_ciudad: number
    _count: ComunaCountAggregateOutputType | null
    _avg: ComunaAvgAggregateOutputType | null
    _sum: ComunaSumAggregateOutputType | null
    _min: ComunaMinAggregateOutputType | null
    _max: ComunaMaxAggregateOutputType | null
  }

  type GetComunaGroupByPayload<T extends ComunaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComunaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComunaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComunaGroupByOutputType[P]>
            : GetScalarType<T[P], ComunaGroupByOutputType[P]>
        }
      >
    >


  export type ComunaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_comuna?: boolean
    nombre?: boolean
    id_ciudad?: boolean
    Ciudad?: boolean | CiudadDefaultArgs<ExtArgs>
    Direccion?: boolean | Comuna$DireccionArgs<ExtArgs>
    _count?: boolean | ComunaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comuna"]>

  export type ComunaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_comuna?: boolean
    nombre?: boolean
    id_ciudad?: boolean
    Ciudad?: boolean | CiudadDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comuna"]>

  export type ComunaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_comuna?: boolean
    nombre?: boolean
    id_ciudad?: boolean
    Ciudad?: boolean | CiudadDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comuna"]>

  export type ComunaSelectScalar = {
    id_comuna?: boolean
    nombre?: boolean
    id_ciudad?: boolean
  }

  export type ComunaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_comuna" | "nombre" | "id_ciudad", ExtArgs["result"]["comuna"]>
  export type ComunaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Ciudad?: boolean | CiudadDefaultArgs<ExtArgs>
    Direccion?: boolean | Comuna$DireccionArgs<ExtArgs>
    _count?: boolean | ComunaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ComunaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Ciudad?: boolean | CiudadDefaultArgs<ExtArgs>
  }
  export type ComunaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Ciudad?: boolean | CiudadDefaultArgs<ExtArgs>
  }

  export type $ComunaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comuna"
    objects: {
      Ciudad: Prisma.$CiudadPayload<ExtArgs>
      Direccion: Prisma.$DireccionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_comuna: number
      nombre: string
      id_ciudad: number
    }, ExtArgs["result"]["comuna"]>
    composites: {}
  }

  type ComunaGetPayload<S extends boolean | null | undefined | ComunaDefaultArgs> = $Result.GetResult<Prisma.$ComunaPayload, S>

  type ComunaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ComunaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComunaCountAggregateInputType | true
    }

  export interface ComunaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comuna'], meta: { name: 'Comuna' } }
    /**
     * Find zero or one Comuna that matches the filter.
     * @param {ComunaFindUniqueArgs} args - Arguments to find a Comuna
     * @example
     * // Get one Comuna
     * const comuna = await prisma.comuna.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComunaFindUniqueArgs>(args: SelectSubset<T, ComunaFindUniqueArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comuna that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ComunaFindUniqueOrThrowArgs} args - Arguments to find a Comuna
     * @example
     * // Get one Comuna
     * const comuna = await prisma.comuna.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComunaFindUniqueOrThrowArgs>(args: SelectSubset<T, ComunaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comuna that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComunaFindFirstArgs} args - Arguments to find a Comuna
     * @example
     * // Get one Comuna
     * const comuna = await prisma.comuna.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComunaFindFirstArgs>(args?: SelectSubset<T, ComunaFindFirstArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comuna that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComunaFindFirstOrThrowArgs} args - Arguments to find a Comuna
     * @example
     * // Get one Comuna
     * const comuna = await prisma.comuna.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComunaFindFirstOrThrowArgs>(args?: SelectSubset<T, ComunaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comunas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComunaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comunas
     * const comunas = await prisma.comuna.findMany()
     * 
     * // Get first 10 Comunas
     * const comunas = await prisma.comuna.findMany({ take: 10 })
     * 
     * // Only select the `id_comuna`
     * const comunaWithId_comunaOnly = await prisma.comuna.findMany({ select: { id_comuna: true } })
     * 
     */
    findMany<T extends ComunaFindManyArgs>(args?: SelectSubset<T, ComunaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comuna.
     * @param {ComunaCreateArgs} args - Arguments to create a Comuna.
     * @example
     * // Create one Comuna
     * const Comuna = await prisma.comuna.create({
     *   data: {
     *     // ... data to create a Comuna
     *   }
     * })
     * 
     */
    create<T extends ComunaCreateArgs>(args: SelectSubset<T, ComunaCreateArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comunas.
     * @param {ComunaCreateManyArgs} args - Arguments to create many Comunas.
     * @example
     * // Create many Comunas
     * const comuna = await prisma.comuna.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComunaCreateManyArgs>(args?: SelectSubset<T, ComunaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comunas and returns the data saved in the database.
     * @param {ComunaCreateManyAndReturnArgs} args - Arguments to create many Comunas.
     * @example
     * // Create many Comunas
     * const comuna = await prisma.comuna.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comunas and only return the `id_comuna`
     * const comunaWithId_comunaOnly = await prisma.comuna.createManyAndReturn({
     *   select: { id_comuna: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComunaCreateManyAndReturnArgs>(args?: SelectSubset<T, ComunaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comuna.
     * @param {ComunaDeleteArgs} args - Arguments to delete one Comuna.
     * @example
     * // Delete one Comuna
     * const Comuna = await prisma.comuna.delete({
     *   where: {
     *     // ... filter to delete one Comuna
     *   }
     * })
     * 
     */
    delete<T extends ComunaDeleteArgs>(args: SelectSubset<T, ComunaDeleteArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comuna.
     * @param {ComunaUpdateArgs} args - Arguments to update one Comuna.
     * @example
     * // Update one Comuna
     * const comuna = await prisma.comuna.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComunaUpdateArgs>(args: SelectSubset<T, ComunaUpdateArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comunas.
     * @param {ComunaDeleteManyArgs} args - Arguments to filter Comunas to delete.
     * @example
     * // Delete a few Comunas
     * const { count } = await prisma.comuna.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComunaDeleteManyArgs>(args?: SelectSubset<T, ComunaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comunas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComunaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comunas
     * const comuna = await prisma.comuna.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComunaUpdateManyArgs>(args: SelectSubset<T, ComunaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comunas and returns the data updated in the database.
     * @param {ComunaUpdateManyAndReturnArgs} args - Arguments to update many Comunas.
     * @example
     * // Update many Comunas
     * const comuna = await prisma.comuna.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comunas and only return the `id_comuna`
     * const comunaWithId_comunaOnly = await prisma.comuna.updateManyAndReturn({
     *   select: { id_comuna: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ComunaUpdateManyAndReturnArgs>(args: SelectSubset<T, ComunaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comuna.
     * @param {ComunaUpsertArgs} args - Arguments to update or create a Comuna.
     * @example
     * // Update or create a Comuna
     * const comuna = await prisma.comuna.upsert({
     *   create: {
     *     // ... data to create a Comuna
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comuna we want to update
     *   }
     * })
     */
    upsert<T extends ComunaUpsertArgs>(args: SelectSubset<T, ComunaUpsertArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comunas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComunaCountArgs} args - Arguments to filter Comunas to count.
     * @example
     * // Count the number of Comunas
     * const count = await prisma.comuna.count({
     *   where: {
     *     // ... the filter for the Comunas we want to count
     *   }
     * })
    **/
    count<T extends ComunaCountArgs>(
      args?: Subset<T, ComunaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComunaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comuna.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComunaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComunaAggregateArgs>(args: Subset<T, ComunaAggregateArgs>): Prisma.PrismaPromise<GetComunaAggregateType<T>>

    /**
     * Group by Comuna.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComunaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComunaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComunaGroupByArgs['orderBy'] }
        : { orderBy?: ComunaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComunaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComunaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comuna model
   */
  readonly fields: ComunaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comuna.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComunaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Ciudad<T extends CiudadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CiudadDefaultArgs<ExtArgs>>): Prisma__CiudadClient<$Result.GetResult<Prisma.$CiudadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Direccion<T extends Comuna$DireccionArgs<ExtArgs> = {}>(args?: Subset<T, Comuna$DireccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Comuna model
   */
  interface ComunaFieldRefs {
    readonly id_comuna: FieldRef<"Comuna", 'Int'>
    readonly nombre: FieldRef<"Comuna", 'String'>
    readonly id_ciudad: FieldRef<"Comuna", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Comuna findUnique
   */
  export type ComunaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * Filter, which Comuna to fetch.
     */
    where: ComunaWhereUniqueInput
  }

  /**
   * Comuna findUniqueOrThrow
   */
  export type ComunaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * Filter, which Comuna to fetch.
     */
    where: ComunaWhereUniqueInput
  }

  /**
   * Comuna findFirst
   */
  export type ComunaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * Filter, which Comuna to fetch.
     */
    where?: ComunaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comunas to fetch.
     */
    orderBy?: ComunaOrderByWithRelationInput | ComunaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comunas.
     */
    cursor?: ComunaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comunas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comunas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comunas.
     */
    distinct?: ComunaScalarFieldEnum | ComunaScalarFieldEnum[]
  }

  /**
   * Comuna findFirstOrThrow
   */
  export type ComunaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * Filter, which Comuna to fetch.
     */
    where?: ComunaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comunas to fetch.
     */
    orderBy?: ComunaOrderByWithRelationInput | ComunaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comunas.
     */
    cursor?: ComunaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comunas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comunas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comunas.
     */
    distinct?: ComunaScalarFieldEnum | ComunaScalarFieldEnum[]
  }

  /**
   * Comuna findMany
   */
  export type ComunaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * Filter, which Comunas to fetch.
     */
    where?: ComunaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comunas to fetch.
     */
    orderBy?: ComunaOrderByWithRelationInput | ComunaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comunas.
     */
    cursor?: ComunaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comunas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comunas.
     */
    skip?: number
    distinct?: ComunaScalarFieldEnum | ComunaScalarFieldEnum[]
  }

  /**
   * Comuna create
   */
  export type ComunaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * The data needed to create a Comuna.
     */
    data: XOR<ComunaCreateInput, ComunaUncheckedCreateInput>
  }

  /**
   * Comuna createMany
   */
  export type ComunaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comunas.
     */
    data: ComunaCreateManyInput | ComunaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Comuna createManyAndReturn
   */
  export type ComunaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * The data used to create many Comunas.
     */
    data: ComunaCreateManyInput | ComunaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comuna update
   */
  export type ComunaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * The data needed to update a Comuna.
     */
    data: XOR<ComunaUpdateInput, ComunaUncheckedUpdateInput>
    /**
     * Choose, which Comuna to update.
     */
    where: ComunaWhereUniqueInput
  }

  /**
   * Comuna updateMany
   */
  export type ComunaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comunas.
     */
    data: XOR<ComunaUpdateManyMutationInput, ComunaUncheckedUpdateManyInput>
    /**
     * Filter which Comunas to update
     */
    where?: ComunaWhereInput
    /**
     * Limit how many Comunas to update.
     */
    limit?: number
  }

  /**
   * Comuna updateManyAndReturn
   */
  export type ComunaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * The data used to update Comunas.
     */
    data: XOR<ComunaUpdateManyMutationInput, ComunaUncheckedUpdateManyInput>
    /**
     * Filter which Comunas to update
     */
    where?: ComunaWhereInput
    /**
     * Limit how many Comunas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comuna upsert
   */
  export type ComunaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * The filter to search for the Comuna to update in case it exists.
     */
    where: ComunaWhereUniqueInput
    /**
     * In case the Comuna found by the `where` argument doesn't exist, create a new Comuna with this data.
     */
    create: XOR<ComunaCreateInput, ComunaUncheckedCreateInput>
    /**
     * In case the Comuna was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComunaUpdateInput, ComunaUncheckedUpdateInput>
  }

  /**
   * Comuna delete
   */
  export type ComunaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
    /**
     * Filter which Comuna to delete.
     */
    where: ComunaWhereUniqueInput
  }

  /**
   * Comuna deleteMany
   */
  export type ComunaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comunas to delete
     */
    where?: ComunaWhereInput
    /**
     * Limit how many Comunas to delete.
     */
    limit?: number
  }

  /**
   * Comuna.Direccion
   */
  export type Comuna$DireccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    where?: DireccionWhereInput
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    cursor?: DireccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DireccionScalarFieldEnum | DireccionScalarFieldEnum[]
  }

  /**
   * Comuna without action
   */
  export type ComunaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comuna
     */
    select?: ComunaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comuna
     */
    omit?: ComunaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComunaInclude<ExtArgs> | null
  }


  /**
   * Model Direccion
   */

  export type AggregateDireccion = {
    _count: DireccionCountAggregateOutputType | null
    _avg: DireccionAvgAggregateOutputType | null
    _sum: DireccionSumAggregateOutputType | null
    _min: DireccionMinAggregateOutputType | null
    _max: DireccionMaxAggregateOutputType | null
  }

  export type DireccionAvgAggregateOutputType = {
    id_direccion: number | null
    id_comuna: number | null
  }

  export type DireccionSumAggregateOutputType = {
    id_direccion: number | null
    id_comuna: number | null
  }

  export type DireccionMinAggregateOutputType = {
    id_direccion: number | null
    calle: string | null
    numero: string | null
    id_comuna: number | null
  }

  export type DireccionMaxAggregateOutputType = {
    id_direccion: number | null
    calle: string | null
    numero: string | null
    id_comuna: number | null
  }

  export type DireccionCountAggregateOutputType = {
    id_direccion: number
    calle: number
    numero: number
    id_comuna: number
    _all: number
  }


  export type DireccionAvgAggregateInputType = {
    id_direccion?: true
    id_comuna?: true
  }

  export type DireccionSumAggregateInputType = {
    id_direccion?: true
    id_comuna?: true
  }

  export type DireccionMinAggregateInputType = {
    id_direccion?: true
    calle?: true
    numero?: true
    id_comuna?: true
  }

  export type DireccionMaxAggregateInputType = {
    id_direccion?: true
    calle?: true
    numero?: true
    id_comuna?: true
  }

  export type DireccionCountAggregateInputType = {
    id_direccion?: true
    calle?: true
    numero?: true
    id_comuna?: true
    _all?: true
  }

  export type DireccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Direccion to aggregate.
     */
    where?: DireccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccions to fetch.
     */
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DireccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Direccions
    **/
    _count?: true | DireccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DireccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DireccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DireccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DireccionMaxAggregateInputType
  }

  export type GetDireccionAggregateType<T extends DireccionAggregateArgs> = {
        [P in keyof T & keyof AggregateDireccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDireccion[P]>
      : GetScalarType<T[P], AggregateDireccion[P]>
  }




  export type DireccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DireccionWhereInput
    orderBy?: DireccionOrderByWithAggregationInput | DireccionOrderByWithAggregationInput[]
    by: DireccionScalarFieldEnum[] | DireccionScalarFieldEnum
    having?: DireccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DireccionCountAggregateInputType | true
    _avg?: DireccionAvgAggregateInputType
    _sum?: DireccionSumAggregateInputType
    _min?: DireccionMinAggregateInputType
    _max?: DireccionMaxAggregateInputType
  }

  export type DireccionGroupByOutputType = {
    id_direccion: number
    calle: string
    numero: string
    id_comuna: number
    _count: DireccionCountAggregateOutputType | null
    _avg: DireccionAvgAggregateOutputType | null
    _sum: DireccionSumAggregateOutputType | null
    _min: DireccionMinAggregateOutputType | null
    _max: DireccionMaxAggregateOutputType | null
  }

  type GetDireccionGroupByPayload<T extends DireccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DireccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DireccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DireccionGroupByOutputType[P]>
            : GetScalarType<T[P], DireccionGroupByOutputType[P]>
        }
      >
    >


  export type DireccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_direccion?: boolean
    calle?: boolean
    numero?: boolean
    id_comuna?: boolean
    Comuna?: boolean | ComunaDefaultArgs<ExtArgs>
    Usuario?: boolean | Direccion$UsuarioArgs<ExtArgs>
    Pyme?: boolean | Direccion$PymeArgs<ExtArgs>
  }, ExtArgs["result"]["direccion"]>

  export type DireccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_direccion?: boolean
    calle?: boolean
    numero?: boolean
    id_comuna?: boolean
    Comuna?: boolean | ComunaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccion"]>

  export type DireccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_direccion?: boolean
    calle?: boolean
    numero?: boolean
    id_comuna?: boolean
    Comuna?: boolean | ComunaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direccion"]>

  export type DireccionSelectScalar = {
    id_direccion?: boolean
    calle?: boolean
    numero?: boolean
    id_comuna?: boolean
  }

  export type DireccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_direccion" | "calle" | "numero" | "id_comuna", ExtArgs["result"]["direccion"]>
  export type DireccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Comuna?: boolean | ComunaDefaultArgs<ExtArgs>
    Usuario?: boolean | Direccion$UsuarioArgs<ExtArgs>
    Pyme?: boolean | Direccion$PymeArgs<ExtArgs>
  }
  export type DireccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Comuna?: boolean | ComunaDefaultArgs<ExtArgs>
  }
  export type DireccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Comuna?: boolean | ComunaDefaultArgs<ExtArgs>
  }

  export type $DireccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Direccion"
    objects: {
      Comuna: Prisma.$ComunaPayload<ExtArgs>
      Usuario: Prisma.$UsuarioPayload<ExtArgs> | null
      Pyme: Prisma.$PymePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_direccion: number
      calle: string
      numero: string
      id_comuna: number
    }, ExtArgs["result"]["direccion"]>
    composites: {}
  }

  type DireccionGetPayload<S extends boolean | null | undefined | DireccionDefaultArgs> = $Result.GetResult<Prisma.$DireccionPayload, S>

  type DireccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DireccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DireccionCountAggregateInputType | true
    }

  export interface DireccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Direccion'], meta: { name: 'Direccion' } }
    /**
     * Find zero or one Direccion that matches the filter.
     * @param {DireccionFindUniqueArgs} args - Arguments to find a Direccion
     * @example
     * // Get one Direccion
     * const direccion = await prisma.direccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DireccionFindUniqueArgs>(args: SelectSubset<T, DireccionFindUniqueArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Direccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DireccionFindUniqueOrThrowArgs} args - Arguments to find a Direccion
     * @example
     * // Get one Direccion
     * const direccion = await prisma.direccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DireccionFindUniqueOrThrowArgs>(args: SelectSubset<T, DireccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Direccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFindFirstArgs} args - Arguments to find a Direccion
     * @example
     * // Get one Direccion
     * const direccion = await prisma.direccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DireccionFindFirstArgs>(args?: SelectSubset<T, DireccionFindFirstArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Direccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFindFirstOrThrowArgs} args - Arguments to find a Direccion
     * @example
     * // Get one Direccion
     * const direccion = await prisma.direccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DireccionFindFirstOrThrowArgs>(args?: SelectSubset<T, DireccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Direccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Direccions
     * const direccions = await prisma.direccion.findMany()
     * 
     * // Get first 10 Direccions
     * const direccions = await prisma.direccion.findMany({ take: 10 })
     * 
     * // Only select the `id_direccion`
     * const direccionWithId_direccionOnly = await prisma.direccion.findMany({ select: { id_direccion: true } })
     * 
     */
    findMany<T extends DireccionFindManyArgs>(args?: SelectSubset<T, DireccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Direccion.
     * @param {DireccionCreateArgs} args - Arguments to create a Direccion.
     * @example
     * // Create one Direccion
     * const Direccion = await prisma.direccion.create({
     *   data: {
     *     // ... data to create a Direccion
     *   }
     * })
     * 
     */
    create<T extends DireccionCreateArgs>(args: SelectSubset<T, DireccionCreateArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Direccions.
     * @param {DireccionCreateManyArgs} args - Arguments to create many Direccions.
     * @example
     * // Create many Direccions
     * const direccion = await prisma.direccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DireccionCreateManyArgs>(args?: SelectSubset<T, DireccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Direccions and returns the data saved in the database.
     * @param {DireccionCreateManyAndReturnArgs} args - Arguments to create many Direccions.
     * @example
     * // Create many Direccions
     * const direccion = await prisma.direccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Direccions and only return the `id_direccion`
     * const direccionWithId_direccionOnly = await prisma.direccion.createManyAndReturn({
     *   select: { id_direccion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DireccionCreateManyAndReturnArgs>(args?: SelectSubset<T, DireccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Direccion.
     * @param {DireccionDeleteArgs} args - Arguments to delete one Direccion.
     * @example
     * // Delete one Direccion
     * const Direccion = await prisma.direccion.delete({
     *   where: {
     *     // ... filter to delete one Direccion
     *   }
     * })
     * 
     */
    delete<T extends DireccionDeleteArgs>(args: SelectSubset<T, DireccionDeleteArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Direccion.
     * @param {DireccionUpdateArgs} args - Arguments to update one Direccion.
     * @example
     * // Update one Direccion
     * const direccion = await prisma.direccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DireccionUpdateArgs>(args: SelectSubset<T, DireccionUpdateArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Direccions.
     * @param {DireccionDeleteManyArgs} args - Arguments to filter Direccions to delete.
     * @example
     * // Delete a few Direccions
     * const { count } = await prisma.direccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DireccionDeleteManyArgs>(args?: SelectSubset<T, DireccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Direccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Direccions
     * const direccion = await prisma.direccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DireccionUpdateManyArgs>(args: SelectSubset<T, DireccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Direccions and returns the data updated in the database.
     * @param {DireccionUpdateManyAndReturnArgs} args - Arguments to update many Direccions.
     * @example
     * // Update many Direccions
     * const direccion = await prisma.direccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Direccions and only return the `id_direccion`
     * const direccionWithId_direccionOnly = await prisma.direccion.updateManyAndReturn({
     *   select: { id_direccion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DireccionUpdateManyAndReturnArgs>(args: SelectSubset<T, DireccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Direccion.
     * @param {DireccionUpsertArgs} args - Arguments to update or create a Direccion.
     * @example
     * // Update or create a Direccion
     * const direccion = await prisma.direccion.upsert({
     *   create: {
     *     // ... data to create a Direccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Direccion we want to update
     *   }
     * })
     */
    upsert<T extends DireccionUpsertArgs>(args: SelectSubset<T, DireccionUpsertArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Direccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionCountArgs} args - Arguments to filter Direccions to count.
     * @example
     * // Count the number of Direccions
     * const count = await prisma.direccion.count({
     *   where: {
     *     // ... the filter for the Direccions we want to count
     *   }
     * })
    **/
    count<T extends DireccionCountArgs>(
      args?: Subset<T, DireccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DireccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Direccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DireccionAggregateArgs>(args: Subset<T, DireccionAggregateArgs>): Prisma.PrismaPromise<GetDireccionAggregateType<T>>

    /**
     * Group by Direccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DireccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DireccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DireccionGroupByArgs['orderBy'] }
        : { orderBy?: DireccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DireccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDireccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Direccion model
   */
  readonly fields: DireccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Direccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DireccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Comuna<T extends ComunaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ComunaDefaultArgs<ExtArgs>>): Prisma__ComunaClient<$Result.GetResult<Prisma.$ComunaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Usuario<T extends Direccion$UsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Direccion$UsuarioArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Pyme<T extends Direccion$PymeArgs<ExtArgs> = {}>(args?: Subset<T, Direccion$PymeArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Direccion model
   */
  interface DireccionFieldRefs {
    readonly id_direccion: FieldRef<"Direccion", 'Int'>
    readonly calle: FieldRef<"Direccion", 'String'>
    readonly numero: FieldRef<"Direccion", 'String'>
    readonly id_comuna: FieldRef<"Direccion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Direccion findUnique
   */
  export type DireccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccion to fetch.
     */
    where: DireccionWhereUniqueInput
  }

  /**
   * Direccion findUniqueOrThrow
   */
  export type DireccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccion to fetch.
     */
    where: DireccionWhereUniqueInput
  }

  /**
   * Direccion findFirst
   */
  export type DireccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccion to fetch.
     */
    where?: DireccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccions to fetch.
     */
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Direccions.
     */
    cursor?: DireccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Direccions.
     */
    distinct?: DireccionScalarFieldEnum | DireccionScalarFieldEnum[]
  }

  /**
   * Direccion findFirstOrThrow
   */
  export type DireccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccion to fetch.
     */
    where?: DireccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccions to fetch.
     */
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Direccions.
     */
    cursor?: DireccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Direccions.
     */
    distinct?: DireccionScalarFieldEnum | DireccionScalarFieldEnum[]
  }

  /**
   * Direccion findMany
   */
  export type DireccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter, which Direccions to fetch.
     */
    where?: DireccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Direccions to fetch.
     */
    orderBy?: DireccionOrderByWithRelationInput | DireccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Direccions.
     */
    cursor?: DireccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Direccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Direccions.
     */
    skip?: number
    distinct?: DireccionScalarFieldEnum | DireccionScalarFieldEnum[]
  }

  /**
   * Direccion create
   */
  export type DireccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * The data needed to create a Direccion.
     */
    data: XOR<DireccionCreateInput, DireccionUncheckedCreateInput>
  }

  /**
   * Direccion createMany
   */
  export type DireccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Direccions.
     */
    data: DireccionCreateManyInput | DireccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Direccion createManyAndReturn
   */
  export type DireccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * The data used to create many Direccions.
     */
    data: DireccionCreateManyInput | DireccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Direccion update
   */
  export type DireccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * The data needed to update a Direccion.
     */
    data: XOR<DireccionUpdateInput, DireccionUncheckedUpdateInput>
    /**
     * Choose, which Direccion to update.
     */
    where: DireccionWhereUniqueInput
  }

  /**
   * Direccion updateMany
   */
  export type DireccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Direccions.
     */
    data: XOR<DireccionUpdateManyMutationInput, DireccionUncheckedUpdateManyInput>
    /**
     * Filter which Direccions to update
     */
    where?: DireccionWhereInput
    /**
     * Limit how many Direccions to update.
     */
    limit?: number
  }

  /**
   * Direccion updateManyAndReturn
   */
  export type DireccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * The data used to update Direccions.
     */
    data: XOR<DireccionUpdateManyMutationInput, DireccionUncheckedUpdateManyInput>
    /**
     * Filter which Direccions to update
     */
    where?: DireccionWhereInput
    /**
     * Limit how many Direccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Direccion upsert
   */
  export type DireccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * The filter to search for the Direccion to update in case it exists.
     */
    where: DireccionWhereUniqueInput
    /**
     * In case the Direccion found by the `where` argument doesn't exist, create a new Direccion with this data.
     */
    create: XOR<DireccionCreateInput, DireccionUncheckedCreateInput>
    /**
     * In case the Direccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DireccionUpdateInput, DireccionUncheckedUpdateInput>
  }

  /**
   * Direccion delete
   */
  export type DireccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    /**
     * Filter which Direccion to delete.
     */
    where: DireccionWhereUniqueInput
  }

  /**
   * Direccion deleteMany
   */
  export type DireccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Direccions to delete
     */
    where?: DireccionWhereInput
    /**
     * Limit how many Direccions to delete.
     */
    limit?: number
  }

  /**
   * Direccion.Usuario
   */
  export type Direccion$UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
  }

  /**
   * Direccion.Pyme
   */
  export type Direccion$PymeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    where?: PymeWhereInput
  }

  /**
   * Direccion without action
   */
  export type DireccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
  }


  /**
   * Model Rol
   */

  export type AggregateRol = {
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  export type RolAvgAggregateOutputType = {
    id_rol: number | null
  }

  export type RolSumAggregateOutputType = {
    id_rol: number | null
  }

  export type RolMinAggregateOutputType = {
    id_rol: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type RolMaxAggregateOutputType = {
    id_rol: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type RolCountAggregateOutputType = {
    id_rol: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type RolAvgAggregateInputType = {
    id_rol?: true
  }

  export type RolSumAggregateInputType = {
    id_rol?: true
  }

  export type RolMinAggregateInputType = {
    id_rol?: true
    nombre?: true
    descripcion?: true
  }

  export type RolMaxAggregateInputType = {
    id_rol?: true
    nombre?: true
    descripcion?: true
  }

  export type RolCountAggregateInputType = {
    id_rol?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type RolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rol to aggregate.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Rols
    **/
    _count?: true | RolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolMaxAggregateInputType
  }

  export type GetRolAggregateType<T extends RolAggregateArgs> = {
        [P in keyof T & keyof AggregateRol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRol[P]>
      : GetScalarType<T[P], AggregateRol[P]>
  }




  export type RolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolWhereInput
    orderBy?: RolOrderByWithAggregationInput | RolOrderByWithAggregationInput[]
    by: RolScalarFieldEnum[] | RolScalarFieldEnum
    having?: RolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolCountAggregateInputType | true
    _avg?: RolAvgAggregateInputType
    _sum?: RolSumAggregateInputType
    _min?: RolMinAggregateInputType
    _max?: RolMaxAggregateInputType
  }

  export type RolGroupByOutputType = {
    id_rol: number
    nombre: string
    descripcion: string | null
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  type GetRolGroupByPayload<T extends RolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolGroupByOutputType[P]>
            : GetScalarType<T[P], RolGroupByOutputType[P]>
        }
      >
    >


  export type RolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_rol?: boolean
    nombre?: boolean
    descripcion?: boolean
    Usuario?: boolean | Rol$UsuarioArgs<ExtArgs>
    Permiso?: boolean | Rol$PermisoArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rol"]>

  export type RolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_rol?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["rol"]>

  export type RolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_rol?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["rol"]>

  export type RolSelectScalar = {
    id_rol?: boolean
    nombre?: boolean
    descripcion?: boolean
  }

  export type RolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_rol" | "nombre" | "descripcion", ExtArgs["result"]["rol"]>
  export type RolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | Rol$UsuarioArgs<ExtArgs>
    Permiso?: boolean | Rol$PermisoArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RolIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RolIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Rol"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>[]
      Permiso: Prisma.$PermisoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_rol: number
      nombre: string
      descripcion: string | null
    }, ExtArgs["result"]["rol"]>
    composites: {}
  }

  type RolGetPayload<S extends boolean | null | undefined | RolDefaultArgs> = $Result.GetResult<Prisma.$RolPayload, S>

  type RolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolCountAggregateInputType | true
    }

  export interface RolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Rol'], meta: { name: 'Rol' } }
    /**
     * Find zero or one Rol that matches the filter.
     * @param {RolFindUniqueArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolFindUniqueArgs>(args: SelectSubset<T, RolFindUniqueArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rol that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolFindUniqueOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolFindUniqueOrThrowArgs>(args: SelectSubset<T, RolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindFirstArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolFindFirstArgs>(args?: SelectSubset<T, RolFindFirstArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindFirstOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolFindFirstOrThrowArgs>(args?: SelectSubset<T, RolFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rols
     * const rols = await prisma.rol.findMany()
     * 
     * // Get first 10 Rols
     * const rols = await prisma.rol.findMany({ take: 10 })
     * 
     * // Only select the `id_rol`
     * const rolWithId_rolOnly = await prisma.rol.findMany({ select: { id_rol: true } })
     * 
     */
    findMany<T extends RolFindManyArgs>(args?: SelectSubset<T, RolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rol.
     * @param {RolCreateArgs} args - Arguments to create a Rol.
     * @example
     * // Create one Rol
     * const Rol = await prisma.rol.create({
     *   data: {
     *     // ... data to create a Rol
     *   }
     * })
     * 
     */
    create<T extends RolCreateArgs>(args: SelectSubset<T, RolCreateArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rols.
     * @param {RolCreateManyArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolCreateManyArgs>(args?: SelectSubset<T, RolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rols and returns the data saved in the database.
     * @param {RolCreateManyAndReturnArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rols and only return the `id_rol`
     * const rolWithId_rolOnly = await prisma.rol.createManyAndReturn({
     *   select: { id_rol: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolCreateManyAndReturnArgs>(args?: SelectSubset<T, RolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rol.
     * @param {RolDeleteArgs} args - Arguments to delete one Rol.
     * @example
     * // Delete one Rol
     * const Rol = await prisma.rol.delete({
     *   where: {
     *     // ... filter to delete one Rol
     *   }
     * })
     * 
     */
    delete<T extends RolDeleteArgs>(args: SelectSubset<T, RolDeleteArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rol.
     * @param {RolUpdateArgs} args - Arguments to update one Rol.
     * @example
     * // Update one Rol
     * const rol = await prisma.rol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolUpdateArgs>(args: SelectSubset<T, RolUpdateArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rols.
     * @param {RolDeleteManyArgs} args - Arguments to filter Rols to delete.
     * @example
     * // Delete a few Rols
     * const { count } = await prisma.rol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolDeleteManyArgs>(args?: SelectSubset<T, RolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolUpdateManyArgs>(args: SelectSubset<T, RolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols and returns the data updated in the database.
     * @param {RolUpdateManyAndReturnArgs} args - Arguments to update many Rols.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rols and only return the `id_rol`
     * const rolWithId_rolOnly = await prisma.rol.updateManyAndReturn({
     *   select: { id_rol: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolUpdateManyAndReturnArgs>(args: SelectSubset<T, RolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rol.
     * @param {RolUpsertArgs} args - Arguments to update or create a Rol.
     * @example
     * // Update or create a Rol
     * const rol = await prisma.rol.upsert({
     *   create: {
     *     // ... data to create a Rol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rol we want to update
     *   }
     * })
     */
    upsert<T extends RolUpsertArgs>(args: SelectSubset<T, RolUpsertArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolCountArgs} args - Arguments to filter Rols to count.
     * @example
     * // Count the number of Rols
     * const count = await prisma.rol.count({
     *   where: {
     *     // ... the filter for the Rols we want to count
     *   }
     * })
    **/
    count<T extends RolCountArgs>(
      args?: Subset<T, RolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolAggregateArgs>(args: Subset<T, RolAggregateArgs>): Prisma.PrismaPromise<GetRolAggregateType<T>>

    /**
     * Group by Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolGroupByArgs['orderBy'] }
        : { orderBy?: RolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Rol model
   */
  readonly fields: RolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Rol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends Rol$UsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Rol$UsuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Permiso<T extends Rol$PermisoArgs<ExtArgs> = {}>(args?: Subset<T, Rol$PermisoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Rol model
   */
  interface RolFieldRefs {
    readonly id_rol: FieldRef<"Rol", 'Int'>
    readonly nombre: FieldRef<"Rol", 'String'>
    readonly descripcion: FieldRef<"Rol", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Rol findUnique
   */
  export type RolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol findUniqueOrThrow
   */
  export type RolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol findFirst
   */
  export type RolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol findFirstOrThrow
   */
  export type RolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rol to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol findMany
   */
  export type RolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter, which Rols to fetch.
     */
    where?: RolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rols to fetch.
     */
    orderBy?: RolOrderByWithRelationInput | RolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Rols.
     */
    cursor?: RolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rols.
     */
    skip?: number
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * Rol create
   */
  export type RolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The data needed to create a Rol.
     */
    data: XOR<RolCreateInput, RolUncheckedCreateInput>
  }

  /**
   * Rol createMany
   */
  export type RolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Rols.
     */
    data: RolCreateManyInput | RolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rol createManyAndReturn
   */
  export type RolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * The data used to create many Rols.
     */
    data: RolCreateManyInput | RolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rol update
   */
  export type RolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The data needed to update a Rol.
     */
    data: XOR<RolUpdateInput, RolUncheckedUpdateInput>
    /**
     * Choose, which Rol to update.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol updateMany
   */
  export type RolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Rols.
     */
    data: XOR<RolUpdateManyMutationInput, RolUncheckedUpdateManyInput>
    /**
     * Filter which Rols to update
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to update.
     */
    limit?: number
  }

  /**
   * Rol updateManyAndReturn
   */
  export type RolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * The data used to update Rols.
     */
    data: XOR<RolUpdateManyMutationInput, RolUncheckedUpdateManyInput>
    /**
     * Filter which Rols to update
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to update.
     */
    limit?: number
  }

  /**
   * Rol upsert
   */
  export type RolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * The filter to search for the Rol to update in case it exists.
     */
    where: RolWhereUniqueInput
    /**
     * In case the Rol found by the `where` argument doesn't exist, create a new Rol with this data.
     */
    create: XOR<RolCreateInput, RolUncheckedCreateInput>
    /**
     * In case the Rol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolUpdateInput, RolUncheckedUpdateInput>
  }

  /**
   * Rol delete
   */
  export type RolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    /**
     * Filter which Rol to delete.
     */
    where: RolWhereUniqueInput
  }

  /**
   * Rol deleteMany
   */
  export type RolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rols to delete
     */
    where?: RolWhereInput
    /**
     * Limit how many Rols to delete.
     */
    limit?: number
  }

  /**
   * Rol.Usuario
   */
  export type Rol$UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    cursor?: UsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Rol.Permiso
   */
  export type Rol$PermisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    cursor?: PermisoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Rol without action
   */
  export type RolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id_usuario: number | null
    id_direccion: number | null
    id_rol: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id_usuario: number | null
    id_direccion: number | null
    id_rol: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: number | null
    nombre: string | null
    email: string | null
    password: string | null
    fecha_registro: Date | null
    ultimo_login: Date | null
    esta_activo: boolean | null
    id_direccion: number | null
    id_rol: number | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: number | null
    nombre: string | null
    email: string | null
    password: string | null
    fecha_registro: Date | null
    ultimo_login: Date | null
    esta_activo: boolean | null
    id_direccion: number | null
    id_rol: number | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    nombre: number
    email: number
    password: number
    fecha_registro: number
    ultimo_login: number
    esta_activo: number
    id_direccion: number
    id_rol: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id_usuario?: true
    id_direccion?: true
    id_rol?: true
  }

  export type UsuarioSumAggregateInputType = {
    id_usuario?: true
    id_direccion?: true
    id_rol?: true
  }

  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    nombre?: true
    email?: true
    password?: true
    fecha_registro?: true
    ultimo_login?: true
    esta_activo?: true
    id_direccion?: true
    id_rol?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    nombre?: true
    email?: true
    password?: true
    fecha_registro?: true
    ultimo_login?: true
    esta_activo?: true
    id_direccion?: true
    id_rol?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    nombre?: true
    email?: true
    password?: true
    fecha_registro?: true
    ultimo_login?: true
    esta_activo?: true
    id_direccion?: true
    id_rol?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: number
    nombre: string
    email: string
    password: string
    fecha_registro: Date
    ultimo_login: Date | null
    esta_activo: boolean
    id_direccion: number | null
    id_rol: number
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    fecha_registro?: boolean
    ultimo_login?: boolean
    esta_activo?: boolean
    id_direccion?: boolean
    id_rol?: boolean
    Direccion?: boolean | Usuario$DireccionArgs<ExtArgs>
    Rol?: boolean | RolDefaultArgs<ExtArgs>
    Pyme?: boolean | Usuario$PymeArgs<ExtArgs>
    CarroDeCompras?: boolean | Usuario$CarroDeComprasArgs<ExtArgs>
    ListaDeDeseos?: boolean | Usuario$ListaDeDeseosArgs<ExtArgs>
    Valoracion?: boolean | Usuario$ValoracionArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    fecha_registro?: boolean
    ultimo_login?: boolean
    esta_activo?: boolean
    id_direccion?: boolean
    id_rol?: boolean
    Direccion?: boolean | Usuario$DireccionArgs<ExtArgs>
    Rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    fecha_registro?: boolean
    ultimo_login?: boolean
    esta_activo?: boolean
    id_direccion?: boolean
    id_rol?: boolean
    Direccion?: boolean | Usuario$DireccionArgs<ExtArgs>
    Rol?: boolean | RolDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id_usuario?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    fecha_registro?: boolean
    ultimo_login?: boolean
    esta_activo?: boolean
    id_direccion?: boolean
    id_rol?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "nombre" | "email" | "password" | "fecha_registro" | "ultimo_login" | "esta_activo" | "id_direccion" | "id_rol", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Direccion?: boolean | Usuario$DireccionArgs<ExtArgs>
    Rol?: boolean | RolDefaultArgs<ExtArgs>
    Pyme?: boolean | Usuario$PymeArgs<ExtArgs>
    CarroDeCompras?: boolean | Usuario$CarroDeComprasArgs<ExtArgs>
    ListaDeDeseos?: boolean | Usuario$ListaDeDeseosArgs<ExtArgs>
    Valoracion?: boolean | Usuario$ValoracionArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Direccion?: boolean | Usuario$DireccionArgs<ExtArgs>
    Rol?: boolean | RolDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Direccion?: boolean | Usuario$DireccionArgs<ExtArgs>
    Rol?: boolean | RolDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      Direccion: Prisma.$DireccionPayload<ExtArgs> | null
      Rol: Prisma.$RolPayload<ExtArgs>
      Pyme: Prisma.$PymePayload<ExtArgs> | null
      CarroDeCompras: Prisma.$CarroDeComprasPayload<ExtArgs>[]
      ListaDeDeseos: Prisma.$ListaDeDeseosPayload<ExtArgs> | null
      Valoracion: Prisma.$ValoracionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      nombre: string
      email: string
      password: string
      fecha_registro: Date
      ultimo_login: Date | null
      esta_activo: boolean
      id_direccion: number | null
      id_rol: number
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Direccion<T extends Usuario$DireccionArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$DireccionArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Rol<T extends RolDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RolDefaultArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Pyme<T extends Usuario$PymeArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$PymeArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    CarroDeCompras<T extends Usuario$CarroDeComprasArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$CarroDeComprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ListaDeDeseos<T extends Usuario$ListaDeDeseosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ListaDeDeseosArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Valoracion<T extends Usuario$ValoracionArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$ValoracionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id_usuario: FieldRef<"Usuario", 'Int'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly password: FieldRef<"Usuario", 'String'>
    readonly fecha_registro: FieldRef<"Usuario", 'DateTime'>
    readonly ultimo_login: FieldRef<"Usuario", 'DateTime'>
    readonly esta_activo: FieldRef<"Usuario", 'Boolean'>
    readonly id_direccion: FieldRef<"Usuario", 'Int'>
    readonly id_rol: FieldRef<"Usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.Direccion
   */
  export type Usuario$DireccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Direccion
     */
    select?: DireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Direccion
     */
    omit?: DireccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DireccionInclude<ExtArgs> | null
    where?: DireccionWhereInput
  }

  /**
   * Usuario.Pyme
   */
  export type Usuario$PymeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    where?: PymeWhereInput
  }

  /**
   * Usuario.CarroDeCompras
   */
  export type Usuario$CarroDeComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    where?: CarroDeComprasWhereInput
    orderBy?: CarroDeComprasOrderByWithRelationInput | CarroDeComprasOrderByWithRelationInput[]
    cursor?: CarroDeComprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CarroDeComprasScalarFieldEnum | CarroDeComprasScalarFieldEnum[]
  }

  /**
   * Usuario.ListaDeDeseos
   */
  export type Usuario$ListaDeDeseosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    where?: ListaDeDeseosWhereInput
  }

  /**
   * Usuario.Valoracion
   */
  export type Usuario$ValoracionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    where?: ValoracionWhereInput
    orderBy?: ValoracionOrderByWithRelationInput | ValoracionOrderByWithRelationInput[]
    cursor?: ValoracionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ValoracionScalarFieldEnum | ValoracionScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Permiso
   */

  export type AggregatePermiso = {
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  export type PermisoAvgAggregateOutputType = {
    id_permiso: number | null
    id_rol: number | null
  }

  export type PermisoSumAggregateOutputType = {
    id_permiso: number | null
    id_rol: number | null
  }

  export type PermisoMinAggregateOutputType = {
    id_permiso: number | null
    nombre: string | null
    descripcion: string | null
    id_rol: number | null
  }

  export type PermisoMaxAggregateOutputType = {
    id_permiso: number | null
    nombre: string | null
    descripcion: string | null
    id_rol: number | null
  }

  export type PermisoCountAggregateOutputType = {
    id_permiso: number
    nombre: number
    descripcion: number
    id_rol: number
    _all: number
  }


  export type PermisoAvgAggregateInputType = {
    id_permiso?: true
    id_rol?: true
  }

  export type PermisoSumAggregateInputType = {
    id_permiso?: true
    id_rol?: true
  }

  export type PermisoMinAggregateInputType = {
    id_permiso?: true
    nombre?: true
    descripcion?: true
    id_rol?: true
  }

  export type PermisoMaxAggregateInputType = {
    id_permiso?: true
    nombre?: true
    descripcion?: true
    id_rol?: true
  }

  export type PermisoCountAggregateInputType = {
    id_permiso?: true
    nombre?: true
    descripcion?: true
    id_rol?: true
    _all?: true
  }

  export type PermisoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permiso to aggregate.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permisos
    **/
    _count?: true | PermisoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisoMaxAggregateInputType
  }

  export type GetPermisoAggregateType<T extends PermisoAggregateArgs> = {
        [P in keyof T & keyof AggregatePermiso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermiso[P]>
      : GetScalarType<T[P], AggregatePermiso[P]>
  }




  export type PermisoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermisoWhereInput
    orderBy?: PermisoOrderByWithAggregationInput | PermisoOrderByWithAggregationInput[]
    by: PermisoScalarFieldEnum[] | PermisoScalarFieldEnum
    having?: PermisoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisoCountAggregateInputType | true
    _avg?: PermisoAvgAggregateInputType
    _sum?: PermisoSumAggregateInputType
    _min?: PermisoMinAggregateInputType
    _max?: PermisoMaxAggregateInputType
  }

  export type PermisoGroupByOutputType = {
    id_permiso: number
    nombre: string
    descripcion: string | null
    id_rol: number | null
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  type GetPermisoGroupByPayload<T extends PermisoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisoGroupByOutputType[P]>
            : GetScalarType<T[P], PermisoGroupByOutputType[P]>
        }
      >
    >


  export type PermisoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_permiso?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_rol?: boolean
    Rol?: boolean | Permiso$RolArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_permiso?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_rol?: boolean
    Rol?: boolean | Permiso$RolArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_permiso?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_rol?: boolean
    Rol?: boolean | Permiso$RolArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type PermisoSelectScalar = {
    id_permiso?: boolean
    nombre?: boolean
    descripcion?: boolean
    id_rol?: boolean
  }

  export type PermisoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_permiso" | "nombre" | "descripcion" | "id_rol", ExtArgs["result"]["permiso"]>
  export type PermisoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Rol?: boolean | Permiso$RolArgs<ExtArgs>
  }
  export type PermisoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Rol?: boolean | Permiso$RolArgs<ExtArgs>
  }
  export type PermisoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Rol?: boolean | Permiso$RolArgs<ExtArgs>
  }

  export type $PermisoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permiso"
    objects: {
      Rol: Prisma.$RolPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_permiso: number
      nombre: string
      descripcion: string | null
      id_rol: number | null
    }, ExtArgs["result"]["permiso"]>
    composites: {}
  }

  type PermisoGetPayload<S extends boolean | null | undefined | PermisoDefaultArgs> = $Result.GetResult<Prisma.$PermisoPayload, S>

  type PermisoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermisoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermisoCountAggregateInputType | true
    }

  export interface PermisoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permiso'], meta: { name: 'Permiso' } }
    /**
     * Find zero or one Permiso that matches the filter.
     * @param {PermisoFindUniqueArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermisoFindUniqueArgs>(args: SelectSubset<T, PermisoFindUniqueArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permiso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermisoFindUniqueOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermisoFindUniqueOrThrowArgs>(args: SelectSubset<T, PermisoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermisoFindFirstArgs>(args?: SelectSubset<T, PermisoFindFirstArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindFirstOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermisoFindFirstOrThrowArgs>(args?: SelectSubset<T, PermisoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permisos
     * const permisos = await prisma.permiso.findMany()
     * 
     * // Get first 10 Permisos
     * const permisos = await prisma.permiso.findMany({ take: 10 })
     * 
     * // Only select the `id_permiso`
     * const permisoWithId_permisoOnly = await prisma.permiso.findMany({ select: { id_permiso: true } })
     * 
     */
    findMany<T extends PermisoFindManyArgs>(args?: SelectSubset<T, PermisoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permiso.
     * @param {PermisoCreateArgs} args - Arguments to create a Permiso.
     * @example
     * // Create one Permiso
     * const Permiso = await prisma.permiso.create({
     *   data: {
     *     // ... data to create a Permiso
     *   }
     * })
     * 
     */
    create<T extends PermisoCreateArgs>(args: SelectSubset<T, PermisoCreateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permisos.
     * @param {PermisoCreateManyArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermisoCreateManyArgs>(args?: SelectSubset<T, PermisoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permisos and returns the data saved in the database.
     * @param {PermisoCreateManyAndReturnArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permisos and only return the `id_permiso`
     * const permisoWithId_permisoOnly = await prisma.permiso.createManyAndReturn({
     *   select: { id_permiso: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermisoCreateManyAndReturnArgs>(args?: SelectSubset<T, PermisoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permiso.
     * @param {PermisoDeleteArgs} args - Arguments to delete one Permiso.
     * @example
     * // Delete one Permiso
     * const Permiso = await prisma.permiso.delete({
     *   where: {
     *     // ... filter to delete one Permiso
     *   }
     * })
     * 
     */
    delete<T extends PermisoDeleteArgs>(args: SelectSubset<T, PermisoDeleteArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permiso.
     * @param {PermisoUpdateArgs} args - Arguments to update one Permiso.
     * @example
     * // Update one Permiso
     * const permiso = await prisma.permiso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermisoUpdateArgs>(args: SelectSubset<T, PermisoUpdateArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permisos.
     * @param {PermisoDeleteManyArgs} args - Arguments to filter Permisos to delete.
     * @example
     * // Delete a few Permisos
     * const { count } = await prisma.permiso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermisoDeleteManyArgs>(args?: SelectSubset<T, PermisoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermisoUpdateManyArgs>(args: SelectSubset<T, PermisoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos and returns the data updated in the database.
     * @param {PermisoUpdateManyAndReturnArgs} args - Arguments to update many Permisos.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permisos and only return the `id_permiso`
     * const permisoWithId_permisoOnly = await prisma.permiso.updateManyAndReturn({
     *   select: { id_permiso: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermisoUpdateManyAndReturnArgs>(args: SelectSubset<T, PermisoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permiso.
     * @param {PermisoUpsertArgs} args - Arguments to update or create a Permiso.
     * @example
     * // Update or create a Permiso
     * const permiso = await prisma.permiso.upsert({
     *   create: {
     *     // ... data to create a Permiso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permiso we want to update
     *   }
     * })
     */
    upsert<T extends PermisoUpsertArgs>(args: SelectSubset<T, PermisoUpsertArgs<ExtArgs>>): Prisma__PermisoClient<$Result.GetResult<Prisma.$PermisoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoCountArgs} args - Arguments to filter Permisos to count.
     * @example
     * // Count the number of Permisos
     * const count = await prisma.permiso.count({
     *   where: {
     *     // ... the filter for the Permisos we want to count
     *   }
     * })
    **/
    count<T extends PermisoCountArgs>(
      args?: Subset<T, PermisoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisoAggregateArgs>(args: Subset<T, PermisoAggregateArgs>): Prisma.PrismaPromise<GetPermisoAggregateType<T>>

    /**
     * Group by Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermisoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermisoGroupByArgs['orderBy'] }
        : { orderBy?: PermisoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermisoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permiso model
   */
  readonly fields: PermisoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permiso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermisoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Rol<T extends Permiso$RolArgs<ExtArgs> = {}>(args?: Subset<T, Permiso$RolArgs<ExtArgs>>): Prisma__RolClient<$Result.GetResult<Prisma.$RolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permiso model
   */
  interface PermisoFieldRefs {
    readonly id_permiso: FieldRef<"Permiso", 'Int'>
    readonly nombre: FieldRef<"Permiso", 'String'>
    readonly descripcion: FieldRef<"Permiso", 'String'>
    readonly id_rol: FieldRef<"Permiso", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Permiso findUnique
   */
  export type PermisoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findUniqueOrThrow
   */
  export type PermisoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso findFirst
   */
  export type PermisoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findFirstOrThrow
   */
  export type PermisoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permiso to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso findMany
   */
  export type PermisoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter, which Permisos to fetch.
     */
    where?: PermisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permisos to fetch.
     */
    orderBy?: PermisoOrderByWithRelationInput | PermisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permisos.
     */
    cursor?: PermisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permisos.
     */
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * Permiso create
   */
  export type PermisoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to create a Permiso.
     */
    data: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
  }

  /**
   * Permiso createMany
   */
  export type PermisoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permiso createManyAndReturn
   */
  export type PermisoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to create many Permisos.
     */
    data: PermisoCreateManyInput | PermisoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Permiso update
   */
  export type PermisoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The data needed to update a Permiso.
     */
    data: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
    /**
     * Choose, which Permiso to update.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso updateMany
   */
  export type PermisoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
  }

  /**
   * Permiso updateManyAndReturn
   */
  export type PermisoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * The data used to update Permisos.
     */
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyInput>
    /**
     * Filter which Permisos to update
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Permiso upsert
   */
  export type PermisoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * The filter to search for the Permiso to update in case it exists.
     */
    where: PermisoWhereUniqueInput
    /**
     * In case the Permiso found by the `where` argument doesn't exist, create a new Permiso with this data.
     */
    create: XOR<PermisoCreateInput, PermisoUncheckedCreateInput>
    /**
     * In case the Permiso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermisoUpdateInput, PermisoUncheckedUpdateInput>
  }

  /**
   * Permiso delete
   */
  export type PermisoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
    /**
     * Filter which Permiso to delete.
     */
    where: PermisoWhereUniqueInput
  }

  /**
   * Permiso deleteMany
   */
  export type PermisoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permisos to delete
     */
    where?: PermisoWhereInput
    /**
     * Limit how many Permisos to delete.
     */
    limit?: number
  }

  /**
   * Permiso.Rol
   */
  export type Permiso$RolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rol
     */
    select?: RolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rol
     */
    omit?: RolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolInclude<ExtArgs> | null
    where?: RolWhereInput
  }

  /**
   * Permiso without action
   */
  export type PermisoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permiso
     */
    select?: PermisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permiso
     */
    omit?: PermisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermisoInclude<ExtArgs> | null
  }


  /**
   * Model Pyme
   */

  export type AggregatePyme = {
    _count: PymeCountAggregateOutputType | null
    _avg: PymeAvgAggregateOutputType | null
    _sum: PymeSumAggregateOutputType | null
    _min: PymeMinAggregateOutputType | null
    _max: PymeMaxAggregateOutputType | null
  }

  export type PymeAvgAggregateOutputType = {
    id_pyme: number | null
    id_usuario: number | null
    id_direccion: number | null
  }

  export type PymeSumAggregateOutputType = {
    id_pyme: number | null
    id_usuario: number | null
    id_direccion: number | null
  }

  export type PymeMinAggregateOutputType = {
    id_pyme: number | null
    nombre: string | null
    rut: string | null
    descripcion: string | null
    id_usuario: number | null
    id_direccion: number | null
  }

  export type PymeMaxAggregateOutputType = {
    id_pyme: number | null
    nombre: string | null
    rut: string | null
    descripcion: string | null
    id_usuario: number | null
    id_direccion: number | null
  }

  export type PymeCountAggregateOutputType = {
    id_pyme: number
    nombre: number
    rut: number
    descripcion: number
    id_usuario: number
    id_direccion: number
    _all: number
  }


  export type PymeAvgAggregateInputType = {
    id_pyme?: true
    id_usuario?: true
    id_direccion?: true
  }

  export type PymeSumAggregateInputType = {
    id_pyme?: true
    id_usuario?: true
    id_direccion?: true
  }

  export type PymeMinAggregateInputType = {
    id_pyme?: true
    nombre?: true
    rut?: true
    descripcion?: true
    id_usuario?: true
    id_direccion?: true
  }

  export type PymeMaxAggregateInputType = {
    id_pyme?: true
    nombre?: true
    rut?: true
    descripcion?: true
    id_usuario?: true
    id_direccion?: true
  }

  export type PymeCountAggregateInputType = {
    id_pyme?: true
    nombre?: true
    rut?: true
    descripcion?: true
    id_usuario?: true
    id_direccion?: true
    _all?: true
  }

  export type PymeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pyme to aggregate.
     */
    where?: PymeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pymes to fetch.
     */
    orderBy?: PymeOrderByWithRelationInput | PymeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PymeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pymes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pymes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pymes
    **/
    _count?: true | PymeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PymeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PymeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PymeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PymeMaxAggregateInputType
  }

  export type GetPymeAggregateType<T extends PymeAggregateArgs> = {
        [P in keyof T & keyof AggregatePyme]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePyme[P]>
      : GetScalarType<T[P], AggregatePyme[P]>
  }




  export type PymeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PymeWhereInput
    orderBy?: PymeOrderByWithAggregationInput | PymeOrderByWithAggregationInput[]
    by: PymeScalarFieldEnum[] | PymeScalarFieldEnum
    having?: PymeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PymeCountAggregateInputType | true
    _avg?: PymeAvgAggregateInputType
    _sum?: PymeSumAggregateInputType
    _min?: PymeMinAggregateInputType
    _max?: PymeMaxAggregateInputType
  }

  export type PymeGroupByOutputType = {
    id_pyme: number
    nombre: string
    rut: string
    descripcion: string | null
    id_usuario: number
    id_direccion: number
    _count: PymeCountAggregateOutputType | null
    _avg: PymeAvgAggregateOutputType | null
    _sum: PymeSumAggregateOutputType | null
    _min: PymeMinAggregateOutputType | null
    _max: PymeMaxAggregateOutputType | null
  }

  type GetPymeGroupByPayload<T extends PymeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PymeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PymeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PymeGroupByOutputType[P]>
            : GetScalarType<T[P], PymeGroupByOutputType[P]>
        }
      >
    >


  export type PymeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pyme?: boolean
    nombre?: boolean
    rut?: boolean
    descripcion?: boolean
    id_usuario?: boolean
    id_direccion?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Direccion?: boolean | DireccionDefaultArgs<ExtArgs>
    Producto?: boolean | Pyme$ProductoArgs<ExtArgs>
    _count?: boolean | PymeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pyme"]>

  export type PymeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pyme?: boolean
    nombre?: boolean
    rut?: boolean
    descripcion?: boolean
    id_usuario?: boolean
    id_direccion?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pyme"]>

  export type PymeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_pyme?: boolean
    nombre?: boolean
    rut?: boolean
    descripcion?: boolean
    id_usuario?: boolean
    id_direccion?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pyme"]>

  export type PymeSelectScalar = {
    id_pyme?: boolean
    nombre?: boolean
    rut?: boolean
    descripcion?: boolean
    id_usuario?: boolean
    id_direccion?: boolean
  }

  export type PymeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_pyme" | "nombre" | "rut" | "descripcion" | "id_usuario" | "id_direccion", ExtArgs["result"]["pyme"]>
  export type PymeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Direccion?: boolean | DireccionDefaultArgs<ExtArgs>
    Producto?: boolean | Pyme$ProductoArgs<ExtArgs>
    _count?: boolean | PymeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PymeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }
  export type PymeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Direccion?: boolean | DireccionDefaultArgs<ExtArgs>
  }

  export type $PymePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pyme"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>
      Direccion: Prisma.$DireccionPayload<ExtArgs>
      Producto: Prisma.$ProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_pyme: number
      nombre: string
      rut: string
      descripcion: string | null
      id_usuario: number
      id_direccion: number
    }, ExtArgs["result"]["pyme"]>
    composites: {}
  }

  type PymeGetPayload<S extends boolean | null | undefined | PymeDefaultArgs> = $Result.GetResult<Prisma.$PymePayload, S>

  type PymeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PymeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PymeCountAggregateInputType | true
    }

  export interface PymeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pyme'], meta: { name: 'Pyme' } }
    /**
     * Find zero or one Pyme that matches the filter.
     * @param {PymeFindUniqueArgs} args - Arguments to find a Pyme
     * @example
     * // Get one Pyme
     * const pyme = await prisma.pyme.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PymeFindUniqueArgs>(args: SelectSubset<T, PymeFindUniqueArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pyme that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PymeFindUniqueOrThrowArgs} args - Arguments to find a Pyme
     * @example
     * // Get one Pyme
     * const pyme = await prisma.pyme.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PymeFindUniqueOrThrowArgs>(args: SelectSubset<T, PymeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pyme that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PymeFindFirstArgs} args - Arguments to find a Pyme
     * @example
     * // Get one Pyme
     * const pyme = await prisma.pyme.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PymeFindFirstArgs>(args?: SelectSubset<T, PymeFindFirstArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pyme that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PymeFindFirstOrThrowArgs} args - Arguments to find a Pyme
     * @example
     * // Get one Pyme
     * const pyme = await prisma.pyme.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PymeFindFirstOrThrowArgs>(args?: SelectSubset<T, PymeFindFirstOrThrowArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pymes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PymeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pymes
     * const pymes = await prisma.pyme.findMany()
     * 
     * // Get first 10 Pymes
     * const pymes = await prisma.pyme.findMany({ take: 10 })
     * 
     * // Only select the `id_pyme`
     * const pymeWithId_pymeOnly = await prisma.pyme.findMany({ select: { id_pyme: true } })
     * 
     */
    findMany<T extends PymeFindManyArgs>(args?: SelectSubset<T, PymeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pyme.
     * @param {PymeCreateArgs} args - Arguments to create a Pyme.
     * @example
     * // Create one Pyme
     * const Pyme = await prisma.pyme.create({
     *   data: {
     *     // ... data to create a Pyme
     *   }
     * })
     * 
     */
    create<T extends PymeCreateArgs>(args: SelectSubset<T, PymeCreateArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pymes.
     * @param {PymeCreateManyArgs} args - Arguments to create many Pymes.
     * @example
     * // Create many Pymes
     * const pyme = await prisma.pyme.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PymeCreateManyArgs>(args?: SelectSubset<T, PymeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pymes and returns the data saved in the database.
     * @param {PymeCreateManyAndReturnArgs} args - Arguments to create many Pymes.
     * @example
     * // Create many Pymes
     * const pyme = await prisma.pyme.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pymes and only return the `id_pyme`
     * const pymeWithId_pymeOnly = await prisma.pyme.createManyAndReturn({
     *   select: { id_pyme: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PymeCreateManyAndReturnArgs>(args?: SelectSubset<T, PymeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pyme.
     * @param {PymeDeleteArgs} args - Arguments to delete one Pyme.
     * @example
     * // Delete one Pyme
     * const Pyme = await prisma.pyme.delete({
     *   where: {
     *     // ... filter to delete one Pyme
     *   }
     * })
     * 
     */
    delete<T extends PymeDeleteArgs>(args: SelectSubset<T, PymeDeleteArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pyme.
     * @param {PymeUpdateArgs} args - Arguments to update one Pyme.
     * @example
     * // Update one Pyme
     * const pyme = await prisma.pyme.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PymeUpdateArgs>(args: SelectSubset<T, PymeUpdateArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pymes.
     * @param {PymeDeleteManyArgs} args - Arguments to filter Pymes to delete.
     * @example
     * // Delete a few Pymes
     * const { count } = await prisma.pyme.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PymeDeleteManyArgs>(args?: SelectSubset<T, PymeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pymes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PymeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pymes
     * const pyme = await prisma.pyme.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PymeUpdateManyArgs>(args: SelectSubset<T, PymeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pymes and returns the data updated in the database.
     * @param {PymeUpdateManyAndReturnArgs} args - Arguments to update many Pymes.
     * @example
     * // Update many Pymes
     * const pyme = await prisma.pyme.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pymes and only return the `id_pyme`
     * const pymeWithId_pymeOnly = await prisma.pyme.updateManyAndReturn({
     *   select: { id_pyme: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PymeUpdateManyAndReturnArgs>(args: SelectSubset<T, PymeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pyme.
     * @param {PymeUpsertArgs} args - Arguments to update or create a Pyme.
     * @example
     * // Update or create a Pyme
     * const pyme = await prisma.pyme.upsert({
     *   create: {
     *     // ... data to create a Pyme
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pyme we want to update
     *   }
     * })
     */
    upsert<T extends PymeUpsertArgs>(args: SelectSubset<T, PymeUpsertArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pymes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PymeCountArgs} args - Arguments to filter Pymes to count.
     * @example
     * // Count the number of Pymes
     * const count = await prisma.pyme.count({
     *   where: {
     *     // ... the filter for the Pymes we want to count
     *   }
     * })
    **/
    count<T extends PymeCountArgs>(
      args?: Subset<T, PymeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PymeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pyme.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PymeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PymeAggregateArgs>(args: Subset<T, PymeAggregateArgs>): Prisma.PrismaPromise<GetPymeAggregateType<T>>

    /**
     * Group by Pyme.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PymeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PymeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PymeGroupByArgs['orderBy'] }
        : { orderBy?: PymeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PymeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPymeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pyme model
   */
  readonly fields: PymeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pyme.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PymeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Direccion<T extends DireccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DireccionDefaultArgs<ExtArgs>>): Prisma__DireccionClient<$Result.GetResult<Prisma.$DireccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Producto<T extends Pyme$ProductoArgs<ExtArgs> = {}>(args?: Subset<T, Pyme$ProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pyme model
   */
  interface PymeFieldRefs {
    readonly id_pyme: FieldRef<"Pyme", 'Int'>
    readonly nombre: FieldRef<"Pyme", 'String'>
    readonly rut: FieldRef<"Pyme", 'String'>
    readonly descripcion: FieldRef<"Pyme", 'String'>
    readonly id_usuario: FieldRef<"Pyme", 'Int'>
    readonly id_direccion: FieldRef<"Pyme", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Pyme findUnique
   */
  export type PymeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * Filter, which Pyme to fetch.
     */
    where: PymeWhereUniqueInput
  }

  /**
   * Pyme findUniqueOrThrow
   */
  export type PymeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * Filter, which Pyme to fetch.
     */
    where: PymeWhereUniqueInput
  }

  /**
   * Pyme findFirst
   */
  export type PymeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * Filter, which Pyme to fetch.
     */
    where?: PymeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pymes to fetch.
     */
    orderBy?: PymeOrderByWithRelationInput | PymeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pymes.
     */
    cursor?: PymeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pymes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pymes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pymes.
     */
    distinct?: PymeScalarFieldEnum | PymeScalarFieldEnum[]
  }

  /**
   * Pyme findFirstOrThrow
   */
  export type PymeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * Filter, which Pyme to fetch.
     */
    where?: PymeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pymes to fetch.
     */
    orderBy?: PymeOrderByWithRelationInput | PymeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pymes.
     */
    cursor?: PymeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pymes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pymes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pymes.
     */
    distinct?: PymeScalarFieldEnum | PymeScalarFieldEnum[]
  }

  /**
   * Pyme findMany
   */
  export type PymeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * Filter, which Pymes to fetch.
     */
    where?: PymeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pymes to fetch.
     */
    orderBy?: PymeOrderByWithRelationInput | PymeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pymes.
     */
    cursor?: PymeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pymes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pymes.
     */
    skip?: number
    distinct?: PymeScalarFieldEnum | PymeScalarFieldEnum[]
  }

  /**
   * Pyme create
   */
  export type PymeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * The data needed to create a Pyme.
     */
    data: XOR<PymeCreateInput, PymeUncheckedCreateInput>
  }

  /**
   * Pyme createMany
   */
  export type PymeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pymes.
     */
    data: PymeCreateManyInput | PymeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pyme createManyAndReturn
   */
  export type PymeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * The data used to create many Pymes.
     */
    data: PymeCreateManyInput | PymeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pyme update
   */
  export type PymeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * The data needed to update a Pyme.
     */
    data: XOR<PymeUpdateInput, PymeUncheckedUpdateInput>
    /**
     * Choose, which Pyme to update.
     */
    where: PymeWhereUniqueInput
  }

  /**
   * Pyme updateMany
   */
  export type PymeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pymes.
     */
    data: XOR<PymeUpdateManyMutationInput, PymeUncheckedUpdateManyInput>
    /**
     * Filter which Pymes to update
     */
    where?: PymeWhereInput
    /**
     * Limit how many Pymes to update.
     */
    limit?: number
  }

  /**
   * Pyme updateManyAndReturn
   */
  export type PymeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * The data used to update Pymes.
     */
    data: XOR<PymeUpdateManyMutationInput, PymeUncheckedUpdateManyInput>
    /**
     * Filter which Pymes to update
     */
    where?: PymeWhereInput
    /**
     * Limit how many Pymes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pyme upsert
   */
  export type PymeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * The filter to search for the Pyme to update in case it exists.
     */
    where: PymeWhereUniqueInput
    /**
     * In case the Pyme found by the `where` argument doesn't exist, create a new Pyme with this data.
     */
    create: XOR<PymeCreateInput, PymeUncheckedCreateInput>
    /**
     * In case the Pyme was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PymeUpdateInput, PymeUncheckedUpdateInput>
  }

  /**
   * Pyme delete
   */
  export type PymeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
    /**
     * Filter which Pyme to delete.
     */
    where: PymeWhereUniqueInput
  }

  /**
   * Pyme deleteMany
   */
  export type PymeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pymes to delete
     */
    where?: PymeWhereInput
    /**
     * Limit how many Pymes to delete.
     */
    limit?: number
  }

  /**
   * Pyme.Producto
   */
  export type Pyme$ProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Pyme without action
   */
  export type PymeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pyme
     */
    select?: PymeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pyme
     */
    omit?: PymeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PymeInclude<ExtArgs> | null
  }


  /**
   * Model CategoriaDeProducto
   */

  export type AggregateCategoriaDeProducto = {
    _count: CategoriaDeProductoCountAggregateOutputType | null
    _avg: CategoriaDeProductoAvgAggregateOutputType | null
    _sum: CategoriaDeProductoSumAggregateOutputType | null
    _min: CategoriaDeProductoMinAggregateOutputType | null
    _max: CategoriaDeProductoMaxAggregateOutputType | null
  }

  export type CategoriaDeProductoAvgAggregateOutputType = {
    id_categoria_producto: number | null
  }

  export type CategoriaDeProductoSumAggregateOutputType = {
    id_categoria_producto: number | null
  }

  export type CategoriaDeProductoMinAggregateOutputType = {
    id_categoria_producto: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type CategoriaDeProductoMaxAggregateOutputType = {
    id_categoria_producto: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type CategoriaDeProductoCountAggregateOutputType = {
    id_categoria_producto: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type CategoriaDeProductoAvgAggregateInputType = {
    id_categoria_producto?: true
  }

  export type CategoriaDeProductoSumAggregateInputType = {
    id_categoria_producto?: true
  }

  export type CategoriaDeProductoMinAggregateInputType = {
    id_categoria_producto?: true
    nombre?: true
    descripcion?: true
  }

  export type CategoriaDeProductoMaxAggregateInputType = {
    id_categoria_producto?: true
    nombre?: true
    descripcion?: true
  }

  export type CategoriaDeProductoCountAggregateInputType = {
    id_categoria_producto?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type CategoriaDeProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaDeProducto to aggregate.
     */
    where?: CategoriaDeProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaDeProductos to fetch.
     */
    orderBy?: CategoriaDeProductoOrderByWithRelationInput | CategoriaDeProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaDeProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaDeProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaDeProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoriaDeProductos
    **/
    _count?: true | CategoriaDeProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaDeProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaDeProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaDeProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaDeProductoMaxAggregateInputType
  }

  export type GetCategoriaDeProductoAggregateType<T extends CategoriaDeProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaDeProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaDeProducto[P]>
      : GetScalarType<T[P], AggregateCategoriaDeProducto[P]>
  }




  export type CategoriaDeProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaDeProductoWhereInput
    orderBy?: CategoriaDeProductoOrderByWithAggregationInput | CategoriaDeProductoOrderByWithAggregationInput[]
    by: CategoriaDeProductoScalarFieldEnum[] | CategoriaDeProductoScalarFieldEnum
    having?: CategoriaDeProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaDeProductoCountAggregateInputType | true
    _avg?: CategoriaDeProductoAvgAggregateInputType
    _sum?: CategoriaDeProductoSumAggregateInputType
    _min?: CategoriaDeProductoMinAggregateInputType
    _max?: CategoriaDeProductoMaxAggregateInputType
  }

  export type CategoriaDeProductoGroupByOutputType = {
    id_categoria_producto: number
    nombre: string
    descripcion: string | null
    _count: CategoriaDeProductoCountAggregateOutputType | null
    _avg: CategoriaDeProductoAvgAggregateOutputType | null
    _sum: CategoriaDeProductoSumAggregateOutputType | null
    _min: CategoriaDeProductoMinAggregateOutputType | null
    _max: CategoriaDeProductoMaxAggregateOutputType | null
  }

  type GetCategoriaDeProductoGroupByPayload<T extends CategoriaDeProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaDeProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaDeProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaDeProductoGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaDeProductoGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaDeProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    Producto?: boolean | CategoriaDeProducto$ProductoArgs<ExtArgs>
    _count?: boolean | CategoriaDeProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaDeProducto"]>

  export type CategoriaDeProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["categoriaDeProducto"]>

  export type CategoriaDeProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["categoriaDeProducto"]>

  export type CategoriaDeProductoSelectScalar = {
    id_categoria_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
  }

  export type CategoriaDeProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_categoria_producto" | "nombre" | "descripcion", ExtArgs["result"]["categoriaDeProducto"]>
  export type CategoriaDeProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Producto?: boolean | CategoriaDeProducto$ProductoArgs<ExtArgs>
    _count?: boolean | CategoriaDeProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaDeProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CategoriaDeProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CategoriaDeProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoriaDeProducto"
    objects: {
      Producto: Prisma.$ProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_categoria_producto: number
      nombre: string
      descripcion: string | null
    }, ExtArgs["result"]["categoriaDeProducto"]>
    composites: {}
  }

  type CategoriaDeProductoGetPayload<S extends boolean | null | undefined | CategoriaDeProductoDefaultArgs> = $Result.GetResult<Prisma.$CategoriaDeProductoPayload, S>

  type CategoriaDeProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoriaDeProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriaDeProductoCountAggregateInputType | true
    }

  export interface CategoriaDeProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoriaDeProducto'], meta: { name: 'CategoriaDeProducto' } }
    /**
     * Find zero or one CategoriaDeProducto that matches the filter.
     * @param {CategoriaDeProductoFindUniqueArgs} args - Arguments to find a CategoriaDeProducto
     * @example
     * // Get one CategoriaDeProducto
     * const categoriaDeProducto = await prisma.categoriaDeProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaDeProductoFindUniqueArgs>(args: SelectSubset<T, CategoriaDeProductoFindUniqueArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CategoriaDeProducto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoriaDeProductoFindUniqueOrThrowArgs} args - Arguments to find a CategoriaDeProducto
     * @example
     * // Get one CategoriaDeProducto
     * const categoriaDeProducto = await prisma.categoriaDeProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaDeProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaDeProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoriaDeProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDeProductoFindFirstArgs} args - Arguments to find a CategoriaDeProducto
     * @example
     * // Get one CategoriaDeProducto
     * const categoriaDeProducto = await prisma.categoriaDeProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaDeProductoFindFirstArgs>(args?: SelectSubset<T, CategoriaDeProductoFindFirstArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoriaDeProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDeProductoFindFirstOrThrowArgs} args - Arguments to find a CategoriaDeProducto
     * @example
     * // Get one CategoriaDeProducto
     * const categoriaDeProducto = await prisma.categoriaDeProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaDeProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaDeProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CategoriaDeProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDeProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoriaDeProductos
     * const categoriaDeProductos = await prisma.categoriaDeProducto.findMany()
     * 
     * // Get first 10 CategoriaDeProductos
     * const categoriaDeProductos = await prisma.categoriaDeProducto.findMany({ take: 10 })
     * 
     * // Only select the `id_categoria_producto`
     * const categoriaDeProductoWithId_categoria_productoOnly = await prisma.categoriaDeProducto.findMany({ select: { id_categoria_producto: true } })
     * 
     */
    findMany<T extends CategoriaDeProductoFindManyArgs>(args?: SelectSubset<T, CategoriaDeProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CategoriaDeProducto.
     * @param {CategoriaDeProductoCreateArgs} args - Arguments to create a CategoriaDeProducto.
     * @example
     * // Create one CategoriaDeProducto
     * const CategoriaDeProducto = await prisma.categoriaDeProducto.create({
     *   data: {
     *     // ... data to create a CategoriaDeProducto
     *   }
     * })
     * 
     */
    create<T extends CategoriaDeProductoCreateArgs>(args: SelectSubset<T, CategoriaDeProductoCreateArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CategoriaDeProductos.
     * @param {CategoriaDeProductoCreateManyArgs} args - Arguments to create many CategoriaDeProductos.
     * @example
     * // Create many CategoriaDeProductos
     * const categoriaDeProducto = await prisma.categoriaDeProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaDeProductoCreateManyArgs>(args?: SelectSubset<T, CategoriaDeProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoriaDeProductos and returns the data saved in the database.
     * @param {CategoriaDeProductoCreateManyAndReturnArgs} args - Arguments to create many CategoriaDeProductos.
     * @example
     * // Create many CategoriaDeProductos
     * const categoriaDeProducto = await prisma.categoriaDeProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoriaDeProductos and only return the `id_categoria_producto`
     * const categoriaDeProductoWithId_categoria_productoOnly = await prisma.categoriaDeProducto.createManyAndReturn({
     *   select: { id_categoria_producto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaDeProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaDeProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CategoriaDeProducto.
     * @param {CategoriaDeProductoDeleteArgs} args - Arguments to delete one CategoriaDeProducto.
     * @example
     * // Delete one CategoriaDeProducto
     * const CategoriaDeProducto = await prisma.categoriaDeProducto.delete({
     *   where: {
     *     // ... filter to delete one CategoriaDeProducto
     *   }
     * })
     * 
     */
    delete<T extends CategoriaDeProductoDeleteArgs>(args: SelectSubset<T, CategoriaDeProductoDeleteArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CategoriaDeProducto.
     * @param {CategoriaDeProductoUpdateArgs} args - Arguments to update one CategoriaDeProducto.
     * @example
     * // Update one CategoriaDeProducto
     * const categoriaDeProducto = await prisma.categoriaDeProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaDeProductoUpdateArgs>(args: SelectSubset<T, CategoriaDeProductoUpdateArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CategoriaDeProductos.
     * @param {CategoriaDeProductoDeleteManyArgs} args - Arguments to filter CategoriaDeProductos to delete.
     * @example
     * // Delete a few CategoriaDeProductos
     * const { count } = await prisma.categoriaDeProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaDeProductoDeleteManyArgs>(args?: SelectSubset<T, CategoriaDeProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaDeProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDeProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoriaDeProductos
     * const categoriaDeProducto = await prisma.categoriaDeProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaDeProductoUpdateManyArgs>(args: SelectSubset<T, CategoriaDeProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaDeProductos and returns the data updated in the database.
     * @param {CategoriaDeProductoUpdateManyAndReturnArgs} args - Arguments to update many CategoriaDeProductos.
     * @example
     * // Update many CategoriaDeProductos
     * const categoriaDeProducto = await prisma.categoriaDeProducto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CategoriaDeProductos and only return the `id_categoria_producto`
     * const categoriaDeProductoWithId_categoria_productoOnly = await prisma.categoriaDeProducto.updateManyAndReturn({
     *   select: { id_categoria_producto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoriaDeProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoriaDeProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CategoriaDeProducto.
     * @param {CategoriaDeProductoUpsertArgs} args - Arguments to update or create a CategoriaDeProducto.
     * @example
     * // Update or create a CategoriaDeProducto
     * const categoriaDeProducto = await prisma.categoriaDeProducto.upsert({
     *   create: {
     *     // ... data to create a CategoriaDeProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoriaDeProducto we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaDeProductoUpsertArgs>(args: SelectSubset<T, CategoriaDeProductoUpsertArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CategoriaDeProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDeProductoCountArgs} args - Arguments to filter CategoriaDeProductos to count.
     * @example
     * // Count the number of CategoriaDeProductos
     * const count = await prisma.categoriaDeProducto.count({
     *   where: {
     *     // ... the filter for the CategoriaDeProductos we want to count
     *   }
     * })
    **/
    count<T extends CategoriaDeProductoCountArgs>(
      args?: Subset<T, CategoriaDeProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaDeProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoriaDeProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDeProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaDeProductoAggregateArgs>(args: Subset<T, CategoriaDeProductoAggregateArgs>): Prisma.PrismaPromise<GetCategoriaDeProductoAggregateType<T>>

    /**
     * Group by CategoriaDeProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaDeProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaDeProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaDeProductoGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaDeProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaDeProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaDeProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoriaDeProducto model
   */
  readonly fields: CategoriaDeProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoriaDeProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaDeProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Producto<T extends CategoriaDeProducto$ProductoArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDeProducto$ProductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CategoriaDeProducto model
   */
  interface CategoriaDeProductoFieldRefs {
    readonly id_categoria_producto: FieldRef<"CategoriaDeProducto", 'Int'>
    readonly nombre: FieldRef<"CategoriaDeProducto", 'String'>
    readonly descripcion: FieldRef<"CategoriaDeProducto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CategoriaDeProducto findUnique
   */
  export type CategoriaDeProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDeProducto to fetch.
     */
    where: CategoriaDeProductoWhereUniqueInput
  }

  /**
   * CategoriaDeProducto findUniqueOrThrow
   */
  export type CategoriaDeProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDeProducto to fetch.
     */
    where: CategoriaDeProductoWhereUniqueInput
  }

  /**
   * CategoriaDeProducto findFirst
   */
  export type CategoriaDeProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDeProducto to fetch.
     */
    where?: CategoriaDeProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaDeProductos to fetch.
     */
    orderBy?: CategoriaDeProductoOrderByWithRelationInput | CategoriaDeProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaDeProductos.
     */
    cursor?: CategoriaDeProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaDeProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaDeProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaDeProductos.
     */
    distinct?: CategoriaDeProductoScalarFieldEnum | CategoriaDeProductoScalarFieldEnum[]
  }

  /**
   * CategoriaDeProducto findFirstOrThrow
   */
  export type CategoriaDeProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDeProducto to fetch.
     */
    where?: CategoriaDeProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaDeProductos to fetch.
     */
    orderBy?: CategoriaDeProductoOrderByWithRelationInput | CategoriaDeProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaDeProductos.
     */
    cursor?: CategoriaDeProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaDeProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaDeProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaDeProductos.
     */
    distinct?: CategoriaDeProductoScalarFieldEnum | CategoriaDeProductoScalarFieldEnum[]
  }

  /**
   * CategoriaDeProducto findMany
   */
  export type CategoriaDeProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaDeProductos to fetch.
     */
    where?: CategoriaDeProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaDeProductos to fetch.
     */
    orderBy?: CategoriaDeProductoOrderByWithRelationInput | CategoriaDeProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoriaDeProductos.
     */
    cursor?: CategoriaDeProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaDeProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaDeProductos.
     */
    skip?: number
    distinct?: CategoriaDeProductoScalarFieldEnum | CategoriaDeProductoScalarFieldEnum[]
  }

  /**
   * CategoriaDeProducto create
   */
  export type CategoriaDeProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoriaDeProducto.
     */
    data: XOR<CategoriaDeProductoCreateInput, CategoriaDeProductoUncheckedCreateInput>
  }

  /**
   * CategoriaDeProducto createMany
   */
  export type CategoriaDeProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoriaDeProductos.
     */
    data: CategoriaDeProductoCreateManyInput | CategoriaDeProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaDeProducto createManyAndReturn
   */
  export type CategoriaDeProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * The data used to create many CategoriaDeProductos.
     */
    data: CategoriaDeProductoCreateManyInput | CategoriaDeProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaDeProducto update
   */
  export type CategoriaDeProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoriaDeProducto.
     */
    data: XOR<CategoriaDeProductoUpdateInput, CategoriaDeProductoUncheckedUpdateInput>
    /**
     * Choose, which CategoriaDeProducto to update.
     */
    where: CategoriaDeProductoWhereUniqueInput
  }

  /**
   * CategoriaDeProducto updateMany
   */
  export type CategoriaDeProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoriaDeProductos.
     */
    data: XOR<CategoriaDeProductoUpdateManyMutationInput, CategoriaDeProductoUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaDeProductos to update
     */
    where?: CategoriaDeProductoWhereInput
    /**
     * Limit how many CategoriaDeProductos to update.
     */
    limit?: number
  }

  /**
   * CategoriaDeProducto updateManyAndReturn
   */
  export type CategoriaDeProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * The data used to update CategoriaDeProductos.
     */
    data: XOR<CategoriaDeProductoUpdateManyMutationInput, CategoriaDeProductoUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaDeProductos to update
     */
    where?: CategoriaDeProductoWhereInput
    /**
     * Limit how many CategoriaDeProductos to update.
     */
    limit?: number
  }

  /**
   * CategoriaDeProducto upsert
   */
  export type CategoriaDeProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoriaDeProducto to update in case it exists.
     */
    where: CategoriaDeProductoWhereUniqueInput
    /**
     * In case the CategoriaDeProducto found by the `where` argument doesn't exist, create a new CategoriaDeProducto with this data.
     */
    create: XOR<CategoriaDeProductoCreateInput, CategoriaDeProductoUncheckedCreateInput>
    /**
     * In case the CategoriaDeProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaDeProductoUpdateInput, CategoriaDeProductoUncheckedUpdateInput>
  }

  /**
   * CategoriaDeProducto delete
   */
  export type CategoriaDeProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
    /**
     * Filter which CategoriaDeProducto to delete.
     */
    where: CategoriaDeProductoWhereUniqueInput
  }

  /**
   * CategoriaDeProducto deleteMany
   */
  export type CategoriaDeProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaDeProductos to delete
     */
    where?: CategoriaDeProductoWhereInput
    /**
     * Limit how many CategoriaDeProductos to delete.
     */
    limit?: number
  }

  /**
   * CategoriaDeProducto.Producto
   */
  export type CategoriaDeProducto$ProductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * CategoriaDeProducto without action
   */
  export type CategoriaDeProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaDeProducto
     */
    select?: CategoriaDeProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaDeProducto
     */
    omit?: CategoriaDeProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaDeProductoInclude<ExtArgs> | null
  }


  /**
   * Model Producto
   */

  export type AggregateProducto = {
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  export type ProductoAvgAggregateOutputType = {
    id_producto: number | null
    precio: Decimal | null
    stock: number | null
    id_pyme: number | null
    id_categoria_producto: number | null
  }

  export type ProductoSumAggregateOutputType = {
    id_producto: number | null
    precio: Decimal | null
    stock: number | null
    id_pyme: number | null
    id_categoria_producto: number | null
  }

  export type ProductoMinAggregateOutputType = {
    id_producto: number | null
    nombre: string | null
    descripcion: string | null
    precio: Decimal | null
    stock: number | null
    estado: string | null
    fecha_publicacion: Date | null
    fecha_actualizacion: Date | null
    img_url: string | null
    id_pyme: number | null
    id_categoria_producto: number | null
  }

  export type ProductoMaxAggregateOutputType = {
    id_producto: number | null
    nombre: string | null
    descripcion: string | null
    precio: Decimal | null
    stock: number | null
    estado: string | null
    fecha_publicacion: Date | null
    fecha_actualizacion: Date | null
    img_url: string | null
    id_pyme: number | null
    id_categoria_producto: number | null
  }

  export type ProductoCountAggregateOutputType = {
    id_producto: number
    nombre: number
    descripcion: number
    precio: number
    stock: number
    estado: number
    fecha_publicacion: number
    fecha_actualizacion: number
    img_url: number
    id_pyme: number
    id_categoria_producto: number
    _all: number
  }


  export type ProductoAvgAggregateInputType = {
    id_producto?: true
    precio?: true
    stock?: true
    id_pyme?: true
    id_categoria_producto?: true
  }

  export type ProductoSumAggregateInputType = {
    id_producto?: true
    precio?: true
    stock?: true
    id_pyme?: true
    id_categoria_producto?: true
  }

  export type ProductoMinAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    stock?: true
    estado?: true
    fecha_publicacion?: true
    fecha_actualizacion?: true
    img_url?: true
    id_pyme?: true
    id_categoria_producto?: true
  }

  export type ProductoMaxAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    stock?: true
    estado?: true
    fecha_publicacion?: true
    fecha_actualizacion?: true
    img_url?: true
    id_pyme?: true
    id_categoria_producto?: true
  }

  export type ProductoCountAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    stock?: true
    estado?: true
    fecha_publicacion?: true
    fecha_actualizacion?: true
    img_url?: true
    id_pyme?: true
    id_categoria_producto?: true
    _all?: true
  }

  export type ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto to aggregate.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoMaxAggregateInputType
  }

  export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto[P]>
      : GetScalarType<T[P], AggregateProducto[P]>
  }




  export type ProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithAggregationInput | ProductoOrderByWithAggregationInput[]
    by: ProductoScalarFieldEnum[] | ProductoScalarFieldEnum
    having?: ProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoCountAggregateInputType | true
    _avg?: ProductoAvgAggregateInputType
    _sum?: ProductoSumAggregateInputType
    _min?: ProductoMinAggregateInputType
    _max?: ProductoMaxAggregateInputType
  }

  export type ProductoGroupByOutputType = {
    id_producto: number
    nombre: string
    descripcion: string | null
    precio: Decimal
    stock: number
    estado: string
    fecha_publicacion: Date
    fecha_actualizacion: Date
    img_url: string | null
    id_pyme: number
    id_categoria_producto: number
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  type GetProductoGroupByPayload<T extends ProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoGroupByOutputType[P]>
        }
      >
    >


  export type ProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    stock?: boolean
    estado?: boolean
    fecha_publicacion?: boolean
    fecha_actualizacion?: boolean
    img_url?: boolean
    id_pyme?: boolean
    id_categoria_producto?: boolean
    Pyme?: boolean | PymeDefaultArgs<ExtArgs>
    CategoriaDeProducto?: boolean | CategoriaDeProductoDefaultArgs<ExtArgs>
    DetalleCarroCompras?: boolean | Producto$DetalleCarroComprasArgs<ExtArgs>
    DetalleListaDeseos?: boolean | Producto$DetalleListaDeseosArgs<ExtArgs>
    Valoracion?: boolean | Producto$ValoracionArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    stock?: boolean
    estado?: boolean
    fecha_publicacion?: boolean
    fecha_actualizacion?: boolean
    img_url?: boolean
    id_pyme?: boolean
    id_categoria_producto?: boolean
    Pyme?: boolean | PymeDefaultArgs<ExtArgs>
    CategoriaDeProducto?: boolean | CategoriaDeProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    stock?: boolean
    estado?: boolean
    fecha_publicacion?: boolean
    fecha_actualizacion?: boolean
    img_url?: boolean
    id_pyme?: boolean
    id_categoria_producto?: boolean
    Pyme?: boolean | PymeDefaultArgs<ExtArgs>
    CategoriaDeProducto?: boolean | CategoriaDeProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectScalar = {
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    stock?: boolean
    estado?: boolean
    fecha_publicacion?: boolean
    fecha_actualizacion?: boolean
    img_url?: boolean
    id_pyme?: boolean
    id_categoria_producto?: boolean
  }

  export type ProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_producto" | "nombre" | "descripcion" | "precio" | "stock" | "estado" | "fecha_publicacion" | "fecha_actualizacion" | "img_url" | "id_pyme" | "id_categoria_producto", ExtArgs["result"]["producto"]>
  export type ProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pyme?: boolean | PymeDefaultArgs<ExtArgs>
    CategoriaDeProducto?: boolean | CategoriaDeProductoDefaultArgs<ExtArgs>
    DetalleCarroCompras?: boolean | Producto$DetalleCarroComprasArgs<ExtArgs>
    DetalleListaDeseos?: boolean | Producto$DetalleListaDeseosArgs<ExtArgs>
    Valoracion?: boolean | Producto$ValoracionArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pyme?: boolean | PymeDefaultArgs<ExtArgs>
    CategoriaDeProducto?: boolean | CategoriaDeProductoDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pyme?: boolean | PymeDefaultArgs<ExtArgs>
    CategoriaDeProducto?: boolean | CategoriaDeProductoDefaultArgs<ExtArgs>
  }

  export type $ProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producto"
    objects: {
      Pyme: Prisma.$PymePayload<ExtArgs>
      CategoriaDeProducto: Prisma.$CategoriaDeProductoPayload<ExtArgs>
      DetalleCarroCompras: Prisma.$DetalleCarroComprasPayload<ExtArgs>[]
      DetalleListaDeseos: Prisma.$DetalleListaDeseosPayload<ExtArgs>[]
      Valoracion: Prisma.$ValoracionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_producto: number
      nombre: string
      descripcion: string | null
      precio: Prisma.Decimal
      stock: number
      estado: string
      fecha_publicacion: Date
      fecha_actualizacion: Date
      img_url: string | null
      id_pyme: number
      id_categoria_producto: number
    }, ExtArgs["result"]["producto"]>
    composites: {}
  }

  type ProductoGetPayload<S extends boolean | null | undefined | ProductoDefaultArgs> = $Result.GetResult<Prisma.$ProductoPayload, S>

  type ProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoCountAggregateInputType | true
    }

  export interface ProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto'], meta: { name: 'Producto' } }
    /**
     * Find zero or one Producto that matches the filter.
     * @param {ProductoFindUniqueArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductoFindUniqueArgs>(args: SelectSubset<T, ProductoFindUniqueArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductoFindUniqueOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductoFindFirstArgs>(args?: SelectSubset<T, ProductoFindFirstArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.producto.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.producto.findMany({ take: 10 })
     * 
     * // Only select the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.findMany({ select: { id_producto: true } })
     * 
     */
    findMany<T extends ProductoFindManyArgs>(args?: SelectSubset<T, ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto.
     * @param {ProductoCreateArgs} args - Arguments to create a Producto.
     * @example
     * // Create one Producto
     * const Producto = await prisma.producto.create({
     *   data: {
     *     // ... data to create a Producto
     *   }
     * })
     * 
     */
    create<T extends ProductoCreateArgs>(args: SelectSubset<T, ProductoCreateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {ProductoCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductoCreateManyArgs>(args?: SelectSubset<T, ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {ProductoCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.createManyAndReturn({
     *   select: { id_producto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Producto.
     * @param {ProductoDeleteArgs} args - Arguments to delete one Producto.
     * @example
     * // Delete one Producto
     * const Producto = await prisma.producto.delete({
     *   where: {
     *     // ... filter to delete one Producto
     *   }
     * })
     * 
     */
    delete<T extends ProductoDeleteArgs>(args: SelectSubset<T, ProductoDeleteArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto.
     * @param {ProductoUpdateArgs} args - Arguments to update one Producto.
     * @example
     * // Update one Producto
     * const producto = await prisma.producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductoUpdateArgs>(args: SelectSubset<T, ProductoUpdateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {ProductoDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductoDeleteManyArgs>(args?: SelectSubset<T, ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductoUpdateManyArgs>(args: SelectSubset<T, ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {ProductoUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.updateManyAndReturn({
     *   select: { id_producto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Producto.
     * @param {ProductoUpsertArgs} args - Arguments to update or create a Producto.
     * @example
     * // Update or create a Producto
     * const producto = await prisma.producto.upsert({
     *   create: {
     *     // ... data to create a Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto we want to update
     *   }
     * })
     */
    upsert<T extends ProductoUpsertArgs>(args: SelectSubset<T, ProductoUpsertArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.producto.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductoCountArgs>(
      args?: Subset<T, ProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoAggregateArgs>(args: Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

    /**
     * Group by Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductoGroupByArgs['orderBy'] }
        : { orderBy?: ProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producto model
   */
  readonly fields: ProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pyme<T extends PymeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PymeDefaultArgs<ExtArgs>>): Prisma__PymeClient<$Result.GetResult<Prisma.$PymePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    CategoriaDeProducto<T extends CategoriaDeProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaDeProductoDefaultArgs<ExtArgs>>): Prisma__CategoriaDeProductoClient<$Result.GetResult<Prisma.$CategoriaDeProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    DetalleCarroCompras<T extends Producto$DetalleCarroComprasArgs<ExtArgs> = {}>(args?: Subset<T, Producto$DetalleCarroComprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    DetalleListaDeseos<T extends Producto$DetalleListaDeseosArgs<ExtArgs> = {}>(args?: Subset<T, Producto$DetalleListaDeseosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Valoracion<T extends Producto$ValoracionArgs<ExtArgs> = {}>(args?: Subset<T, Producto$ValoracionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producto model
   */
  interface ProductoFieldRefs {
    readonly id_producto: FieldRef<"Producto", 'Int'>
    readonly nombre: FieldRef<"Producto", 'String'>
    readonly descripcion: FieldRef<"Producto", 'String'>
    readonly precio: FieldRef<"Producto", 'Decimal'>
    readonly stock: FieldRef<"Producto", 'Int'>
    readonly estado: FieldRef<"Producto", 'String'>
    readonly fecha_publicacion: FieldRef<"Producto", 'DateTime'>
    readonly fecha_actualizacion: FieldRef<"Producto", 'DateTime'>
    readonly img_url: FieldRef<"Producto", 'String'>
    readonly id_pyme: FieldRef<"Producto", 'Int'>
    readonly id_categoria_producto: FieldRef<"Producto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Producto findUnique
   */
  export type ProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findUniqueOrThrow
   */
  export type ProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findFirst
   */
  export type ProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findFirstOrThrow
   */
  export type ProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findMany
   */
  export type ProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto create
   */
  export type ProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producto.
     */
    data: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
  }

  /**
   * Producto createMany
   */
  export type ProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producto createManyAndReturn
   */
  export type ProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto update
   */
  export type ProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producto.
     */
    data: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
    /**
     * Choose, which Producto to update.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto updateMany
   */
  export type ProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
  }

  /**
   * Producto updateManyAndReturn
   */
  export type ProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto upsert
   */
  export type ProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producto to update in case it exists.
     */
    where: ProductoWhereUniqueInput
    /**
     * In case the Producto found by the `where` argument doesn't exist, create a new Producto with this data.
     */
    create: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
    /**
     * In case the Producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
  }

  /**
   * Producto delete
   */
  export type ProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter which Producto to delete.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto deleteMany
   */
  export type ProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to delete.
     */
    limit?: number
  }

  /**
   * Producto.DetalleCarroCompras
   */
  export type Producto$DetalleCarroComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    where?: DetalleCarroComprasWhereInput
    orderBy?: DetalleCarroComprasOrderByWithRelationInput | DetalleCarroComprasOrderByWithRelationInput[]
    cursor?: DetalleCarroComprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleCarroComprasScalarFieldEnum | DetalleCarroComprasScalarFieldEnum[]
  }

  /**
   * Producto.DetalleListaDeseos
   */
  export type Producto$DetalleListaDeseosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    where?: DetalleListaDeseosWhereInput
    orderBy?: DetalleListaDeseosOrderByWithRelationInput | DetalleListaDeseosOrderByWithRelationInput[]
    cursor?: DetalleListaDeseosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleListaDeseosScalarFieldEnum | DetalleListaDeseosScalarFieldEnum[]
  }

  /**
   * Producto.Valoracion
   */
  export type Producto$ValoracionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    where?: ValoracionWhereInput
    orderBy?: ValoracionOrderByWithRelationInput | ValoracionOrderByWithRelationInput[]
    cursor?: ValoracionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ValoracionScalarFieldEnum | ValoracionScalarFieldEnum[]
  }

  /**
   * Producto without action
   */
  export type ProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
  }


  /**
   * Model CarroDeCompras
   */

  export type AggregateCarroDeCompras = {
    _count: CarroDeComprasCountAggregateOutputType | null
    _avg: CarroDeComprasAvgAggregateOutputType | null
    _sum: CarroDeComprasSumAggregateOutputType | null
    _min: CarroDeComprasMinAggregateOutputType | null
    _max: CarroDeComprasMaxAggregateOutputType | null
  }

  export type CarroDeComprasAvgAggregateOutputType = {
    id_carro_compras: number | null
    total: Decimal | null
    id_usuario: number | null
  }

  export type CarroDeComprasSumAggregateOutputType = {
    id_carro_compras: number | null
    total: Decimal | null
    id_usuario: number | null
  }

  export type CarroDeComprasMinAggregateOutputType = {
    id_carro_compras: number | null
    fecha: Date | null
    total: Decimal | null
    estado: string | null
    id_usuario: number | null
  }

  export type CarroDeComprasMaxAggregateOutputType = {
    id_carro_compras: number | null
    fecha: Date | null
    total: Decimal | null
    estado: string | null
    id_usuario: number | null
  }

  export type CarroDeComprasCountAggregateOutputType = {
    id_carro_compras: number
    fecha: number
    total: number
    estado: number
    id_usuario: number
    _all: number
  }


  export type CarroDeComprasAvgAggregateInputType = {
    id_carro_compras?: true
    total?: true
    id_usuario?: true
  }

  export type CarroDeComprasSumAggregateInputType = {
    id_carro_compras?: true
    total?: true
    id_usuario?: true
  }

  export type CarroDeComprasMinAggregateInputType = {
    id_carro_compras?: true
    fecha?: true
    total?: true
    estado?: true
    id_usuario?: true
  }

  export type CarroDeComprasMaxAggregateInputType = {
    id_carro_compras?: true
    fecha?: true
    total?: true
    estado?: true
    id_usuario?: true
  }

  export type CarroDeComprasCountAggregateInputType = {
    id_carro_compras?: true
    fecha?: true
    total?: true
    estado?: true
    id_usuario?: true
    _all?: true
  }

  export type CarroDeComprasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CarroDeCompras to aggregate.
     */
    where?: CarroDeComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CarroDeCompras to fetch.
     */
    orderBy?: CarroDeComprasOrderByWithRelationInput | CarroDeComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CarroDeComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CarroDeCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CarroDeCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CarroDeCompras
    **/
    _count?: true | CarroDeComprasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CarroDeComprasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CarroDeComprasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CarroDeComprasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CarroDeComprasMaxAggregateInputType
  }

  export type GetCarroDeComprasAggregateType<T extends CarroDeComprasAggregateArgs> = {
        [P in keyof T & keyof AggregateCarroDeCompras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCarroDeCompras[P]>
      : GetScalarType<T[P], AggregateCarroDeCompras[P]>
  }




  export type CarroDeComprasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarroDeComprasWhereInput
    orderBy?: CarroDeComprasOrderByWithAggregationInput | CarroDeComprasOrderByWithAggregationInput[]
    by: CarroDeComprasScalarFieldEnum[] | CarroDeComprasScalarFieldEnum
    having?: CarroDeComprasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CarroDeComprasCountAggregateInputType | true
    _avg?: CarroDeComprasAvgAggregateInputType
    _sum?: CarroDeComprasSumAggregateInputType
    _min?: CarroDeComprasMinAggregateInputType
    _max?: CarroDeComprasMaxAggregateInputType
  }

  export type CarroDeComprasGroupByOutputType = {
    id_carro_compras: number
    fecha: Date
    total: Decimal
    estado: string
    id_usuario: number
    _count: CarroDeComprasCountAggregateOutputType | null
    _avg: CarroDeComprasAvgAggregateOutputType | null
    _sum: CarroDeComprasSumAggregateOutputType | null
    _min: CarroDeComprasMinAggregateOutputType | null
    _max: CarroDeComprasMaxAggregateOutputType | null
  }

  type GetCarroDeComprasGroupByPayload<T extends CarroDeComprasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CarroDeComprasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CarroDeComprasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CarroDeComprasGroupByOutputType[P]>
            : GetScalarType<T[P], CarroDeComprasGroupByOutputType[P]>
        }
      >
    >


  export type CarroDeComprasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_carro_compras?: boolean
    fecha?: boolean
    total?: boolean
    estado?: boolean
    id_usuario?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Venta?: boolean | CarroDeCompras$VentaArgs<ExtArgs>
    DetalleCarroCompras?: boolean | CarroDeCompras$DetalleCarroComprasArgs<ExtArgs>
    _count?: boolean | CarroDeComprasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carroDeCompras"]>

  export type CarroDeComprasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_carro_compras?: boolean
    fecha?: boolean
    total?: boolean
    estado?: boolean
    id_usuario?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carroDeCompras"]>

  export type CarroDeComprasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_carro_compras?: boolean
    fecha?: boolean
    total?: boolean
    estado?: boolean
    id_usuario?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carroDeCompras"]>

  export type CarroDeComprasSelectScalar = {
    id_carro_compras?: boolean
    fecha?: boolean
    total?: boolean
    estado?: boolean
    id_usuario?: boolean
  }

  export type CarroDeComprasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_carro_compras" | "fecha" | "total" | "estado" | "id_usuario", ExtArgs["result"]["carroDeCompras"]>
  export type CarroDeComprasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Venta?: boolean | CarroDeCompras$VentaArgs<ExtArgs>
    DetalleCarroCompras?: boolean | CarroDeCompras$DetalleCarroComprasArgs<ExtArgs>
    _count?: boolean | CarroDeComprasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CarroDeComprasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type CarroDeComprasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $CarroDeComprasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CarroDeCompras"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>
      Venta: Prisma.$VentaPayload<ExtArgs> | null
      DetalleCarroCompras: Prisma.$DetalleCarroComprasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_carro_compras: number
      fecha: Date
      total: Prisma.Decimal
      estado: string
      id_usuario: number
    }, ExtArgs["result"]["carroDeCompras"]>
    composites: {}
  }

  type CarroDeComprasGetPayload<S extends boolean | null | undefined | CarroDeComprasDefaultArgs> = $Result.GetResult<Prisma.$CarroDeComprasPayload, S>

  type CarroDeComprasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CarroDeComprasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CarroDeComprasCountAggregateInputType | true
    }

  export interface CarroDeComprasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CarroDeCompras'], meta: { name: 'CarroDeCompras' } }
    /**
     * Find zero or one CarroDeCompras that matches the filter.
     * @param {CarroDeComprasFindUniqueArgs} args - Arguments to find a CarroDeCompras
     * @example
     * // Get one CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CarroDeComprasFindUniqueArgs>(args: SelectSubset<T, CarroDeComprasFindUniqueArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CarroDeCompras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CarroDeComprasFindUniqueOrThrowArgs} args - Arguments to find a CarroDeCompras
     * @example
     * // Get one CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CarroDeComprasFindUniqueOrThrowArgs>(args: SelectSubset<T, CarroDeComprasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CarroDeCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroDeComprasFindFirstArgs} args - Arguments to find a CarroDeCompras
     * @example
     * // Get one CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CarroDeComprasFindFirstArgs>(args?: SelectSubset<T, CarroDeComprasFindFirstArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CarroDeCompras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroDeComprasFindFirstOrThrowArgs} args - Arguments to find a CarroDeCompras
     * @example
     * // Get one CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CarroDeComprasFindFirstOrThrowArgs>(args?: SelectSubset<T, CarroDeComprasFindFirstOrThrowArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CarroDeCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroDeComprasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.findMany()
     * 
     * // Get first 10 CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.findMany({ take: 10 })
     * 
     * // Only select the `id_carro_compras`
     * const carroDeComprasWithId_carro_comprasOnly = await prisma.carroDeCompras.findMany({ select: { id_carro_compras: true } })
     * 
     */
    findMany<T extends CarroDeComprasFindManyArgs>(args?: SelectSubset<T, CarroDeComprasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CarroDeCompras.
     * @param {CarroDeComprasCreateArgs} args - Arguments to create a CarroDeCompras.
     * @example
     * // Create one CarroDeCompras
     * const CarroDeCompras = await prisma.carroDeCompras.create({
     *   data: {
     *     // ... data to create a CarroDeCompras
     *   }
     * })
     * 
     */
    create<T extends CarroDeComprasCreateArgs>(args: SelectSubset<T, CarroDeComprasCreateArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CarroDeCompras.
     * @param {CarroDeComprasCreateManyArgs} args - Arguments to create many CarroDeCompras.
     * @example
     * // Create many CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CarroDeComprasCreateManyArgs>(args?: SelectSubset<T, CarroDeComprasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CarroDeCompras and returns the data saved in the database.
     * @param {CarroDeComprasCreateManyAndReturnArgs} args - Arguments to create many CarroDeCompras.
     * @example
     * // Create many CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CarroDeCompras and only return the `id_carro_compras`
     * const carroDeComprasWithId_carro_comprasOnly = await prisma.carroDeCompras.createManyAndReturn({
     *   select: { id_carro_compras: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CarroDeComprasCreateManyAndReturnArgs>(args?: SelectSubset<T, CarroDeComprasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CarroDeCompras.
     * @param {CarroDeComprasDeleteArgs} args - Arguments to delete one CarroDeCompras.
     * @example
     * // Delete one CarroDeCompras
     * const CarroDeCompras = await prisma.carroDeCompras.delete({
     *   where: {
     *     // ... filter to delete one CarroDeCompras
     *   }
     * })
     * 
     */
    delete<T extends CarroDeComprasDeleteArgs>(args: SelectSubset<T, CarroDeComprasDeleteArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CarroDeCompras.
     * @param {CarroDeComprasUpdateArgs} args - Arguments to update one CarroDeCompras.
     * @example
     * // Update one CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CarroDeComprasUpdateArgs>(args: SelectSubset<T, CarroDeComprasUpdateArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CarroDeCompras.
     * @param {CarroDeComprasDeleteManyArgs} args - Arguments to filter CarroDeCompras to delete.
     * @example
     * // Delete a few CarroDeCompras
     * const { count } = await prisma.carroDeCompras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CarroDeComprasDeleteManyArgs>(args?: SelectSubset<T, CarroDeComprasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CarroDeCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroDeComprasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CarroDeComprasUpdateManyArgs>(args: SelectSubset<T, CarroDeComprasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CarroDeCompras and returns the data updated in the database.
     * @param {CarroDeComprasUpdateManyAndReturnArgs} args - Arguments to update many CarroDeCompras.
     * @example
     * // Update many CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CarroDeCompras and only return the `id_carro_compras`
     * const carroDeComprasWithId_carro_comprasOnly = await prisma.carroDeCompras.updateManyAndReturn({
     *   select: { id_carro_compras: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CarroDeComprasUpdateManyAndReturnArgs>(args: SelectSubset<T, CarroDeComprasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CarroDeCompras.
     * @param {CarroDeComprasUpsertArgs} args - Arguments to update or create a CarroDeCompras.
     * @example
     * // Update or create a CarroDeCompras
     * const carroDeCompras = await prisma.carroDeCompras.upsert({
     *   create: {
     *     // ... data to create a CarroDeCompras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CarroDeCompras we want to update
     *   }
     * })
     */
    upsert<T extends CarroDeComprasUpsertArgs>(args: SelectSubset<T, CarroDeComprasUpsertArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CarroDeCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroDeComprasCountArgs} args - Arguments to filter CarroDeCompras to count.
     * @example
     * // Count the number of CarroDeCompras
     * const count = await prisma.carroDeCompras.count({
     *   where: {
     *     // ... the filter for the CarroDeCompras we want to count
     *   }
     * })
    **/
    count<T extends CarroDeComprasCountArgs>(
      args?: Subset<T, CarroDeComprasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CarroDeComprasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CarroDeCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroDeComprasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CarroDeComprasAggregateArgs>(args: Subset<T, CarroDeComprasAggregateArgs>): Prisma.PrismaPromise<GetCarroDeComprasAggregateType<T>>

    /**
     * Group by CarroDeCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarroDeComprasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CarroDeComprasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CarroDeComprasGroupByArgs['orderBy'] }
        : { orderBy?: CarroDeComprasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CarroDeComprasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCarroDeComprasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CarroDeCompras model
   */
  readonly fields: CarroDeComprasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CarroDeCompras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CarroDeComprasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Venta<T extends CarroDeCompras$VentaArgs<ExtArgs> = {}>(args?: Subset<T, CarroDeCompras$VentaArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    DetalleCarroCompras<T extends CarroDeCompras$DetalleCarroComprasArgs<ExtArgs> = {}>(args?: Subset<T, CarroDeCompras$DetalleCarroComprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CarroDeCompras model
   */
  interface CarroDeComprasFieldRefs {
    readonly id_carro_compras: FieldRef<"CarroDeCompras", 'Int'>
    readonly fecha: FieldRef<"CarroDeCompras", 'DateTime'>
    readonly total: FieldRef<"CarroDeCompras", 'Decimal'>
    readonly estado: FieldRef<"CarroDeCompras", 'String'>
    readonly id_usuario: FieldRef<"CarroDeCompras", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CarroDeCompras findUnique
   */
  export type CarroDeComprasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarroDeCompras to fetch.
     */
    where: CarroDeComprasWhereUniqueInput
  }

  /**
   * CarroDeCompras findUniqueOrThrow
   */
  export type CarroDeComprasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarroDeCompras to fetch.
     */
    where: CarroDeComprasWhereUniqueInput
  }

  /**
   * CarroDeCompras findFirst
   */
  export type CarroDeComprasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarroDeCompras to fetch.
     */
    where?: CarroDeComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CarroDeCompras to fetch.
     */
    orderBy?: CarroDeComprasOrderByWithRelationInput | CarroDeComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CarroDeCompras.
     */
    cursor?: CarroDeComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CarroDeCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CarroDeCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CarroDeCompras.
     */
    distinct?: CarroDeComprasScalarFieldEnum | CarroDeComprasScalarFieldEnum[]
  }

  /**
   * CarroDeCompras findFirstOrThrow
   */
  export type CarroDeComprasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarroDeCompras to fetch.
     */
    where?: CarroDeComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CarroDeCompras to fetch.
     */
    orderBy?: CarroDeComprasOrderByWithRelationInput | CarroDeComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CarroDeCompras.
     */
    cursor?: CarroDeComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CarroDeCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CarroDeCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CarroDeCompras.
     */
    distinct?: CarroDeComprasScalarFieldEnum | CarroDeComprasScalarFieldEnum[]
  }

  /**
   * CarroDeCompras findMany
   */
  export type CarroDeComprasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * Filter, which CarroDeCompras to fetch.
     */
    where?: CarroDeComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CarroDeCompras to fetch.
     */
    orderBy?: CarroDeComprasOrderByWithRelationInput | CarroDeComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CarroDeCompras.
     */
    cursor?: CarroDeComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CarroDeCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CarroDeCompras.
     */
    skip?: number
    distinct?: CarroDeComprasScalarFieldEnum | CarroDeComprasScalarFieldEnum[]
  }

  /**
   * CarroDeCompras create
   */
  export type CarroDeComprasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * The data needed to create a CarroDeCompras.
     */
    data: XOR<CarroDeComprasCreateInput, CarroDeComprasUncheckedCreateInput>
  }

  /**
   * CarroDeCompras createMany
   */
  export type CarroDeComprasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CarroDeCompras.
     */
    data: CarroDeComprasCreateManyInput | CarroDeComprasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CarroDeCompras createManyAndReturn
   */
  export type CarroDeComprasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * The data used to create many CarroDeCompras.
     */
    data: CarroDeComprasCreateManyInput | CarroDeComprasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CarroDeCompras update
   */
  export type CarroDeComprasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * The data needed to update a CarroDeCompras.
     */
    data: XOR<CarroDeComprasUpdateInput, CarroDeComprasUncheckedUpdateInput>
    /**
     * Choose, which CarroDeCompras to update.
     */
    where: CarroDeComprasWhereUniqueInput
  }

  /**
   * CarroDeCompras updateMany
   */
  export type CarroDeComprasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CarroDeCompras.
     */
    data: XOR<CarroDeComprasUpdateManyMutationInput, CarroDeComprasUncheckedUpdateManyInput>
    /**
     * Filter which CarroDeCompras to update
     */
    where?: CarroDeComprasWhereInput
    /**
     * Limit how many CarroDeCompras to update.
     */
    limit?: number
  }

  /**
   * CarroDeCompras updateManyAndReturn
   */
  export type CarroDeComprasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * The data used to update CarroDeCompras.
     */
    data: XOR<CarroDeComprasUpdateManyMutationInput, CarroDeComprasUncheckedUpdateManyInput>
    /**
     * Filter which CarroDeCompras to update
     */
    where?: CarroDeComprasWhereInput
    /**
     * Limit how many CarroDeCompras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CarroDeCompras upsert
   */
  export type CarroDeComprasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * The filter to search for the CarroDeCompras to update in case it exists.
     */
    where: CarroDeComprasWhereUniqueInput
    /**
     * In case the CarroDeCompras found by the `where` argument doesn't exist, create a new CarroDeCompras with this data.
     */
    create: XOR<CarroDeComprasCreateInput, CarroDeComprasUncheckedCreateInput>
    /**
     * In case the CarroDeCompras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CarroDeComprasUpdateInput, CarroDeComprasUncheckedUpdateInput>
  }

  /**
   * CarroDeCompras delete
   */
  export type CarroDeComprasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
    /**
     * Filter which CarroDeCompras to delete.
     */
    where: CarroDeComprasWhereUniqueInput
  }

  /**
   * CarroDeCompras deleteMany
   */
  export type CarroDeComprasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CarroDeCompras to delete
     */
    where?: CarroDeComprasWhereInput
    /**
     * Limit how many CarroDeCompras to delete.
     */
    limit?: number
  }

  /**
   * CarroDeCompras.Venta
   */
  export type CarroDeCompras$VentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
  }

  /**
   * CarroDeCompras.DetalleCarroCompras
   */
  export type CarroDeCompras$DetalleCarroComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    where?: DetalleCarroComprasWhereInput
    orderBy?: DetalleCarroComprasOrderByWithRelationInput | DetalleCarroComprasOrderByWithRelationInput[]
    cursor?: DetalleCarroComprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleCarroComprasScalarFieldEnum | DetalleCarroComprasScalarFieldEnum[]
  }

  /**
   * CarroDeCompras without action
   */
  export type CarroDeComprasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CarroDeCompras
     */
    select?: CarroDeComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CarroDeCompras
     */
    omit?: CarroDeComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarroDeComprasInclude<ExtArgs> | null
  }


  /**
   * Model DetalleCarroCompras
   */

  export type AggregateDetalleCarroCompras = {
    _count: DetalleCarroComprasCountAggregateOutputType | null
    _avg: DetalleCarroComprasAvgAggregateOutputType | null
    _sum: DetalleCarroComprasSumAggregateOutputType | null
    _min: DetalleCarroComprasMinAggregateOutputType | null
    _max: DetalleCarroComprasMaxAggregateOutputType | null
  }

  export type DetalleCarroComprasAvgAggregateOutputType = {
    id_detalle_carro_compras: number | null
    cantidad: number | null
    id_producto: number | null
    id_carro_compras: number | null
  }

  export type DetalleCarroComprasSumAggregateOutputType = {
    id_detalle_carro_compras: number | null
    cantidad: number | null
    id_producto: number | null
    id_carro_compras: number | null
  }

  export type DetalleCarroComprasMinAggregateOutputType = {
    id_detalle_carro_compras: number | null
    cantidad: number | null
    id_producto: number | null
    id_carro_compras: number | null
  }

  export type DetalleCarroComprasMaxAggregateOutputType = {
    id_detalle_carro_compras: number | null
    cantidad: number | null
    id_producto: number | null
    id_carro_compras: number | null
  }

  export type DetalleCarroComprasCountAggregateOutputType = {
    id_detalle_carro_compras: number
    cantidad: number
    id_producto: number
    id_carro_compras: number
    _all: number
  }


  export type DetalleCarroComprasAvgAggregateInputType = {
    id_detalle_carro_compras?: true
    cantidad?: true
    id_producto?: true
    id_carro_compras?: true
  }

  export type DetalleCarroComprasSumAggregateInputType = {
    id_detalle_carro_compras?: true
    cantidad?: true
    id_producto?: true
    id_carro_compras?: true
  }

  export type DetalleCarroComprasMinAggregateInputType = {
    id_detalle_carro_compras?: true
    cantidad?: true
    id_producto?: true
    id_carro_compras?: true
  }

  export type DetalleCarroComprasMaxAggregateInputType = {
    id_detalle_carro_compras?: true
    cantidad?: true
    id_producto?: true
    id_carro_compras?: true
  }

  export type DetalleCarroComprasCountAggregateInputType = {
    id_detalle_carro_compras?: true
    cantidad?: true
    id_producto?: true
    id_carro_compras?: true
    _all?: true
  }

  export type DetalleCarroComprasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleCarroCompras to aggregate.
     */
    where?: DetalleCarroComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCarroCompras to fetch.
     */
    orderBy?: DetalleCarroComprasOrderByWithRelationInput | DetalleCarroComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetalleCarroComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCarroCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCarroCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetalleCarroCompras
    **/
    _count?: true | DetalleCarroComprasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleCarroComprasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleCarroComprasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleCarroComprasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleCarroComprasMaxAggregateInputType
  }

  export type GetDetalleCarroComprasAggregateType<T extends DetalleCarroComprasAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleCarroCompras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleCarroCompras[P]>
      : GetScalarType<T[P], AggregateDetalleCarroCompras[P]>
  }




  export type DetalleCarroComprasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleCarroComprasWhereInput
    orderBy?: DetalleCarroComprasOrderByWithAggregationInput | DetalleCarroComprasOrderByWithAggregationInput[]
    by: DetalleCarroComprasScalarFieldEnum[] | DetalleCarroComprasScalarFieldEnum
    having?: DetalleCarroComprasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleCarroComprasCountAggregateInputType | true
    _avg?: DetalleCarroComprasAvgAggregateInputType
    _sum?: DetalleCarroComprasSumAggregateInputType
    _min?: DetalleCarroComprasMinAggregateInputType
    _max?: DetalleCarroComprasMaxAggregateInputType
  }

  export type DetalleCarroComprasGroupByOutputType = {
    id_detalle_carro_compras: number
    cantidad: number
    id_producto: number
    id_carro_compras: number
    _count: DetalleCarroComprasCountAggregateOutputType | null
    _avg: DetalleCarroComprasAvgAggregateOutputType | null
    _sum: DetalleCarroComprasSumAggregateOutputType | null
    _min: DetalleCarroComprasMinAggregateOutputType | null
    _max: DetalleCarroComprasMaxAggregateOutputType | null
  }

  type GetDetalleCarroComprasGroupByPayload<T extends DetalleCarroComprasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleCarroComprasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleCarroComprasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleCarroComprasGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleCarroComprasGroupByOutputType[P]>
        }
      >
    >


  export type DetalleCarroComprasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_carro_compras?: boolean
    cantidad?: boolean
    id_producto?: boolean
    id_carro_compras?: boolean
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleCarroCompras"]>

  export type DetalleCarroComprasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_carro_compras?: boolean
    cantidad?: boolean
    id_producto?: boolean
    id_carro_compras?: boolean
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleCarroCompras"]>

  export type DetalleCarroComprasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_carro_compras?: boolean
    cantidad?: boolean
    id_producto?: boolean
    id_carro_compras?: boolean
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleCarroCompras"]>

  export type DetalleCarroComprasSelectScalar = {
    id_detalle_carro_compras?: boolean
    cantidad?: boolean
    id_producto?: boolean
    id_carro_compras?: boolean
  }

  export type DetalleCarroComprasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_detalle_carro_compras" | "cantidad" | "id_producto" | "id_carro_compras", ExtArgs["result"]["detalleCarroCompras"]>
  export type DetalleCarroComprasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
  }
  export type DetalleCarroComprasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
  }
  export type DetalleCarroComprasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
  }

  export type $DetalleCarroComprasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetalleCarroCompras"
    objects: {
      Producto: Prisma.$ProductoPayload<ExtArgs>
      CarroDeCompras: Prisma.$CarroDeComprasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_detalle_carro_compras: number
      cantidad: number
      id_producto: number
      id_carro_compras: number
    }, ExtArgs["result"]["detalleCarroCompras"]>
    composites: {}
  }

  type DetalleCarroComprasGetPayload<S extends boolean | null | undefined | DetalleCarroComprasDefaultArgs> = $Result.GetResult<Prisma.$DetalleCarroComprasPayload, S>

  type DetalleCarroComprasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DetalleCarroComprasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DetalleCarroComprasCountAggregateInputType | true
    }

  export interface DetalleCarroComprasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetalleCarroCompras'], meta: { name: 'DetalleCarroCompras' } }
    /**
     * Find zero or one DetalleCarroCompras that matches the filter.
     * @param {DetalleCarroComprasFindUniqueArgs} args - Arguments to find a DetalleCarroCompras
     * @example
     * // Get one DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetalleCarroComprasFindUniqueArgs>(args: SelectSubset<T, DetalleCarroComprasFindUniqueArgs<ExtArgs>>): Prisma__DetalleCarroComprasClient<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DetalleCarroCompras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DetalleCarroComprasFindUniqueOrThrowArgs} args - Arguments to find a DetalleCarroCompras
     * @example
     * // Get one DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetalleCarroComprasFindUniqueOrThrowArgs>(args: SelectSubset<T, DetalleCarroComprasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetalleCarroComprasClient<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DetalleCarroCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarroComprasFindFirstArgs} args - Arguments to find a DetalleCarroCompras
     * @example
     * // Get one DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetalleCarroComprasFindFirstArgs>(args?: SelectSubset<T, DetalleCarroComprasFindFirstArgs<ExtArgs>>): Prisma__DetalleCarroComprasClient<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DetalleCarroCompras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarroComprasFindFirstOrThrowArgs} args - Arguments to find a DetalleCarroCompras
     * @example
     * // Get one DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetalleCarroComprasFindFirstOrThrowArgs>(args?: SelectSubset<T, DetalleCarroComprasFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetalleCarroComprasClient<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DetalleCarroCompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarroComprasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.findMany()
     * 
     * // Get first 10 DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle_carro_compras`
     * const detalleCarroComprasWithId_detalle_carro_comprasOnly = await prisma.detalleCarroCompras.findMany({ select: { id_detalle_carro_compras: true } })
     * 
     */
    findMany<T extends DetalleCarroComprasFindManyArgs>(args?: SelectSubset<T, DetalleCarroComprasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DetalleCarroCompras.
     * @param {DetalleCarroComprasCreateArgs} args - Arguments to create a DetalleCarroCompras.
     * @example
     * // Create one DetalleCarroCompras
     * const DetalleCarroCompras = await prisma.detalleCarroCompras.create({
     *   data: {
     *     // ... data to create a DetalleCarroCompras
     *   }
     * })
     * 
     */
    create<T extends DetalleCarroComprasCreateArgs>(args: SelectSubset<T, DetalleCarroComprasCreateArgs<ExtArgs>>): Prisma__DetalleCarroComprasClient<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DetalleCarroCompras.
     * @param {DetalleCarroComprasCreateManyArgs} args - Arguments to create many DetalleCarroCompras.
     * @example
     * // Create many DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetalleCarroComprasCreateManyArgs>(args?: SelectSubset<T, DetalleCarroComprasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetalleCarroCompras and returns the data saved in the database.
     * @param {DetalleCarroComprasCreateManyAndReturnArgs} args - Arguments to create many DetalleCarroCompras.
     * @example
     * // Create many DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetalleCarroCompras and only return the `id_detalle_carro_compras`
     * const detalleCarroComprasWithId_detalle_carro_comprasOnly = await prisma.detalleCarroCompras.createManyAndReturn({
     *   select: { id_detalle_carro_compras: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetalleCarroComprasCreateManyAndReturnArgs>(args?: SelectSubset<T, DetalleCarroComprasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DetalleCarroCompras.
     * @param {DetalleCarroComprasDeleteArgs} args - Arguments to delete one DetalleCarroCompras.
     * @example
     * // Delete one DetalleCarroCompras
     * const DetalleCarroCompras = await prisma.detalleCarroCompras.delete({
     *   where: {
     *     // ... filter to delete one DetalleCarroCompras
     *   }
     * })
     * 
     */
    delete<T extends DetalleCarroComprasDeleteArgs>(args: SelectSubset<T, DetalleCarroComprasDeleteArgs<ExtArgs>>): Prisma__DetalleCarroComprasClient<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DetalleCarroCompras.
     * @param {DetalleCarroComprasUpdateArgs} args - Arguments to update one DetalleCarroCompras.
     * @example
     * // Update one DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetalleCarroComprasUpdateArgs>(args: SelectSubset<T, DetalleCarroComprasUpdateArgs<ExtArgs>>): Prisma__DetalleCarroComprasClient<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DetalleCarroCompras.
     * @param {DetalleCarroComprasDeleteManyArgs} args - Arguments to filter DetalleCarroCompras to delete.
     * @example
     * // Delete a few DetalleCarroCompras
     * const { count } = await prisma.detalleCarroCompras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetalleCarroComprasDeleteManyArgs>(args?: SelectSubset<T, DetalleCarroComprasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleCarroCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarroComprasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetalleCarroComprasUpdateManyArgs>(args: SelectSubset<T, DetalleCarroComprasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleCarroCompras and returns the data updated in the database.
     * @param {DetalleCarroComprasUpdateManyAndReturnArgs} args - Arguments to update many DetalleCarroCompras.
     * @example
     * // Update many DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DetalleCarroCompras and only return the `id_detalle_carro_compras`
     * const detalleCarroComprasWithId_detalle_carro_comprasOnly = await prisma.detalleCarroCompras.updateManyAndReturn({
     *   select: { id_detalle_carro_compras: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DetalleCarroComprasUpdateManyAndReturnArgs>(args: SelectSubset<T, DetalleCarroComprasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DetalleCarroCompras.
     * @param {DetalleCarroComprasUpsertArgs} args - Arguments to update or create a DetalleCarroCompras.
     * @example
     * // Update or create a DetalleCarroCompras
     * const detalleCarroCompras = await prisma.detalleCarroCompras.upsert({
     *   create: {
     *     // ... data to create a DetalleCarroCompras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleCarroCompras we want to update
     *   }
     * })
     */
    upsert<T extends DetalleCarroComprasUpsertArgs>(args: SelectSubset<T, DetalleCarroComprasUpsertArgs<ExtArgs>>): Prisma__DetalleCarroComprasClient<$Result.GetResult<Prisma.$DetalleCarroComprasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DetalleCarroCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarroComprasCountArgs} args - Arguments to filter DetalleCarroCompras to count.
     * @example
     * // Count the number of DetalleCarroCompras
     * const count = await prisma.detalleCarroCompras.count({
     *   where: {
     *     // ... the filter for the DetalleCarroCompras we want to count
     *   }
     * })
    **/
    count<T extends DetalleCarroComprasCountArgs>(
      args?: Subset<T, DetalleCarroComprasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleCarroComprasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleCarroCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarroComprasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleCarroComprasAggregateArgs>(args: Subset<T, DetalleCarroComprasAggregateArgs>): Prisma.PrismaPromise<GetDetalleCarroComprasAggregateType<T>>

    /**
     * Group by DetalleCarroCompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleCarroComprasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetalleCarroComprasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetalleCarroComprasGroupByArgs['orderBy'] }
        : { orderBy?: DetalleCarroComprasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetalleCarroComprasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleCarroComprasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetalleCarroCompras model
   */
  readonly fields: DetalleCarroComprasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetalleCarroCompras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetalleCarroComprasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    CarroDeCompras<T extends CarroDeComprasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarroDeComprasDefaultArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetalleCarroCompras model
   */
  interface DetalleCarroComprasFieldRefs {
    readonly id_detalle_carro_compras: FieldRef<"DetalleCarroCompras", 'Int'>
    readonly cantidad: FieldRef<"DetalleCarroCompras", 'Int'>
    readonly id_producto: FieldRef<"DetalleCarroCompras", 'Int'>
    readonly id_carro_compras: FieldRef<"DetalleCarroCompras", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * DetalleCarroCompras findUnique
   */
  export type DetalleCarroComprasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCarroCompras to fetch.
     */
    where: DetalleCarroComprasWhereUniqueInput
  }

  /**
   * DetalleCarroCompras findUniqueOrThrow
   */
  export type DetalleCarroComprasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCarroCompras to fetch.
     */
    where: DetalleCarroComprasWhereUniqueInput
  }

  /**
   * DetalleCarroCompras findFirst
   */
  export type DetalleCarroComprasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCarroCompras to fetch.
     */
    where?: DetalleCarroComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCarroCompras to fetch.
     */
    orderBy?: DetalleCarroComprasOrderByWithRelationInput | DetalleCarroComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleCarroCompras.
     */
    cursor?: DetalleCarroComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCarroCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCarroCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleCarroCompras.
     */
    distinct?: DetalleCarroComprasScalarFieldEnum | DetalleCarroComprasScalarFieldEnum[]
  }

  /**
   * DetalleCarroCompras findFirstOrThrow
   */
  export type DetalleCarroComprasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCarroCompras to fetch.
     */
    where?: DetalleCarroComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCarroCompras to fetch.
     */
    orderBy?: DetalleCarroComprasOrderByWithRelationInput | DetalleCarroComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleCarroCompras.
     */
    cursor?: DetalleCarroComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCarroCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCarroCompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleCarroCompras.
     */
    distinct?: DetalleCarroComprasScalarFieldEnum | DetalleCarroComprasScalarFieldEnum[]
  }

  /**
   * DetalleCarroCompras findMany
   */
  export type DetalleCarroComprasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * Filter, which DetalleCarroCompras to fetch.
     */
    where?: DetalleCarroComprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleCarroCompras to fetch.
     */
    orderBy?: DetalleCarroComprasOrderByWithRelationInput | DetalleCarroComprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetalleCarroCompras.
     */
    cursor?: DetalleCarroComprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleCarroCompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleCarroCompras.
     */
    skip?: number
    distinct?: DetalleCarroComprasScalarFieldEnum | DetalleCarroComprasScalarFieldEnum[]
  }

  /**
   * DetalleCarroCompras create
   */
  export type DetalleCarroComprasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * The data needed to create a DetalleCarroCompras.
     */
    data: XOR<DetalleCarroComprasCreateInput, DetalleCarroComprasUncheckedCreateInput>
  }

  /**
   * DetalleCarroCompras createMany
   */
  export type DetalleCarroComprasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetalleCarroCompras.
     */
    data: DetalleCarroComprasCreateManyInput | DetalleCarroComprasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DetalleCarroCompras createManyAndReturn
   */
  export type DetalleCarroComprasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * The data used to create many DetalleCarroCompras.
     */
    data: DetalleCarroComprasCreateManyInput | DetalleCarroComprasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleCarroCompras update
   */
  export type DetalleCarroComprasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * The data needed to update a DetalleCarroCompras.
     */
    data: XOR<DetalleCarroComprasUpdateInput, DetalleCarroComprasUncheckedUpdateInput>
    /**
     * Choose, which DetalleCarroCompras to update.
     */
    where: DetalleCarroComprasWhereUniqueInput
  }

  /**
   * DetalleCarroCompras updateMany
   */
  export type DetalleCarroComprasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetalleCarroCompras.
     */
    data: XOR<DetalleCarroComprasUpdateManyMutationInput, DetalleCarroComprasUncheckedUpdateManyInput>
    /**
     * Filter which DetalleCarroCompras to update
     */
    where?: DetalleCarroComprasWhereInput
    /**
     * Limit how many DetalleCarroCompras to update.
     */
    limit?: number
  }

  /**
   * DetalleCarroCompras updateManyAndReturn
   */
  export type DetalleCarroComprasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * The data used to update DetalleCarroCompras.
     */
    data: XOR<DetalleCarroComprasUpdateManyMutationInput, DetalleCarroComprasUncheckedUpdateManyInput>
    /**
     * Filter which DetalleCarroCompras to update
     */
    where?: DetalleCarroComprasWhereInput
    /**
     * Limit how many DetalleCarroCompras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleCarroCompras upsert
   */
  export type DetalleCarroComprasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * The filter to search for the DetalleCarroCompras to update in case it exists.
     */
    where: DetalleCarroComprasWhereUniqueInput
    /**
     * In case the DetalleCarroCompras found by the `where` argument doesn't exist, create a new DetalleCarroCompras with this data.
     */
    create: XOR<DetalleCarroComprasCreateInput, DetalleCarroComprasUncheckedCreateInput>
    /**
     * In case the DetalleCarroCompras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetalleCarroComprasUpdateInput, DetalleCarroComprasUncheckedUpdateInput>
  }

  /**
   * DetalleCarroCompras delete
   */
  export type DetalleCarroComprasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
    /**
     * Filter which DetalleCarroCompras to delete.
     */
    where: DetalleCarroComprasWhereUniqueInput
  }

  /**
   * DetalleCarroCompras deleteMany
   */
  export type DetalleCarroComprasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleCarroCompras to delete
     */
    where?: DetalleCarroComprasWhereInput
    /**
     * Limit how many DetalleCarroCompras to delete.
     */
    limit?: number
  }

  /**
   * DetalleCarroCompras without action
   */
  export type DetalleCarroComprasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleCarroCompras
     */
    select?: DetalleCarroComprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleCarroCompras
     */
    omit?: DetalleCarroComprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleCarroComprasInclude<ExtArgs> | null
  }


  /**
   * Model ListaDeDeseos
   */

  export type AggregateListaDeDeseos = {
    _count: ListaDeDeseosCountAggregateOutputType | null
    _avg: ListaDeDeseosAvgAggregateOutputType | null
    _sum: ListaDeDeseosSumAggregateOutputType | null
    _min: ListaDeDeseosMinAggregateOutputType | null
    _max: ListaDeDeseosMaxAggregateOutputType | null
  }

  export type ListaDeDeseosAvgAggregateOutputType = {
    id_lista_deseo: number | null
    id_usuario: number | null
  }

  export type ListaDeDeseosSumAggregateOutputType = {
    id_lista_deseo: number | null
    id_usuario: number | null
  }

  export type ListaDeDeseosMinAggregateOutputType = {
    id_lista_deseo: number | null
    fecha_creacion: Date | null
    id_usuario: number | null
  }

  export type ListaDeDeseosMaxAggregateOutputType = {
    id_lista_deseo: number | null
    fecha_creacion: Date | null
    id_usuario: number | null
  }

  export type ListaDeDeseosCountAggregateOutputType = {
    id_lista_deseo: number
    fecha_creacion: number
    id_usuario: number
    _all: number
  }


  export type ListaDeDeseosAvgAggregateInputType = {
    id_lista_deseo?: true
    id_usuario?: true
  }

  export type ListaDeDeseosSumAggregateInputType = {
    id_lista_deseo?: true
    id_usuario?: true
  }

  export type ListaDeDeseosMinAggregateInputType = {
    id_lista_deseo?: true
    fecha_creacion?: true
    id_usuario?: true
  }

  export type ListaDeDeseosMaxAggregateInputType = {
    id_lista_deseo?: true
    fecha_creacion?: true
    id_usuario?: true
  }

  export type ListaDeDeseosCountAggregateInputType = {
    id_lista_deseo?: true
    fecha_creacion?: true
    id_usuario?: true
    _all?: true
  }

  export type ListaDeDeseosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListaDeDeseos to aggregate.
     */
    where?: ListaDeDeseosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListaDeDeseos to fetch.
     */
    orderBy?: ListaDeDeseosOrderByWithRelationInput | ListaDeDeseosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListaDeDeseosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListaDeDeseos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListaDeDeseos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListaDeDeseos
    **/
    _count?: true | ListaDeDeseosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListaDeDeseosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListaDeDeseosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListaDeDeseosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListaDeDeseosMaxAggregateInputType
  }

  export type GetListaDeDeseosAggregateType<T extends ListaDeDeseosAggregateArgs> = {
        [P in keyof T & keyof AggregateListaDeDeseos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListaDeDeseos[P]>
      : GetScalarType<T[P], AggregateListaDeDeseos[P]>
  }




  export type ListaDeDeseosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListaDeDeseosWhereInput
    orderBy?: ListaDeDeseosOrderByWithAggregationInput | ListaDeDeseosOrderByWithAggregationInput[]
    by: ListaDeDeseosScalarFieldEnum[] | ListaDeDeseosScalarFieldEnum
    having?: ListaDeDeseosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListaDeDeseosCountAggregateInputType | true
    _avg?: ListaDeDeseosAvgAggregateInputType
    _sum?: ListaDeDeseosSumAggregateInputType
    _min?: ListaDeDeseosMinAggregateInputType
    _max?: ListaDeDeseosMaxAggregateInputType
  }

  export type ListaDeDeseosGroupByOutputType = {
    id_lista_deseo: number
    fecha_creacion: Date
    id_usuario: number
    _count: ListaDeDeseosCountAggregateOutputType | null
    _avg: ListaDeDeseosAvgAggregateOutputType | null
    _sum: ListaDeDeseosSumAggregateOutputType | null
    _min: ListaDeDeseosMinAggregateOutputType | null
    _max: ListaDeDeseosMaxAggregateOutputType | null
  }

  type GetListaDeDeseosGroupByPayload<T extends ListaDeDeseosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListaDeDeseosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListaDeDeseosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListaDeDeseosGroupByOutputType[P]>
            : GetScalarType<T[P], ListaDeDeseosGroupByOutputType[P]>
        }
      >
    >


  export type ListaDeDeseosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_lista_deseo?: boolean
    fecha_creacion?: boolean
    id_usuario?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    DetalleListaDeseos?: boolean | ListaDeDeseos$DetalleListaDeseosArgs<ExtArgs>
    _count?: boolean | ListaDeDeseosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listaDeDeseos"]>

  export type ListaDeDeseosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_lista_deseo?: boolean
    fecha_creacion?: boolean
    id_usuario?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listaDeDeseos"]>

  export type ListaDeDeseosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_lista_deseo?: boolean
    fecha_creacion?: boolean
    id_usuario?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listaDeDeseos"]>

  export type ListaDeDeseosSelectScalar = {
    id_lista_deseo?: boolean
    fecha_creacion?: boolean
    id_usuario?: boolean
  }

  export type ListaDeDeseosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_lista_deseo" | "fecha_creacion" | "id_usuario", ExtArgs["result"]["listaDeDeseos"]>
  export type ListaDeDeseosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    DetalleListaDeseos?: boolean | ListaDeDeseos$DetalleListaDeseosArgs<ExtArgs>
    _count?: boolean | ListaDeDeseosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ListaDeDeseosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type ListaDeDeseosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $ListaDeDeseosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListaDeDeseos"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>
      DetalleListaDeseos: Prisma.$DetalleListaDeseosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_lista_deseo: number
      fecha_creacion: Date
      id_usuario: number
    }, ExtArgs["result"]["listaDeDeseos"]>
    composites: {}
  }

  type ListaDeDeseosGetPayload<S extends boolean | null | undefined | ListaDeDeseosDefaultArgs> = $Result.GetResult<Prisma.$ListaDeDeseosPayload, S>

  type ListaDeDeseosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListaDeDeseosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListaDeDeseosCountAggregateInputType | true
    }

  export interface ListaDeDeseosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListaDeDeseos'], meta: { name: 'ListaDeDeseos' } }
    /**
     * Find zero or one ListaDeDeseos that matches the filter.
     * @param {ListaDeDeseosFindUniqueArgs} args - Arguments to find a ListaDeDeseos
     * @example
     * // Get one ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListaDeDeseosFindUniqueArgs>(args: SelectSubset<T, ListaDeDeseosFindUniqueArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListaDeDeseos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListaDeDeseosFindUniqueOrThrowArgs} args - Arguments to find a ListaDeDeseos
     * @example
     * // Get one ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListaDeDeseosFindUniqueOrThrowArgs>(args: SelectSubset<T, ListaDeDeseosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListaDeDeseos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaDeDeseosFindFirstArgs} args - Arguments to find a ListaDeDeseos
     * @example
     * // Get one ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListaDeDeseosFindFirstArgs>(args?: SelectSubset<T, ListaDeDeseosFindFirstArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListaDeDeseos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaDeDeseosFindFirstOrThrowArgs} args - Arguments to find a ListaDeDeseos
     * @example
     * // Get one ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListaDeDeseosFindFirstOrThrowArgs>(args?: SelectSubset<T, ListaDeDeseosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListaDeDeseos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaDeDeseosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.findMany()
     * 
     * // Get first 10 ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.findMany({ take: 10 })
     * 
     * // Only select the `id_lista_deseo`
     * const listaDeDeseosWithId_lista_deseoOnly = await prisma.listaDeDeseos.findMany({ select: { id_lista_deseo: true } })
     * 
     */
    findMany<T extends ListaDeDeseosFindManyArgs>(args?: SelectSubset<T, ListaDeDeseosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListaDeDeseos.
     * @param {ListaDeDeseosCreateArgs} args - Arguments to create a ListaDeDeseos.
     * @example
     * // Create one ListaDeDeseos
     * const ListaDeDeseos = await prisma.listaDeDeseos.create({
     *   data: {
     *     // ... data to create a ListaDeDeseos
     *   }
     * })
     * 
     */
    create<T extends ListaDeDeseosCreateArgs>(args: SelectSubset<T, ListaDeDeseosCreateArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListaDeDeseos.
     * @param {ListaDeDeseosCreateManyArgs} args - Arguments to create many ListaDeDeseos.
     * @example
     * // Create many ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListaDeDeseosCreateManyArgs>(args?: SelectSubset<T, ListaDeDeseosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListaDeDeseos and returns the data saved in the database.
     * @param {ListaDeDeseosCreateManyAndReturnArgs} args - Arguments to create many ListaDeDeseos.
     * @example
     * // Create many ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListaDeDeseos and only return the `id_lista_deseo`
     * const listaDeDeseosWithId_lista_deseoOnly = await prisma.listaDeDeseos.createManyAndReturn({
     *   select: { id_lista_deseo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListaDeDeseosCreateManyAndReturnArgs>(args?: SelectSubset<T, ListaDeDeseosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListaDeDeseos.
     * @param {ListaDeDeseosDeleteArgs} args - Arguments to delete one ListaDeDeseos.
     * @example
     * // Delete one ListaDeDeseos
     * const ListaDeDeseos = await prisma.listaDeDeseos.delete({
     *   where: {
     *     // ... filter to delete one ListaDeDeseos
     *   }
     * })
     * 
     */
    delete<T extends ListaDeDeseosDeleteArgs>(args: SelectSubset<T, ListaDeDeseosDeleteArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListaDeDeseos.
     * @param {ListaDeDeseosUpdateArgs} args - Arguments to update one ListaDeDeseos.
     * @example
     * // Update one ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListaDeDeseosUpdateArgs>(args: SelectSubset<T, ListaDeDeseosUpdateArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListaDeDeseos.
     * @param {ListaDeDeseosDeleteManyArgs} args - Arguments to filter ListaDeDeseos to delete.
     * @example
     * // Delete a few ListaDeDeseos
     * const { count } = await prisma.listaDeDeseos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListaDeDeseosDeleteManyArgs>(args?: SelectSubset<T, ListaDeDeseosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListaDeDeseos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaDeDeseosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListaDeDeseosUpdateManyArgs>(args: SelectSubset<T, ListaDeDeseosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListaDeDeseos and returns the data updated in the database.
     * @param {ListaDeDeseosUpdateManyAndReturnArgs} args - Arguments to update many ListaDeDeseos.
     * @example
     * // Update many ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListaDeDeseos and only return the `id_lista_deseo`
     * const listaDeDeseosWithId_lista_deseoOnly = await prisma.listaDeDeseos.updateManyAndReturn({
     *   select: { id_lista_deseo: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListaDeDeseosUpdateManyAndReturnArgs>(args: SelectSubset<T, ListaDeDeseosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListaDeDeseos.
     * @param {ListaDeDeseosUpsertArgs} args - Arguments to update or create a ListaDeDeseos.
     * @example
     * // Update or create a ListaDeDeseos
     * const listaDeDeseos = await prisma.listaDeDeseos.upsert({
     *   create: {
     *     // ... data to create a ListaDeDeseos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListaDeDeseos we want to update
     *   }
     * })
     */
    upsert<T extends ListaDeDeseosUpsertArgs>(args: SelectSubset<T, ListaDeDeseosUpsertArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListaDeDeseos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaDeDeseosCountArgs} args - Arguments to filter ListaDeDeseos to count.
     * @example
     * // Count the number of ListaDeDeseos
     * const count = await prisma.listaDeDeseos.count({
     *   where: {
     *     // ... the filter for the ListaDeDeseos we want to count
     *   }
     * })
    **/
    count<T extends ListaDeDeseosCountArgs>(
      args?: Subset<T, ListaDeDeseosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListaDeDeseosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListaDeDeseos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaDeDeseosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListaDeDeseosAggregateArgs>(args: Subset<T, ListaDeDeseosAggregateArgs>): Prisma.PrismaPromise<GetListaDeDeseosAggregateType<T>>

    /**
     * Group by ListaDeDeseos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaDeDeseosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListaDeDeseosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListaDeDeseosGroupByArgs['orderBy'] }
        : { orderBy?: ListaDeDeseosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListaDeDeseosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListaDeDeseosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListaDeDeseos model
   */
  readonly fields: ListaDeDeseosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListaDeDeseos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListaDeDeseosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    DetalleListaDeseos<T extends ListaDeDeseos$DetalleListaDeseosArgs<ExtArgs> = {}>(args?: Subset<T, ListaDeDeseos$DetalleListaDeseosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListaDeDeseos model
   */
  interface ListaDeDeseosFieldRefs {
    readonly id_lista_deseo: FieldRef<"ListaDeDeseos", 'Int'>
    readonly fecha_creacion: FieldRef<"ListaDeDeseos", 'DateTime'>
    readonly id_usuario: FieldRef<"ListaDeDeseos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ListaDeDeseos findUnique
   */
  export type ListaDeDeseosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * Filter, which ListaDeDeseos to fetch.
     */
    where: ListaDeDeseosWhereUniqueInput
  }

  /**
   * ListaDeDeseos findUniqueOrThrow
   */
  export type ListaDeDeseosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * Filter, which ListaDeDeseos to fetch.
     */
    where: ListaDeDeseosWhereUniqueInput
  }

  /**
   * ListaDeDeseos findFirst
   */
  export type ListaDeDeseosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * Filter, which ListaDeDeseos to fetch.
     */
    where?: ListaDeDeseosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListaDeDeseos to fetch.
     */
    orderBy?: ListaDeDeseosOrderByWithRelationInput | ListaDeDeseosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListaDeDeseos.
     */
    cursor?: ListaDeDeseosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListaDeDeseos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListaDeDeseos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListaDeDeseos.
     */
    distinct?: ListaDeDeseosScalarFieldEnum | ListaDeDeseosScalarFieldEnum[]
  }

  /**
   * ListaDeDeseos findFirstOrThrow
   */
  export type ListaDeDeseosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * Filter, which ListaDeDeseos to fetch.
     */
    where?: ListaDeDeseosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListaDeDeseos to fetch.
     */
    orderBy?: ListaDeDeseosOrderByWithRelationInput | ListaDeDeseosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListaDeDeseos.
     */
    cursor?: ListaDeDeseosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListaDeDeseos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListaDeDeseos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListaDeDeseos.
     */
    distinct?: ListaDeDeseosScalarFieldEnum | ListaDeDeseosScalarFieldEnum[]
  }

  /**
   * ListaDeDeseos findMany
   */
  export type ListaDeDeseosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * Filter, which ListaDeDeseos to fetch.
     */
    where?: ListaDeDeseosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListaDeDeseos to fetch.
     */
    orderBy?: ListaDeDeseosOrderByWithRelationInput | ListaDeDeseosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListaDeDeseos.
     */
    cursor?: ListaDeDeseosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListaDeDeseos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListaDeDeseos.
     */
    skip?: number
    distinct?: ListaDeDeseosScalarFieldEnum | ListaDeDeseosScalarFieldEnum[]
  }

  /**
   * ListaDeDeseos create
   */
  export type ListaDeDeseosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * The data needed to create a ListaDeDeseos.
     */
    data: XOR<ListaDeDeseosCreateInput, ListaDeDeseosUncheckedCreateInput>
  }

  /**
   * ListaDeDeseos createMany
   */
  export type ListaDeDeseosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListaDeDeseos.
     */
    data: ListaDeDeseosCreateManyInput | ListaDeDeseosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListaDeDeseos createManyAndReturn
   */
  export type ListaDeDeseosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * The data used to create many ListaDeDeseos.
     */
    data: ListaDeDeseosCreateManyInput | ListaDeDeseosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListaDeDeseos update
   */
  export type ListaDeDeseosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * The data needed to update a ListaDeDeseos.
     */
    data: XOR<ListaDeDeseosUpdateInput, ListaDeDeseosUncheckedUpdateInput>
    /**
     * Choose, which ListaDeDeseos to update.
     */
    where: ListaDeDeseosWhereUniqueInput
  }

  /**
   * ListaDeDeseos updateMany
   */
  export type ListaDeDeseosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListaDeDeseos.
     */
    data: XOR<ListaDeDeseosUpdateManyMutationInput, ListaDeDeseosUncheckedUpdateManyInput>
    /**
     * Filter which ListaDeDeseos to update
     */
    where?: ListaDeDeseosWhereInput
    /**
     * Limit how many ListaDeDeseos to update.
     */
    limit?: number
  }

  /**
   * ListaDeDeseos updateManyAndReturn
   */
  export type ListaDeDeseosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * The data used to update ListaDeDeseos.
     */
    data: XOR<ListaDeDeseosUpdateManyMutationInput, ListaDeDeseosUncheckedUpdateManyInput>
    /**
     * Filter which ListaDeDeseos to update
     */
    where?: ListaDeDeseosWhereInput
    /**
     * Limit how many ListaDeDeseos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListaDeDeseos upsert
   */
  export type ListaDeDeseosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * The filter to search for the ListaDeDeseos to update in case it exists.
     */
    where: ListaDeDeseosWhereUniqueInput
    /**
     * In case the ListaDeDeseos found by the `where` argument doesn't exist, create a new ListaDeDeseos with this data.
     */
    create: XOR<ListaDeDeseosCreateInput, ListaDeDeseosUncheckedCreateInput>
    /**
     * In case the ListaDeDeseos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListaDeDeseosUpdateInput, ListaDeDeseosUncheckedUpdateInput>
  }

  /**
   * ListaDeDeseos delete
   */
  export type ListaDeDeseosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
    /**
     * Filter which ListaDeDeseos to delete.
     */
    where: ListaDeDeseosWhereUniqueInput
  }

  /**
   * ListaDeDeseos deleteMany
   */
  export type ListaDeDeseosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListaDeDeseos to delete
     */
    where?: ListaDeDeseosWhereInput
    /**
     * Limit how many ListaDeDeseos to delete.
     */
    limit?: number
  }

  /**
   * ListaDeDeseos.DetalleListaDeseos
   */
  export type ListaDeDeseos$DetalleListaDeseosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    where?: DetalleListaDeseosWhereInput
    orderBy?: DetalleListaDeseosOrderByWithRelationInput | DetalleListaDeseosOrderByWithRelationInput[]
    cursor?: DetalleListaDeseosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleListaDeseosScalarFieldEnum | DetalleListaDeseosScalarFieldEnum[]
  }

  /**
   * ListaDeDeseos without action
   */
  export type ListaDeDeseosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListaDeDeseos
     */
    select?: ListaDeDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListaDeDeseos
     */
    omit?: ListaDeDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListaDeDeseosInclude<ExtArgs> | null
  }


  /**
   * Model DetalleListaDeseos
   */

  export type AggregateDetalleListaDeseos = {
    _count: DetalleListaDeseosCountAggregateOutputType | null
    _avg: DetalleListaDeseosAvgAggregateOutputType | null
    _sum: DetalleListaDeseosSumAggregateOutputType | null
    _min: DetalleListaDeseosMinAggregateOutputType | null
    _max: DetalleListaDeseosMaxAggregateOutputType | null
  }

  export type DetalleListaDeseosAvgAggregateOutputType = {
    id_detalle_lista_deseos: number | null
    id_lista_deseo: number | null
    id_producto: number | null
  }

  export type DetalleListaDeseosSumAggregateOutputType = {
    id_detalle_lista_deseos: number | null
    id_lista_deseo: number | null
    id_producto: number | null
  }

  export type DetalleListaDeseosMinAggregateOutputType = {
    id_detalle_lista_deseos: number | null
    fecha_agregado: Date | null
    id_lista_deseo: number | null
    id_producto: number | null
  }

  export type DetalleListaDeseosMaxAggregateOutputType = {
    id_detalle_lista_deseos: number | null
    fecha_agregado: Date | null
    id_lista_deseo: number | null
    id_producto: number | null
  }

  export type DetalleListaDeseosCountAggregateOutputType = {
    id_detalle_lista_deseos: number
    fecha_agregado: number
    id_lista_deseo: number
    id_producto: number
    _all: number
  }


  export type DetalleListaDeseosAvgAggregateInputType = {
    id_detalle_lista_deseos?: true
    id_lista_deseo?: true
    id_producto?: true
  }

  export type DetalleListaDeseosSumAggregateInputType = {
    id_detalle_lista_deseos?: true
    id_lista_deseo?: true
    id_producto?: true
  }

  export type DetalleListaDeseosMinAggregateInputType = {
    id_detalle_lista_deseos?: true
    fecha_agregado?: true
    id_lista_deseo?: true
    id_producto?: true
  }

  export type DetalleListaDeseosMaxAggregateInputType = {
    id_detalle_lista_deseos?: true
    fecha_agregado?: true
    id_lista_deseo?: true
    id_producto?: true
  }

  export type DetalleListaDeseosCountAggregateInputType = {
    id_detalle_lista_deseos?: true
    fecha_agregado?: true
    id_lista_deseo?: true
    id_producto?: true
    _all?: true
  }

  export type DetalleListaDeseosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleListaDeseos to aggregate.
     */
    where?: DetalleListaDeseosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleListaDeseos to fetch.
     */
    orderBy?: DetalleListaDeseosOrderByWithRelationInput | DetalleListaDeseosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetalleListaDeseosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleListaDeseos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleListaDeseos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetalleListaDeseos
    **/
    _count?: true | DetalleListaDeseosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleListaDeseosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleListaDeseosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleListaDeseosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleListaDeseosMaxAggregateInputType
  }

  export type GetDetalleListaDeseosAggregateType<T extends DetalleListaDeseosAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleListaDeseos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleListaDeseos[P]>
      : GetScalarType<T[P], AggregateDetalleListaDeseos[P]>
  }




  export type DetalleListaDeseosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetalleListaDeseosWhereInput
    orderBy?: DetalleListaDeseosOrderByWithAggregationInput | DetalleListaDeseosOrderByWithAggregationInput[]
    by: DetalleListaDeseosScalarFieldEnum[] | DetalleListaDeseosScalarFieldEnum
    having?: DetalleListaDeseosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleListaDeseosCountAggregateInputType | true
    _avg?: DetalleListaDeseosAvgAggregateInputType
    _sum?: DetalleListaDeseosSumAggregateInputType
    _min?: DetalleListaDeseosMinAggregateInputType
    _max?: DetalleListaDeseosMaxAggregateInputType
  }

  export type DetalleListaDeseosGroupByOutputType = {
    id_detalle_lista_deseos: number
    fecha_agregado: Date
    id_lista_deseo: number
    id_producto: number
    _count: DetalleListaDeseosCountAggregateOutputType | null
    _avg: DetalleListaDeseosAvgAggregateOutputType | null
    _sum: DetalleListaDeseosSumAggregateOutputType | null
    _min: DetalleListaDeseosMinAggregateOutputType | null
    _max: DetalleListaDeseosMaxAggregateOutputType | null
  }

  type GetDetalleListaDeseosGroupByPayload<T extends DetalleListaDeseosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleListaDeseosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleListaDeseosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleListaDeseosGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleListaDeseosGroupByOutputType[P]>
        }
      >
    >


  export type DetalleListaDeseosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_lista_deseos?: boolean
    fecha_agregado?: boolean
    id_lista_deseo?: boolean
    id_producto?: boolean
    ListaDeDeseos?: boolean | ListaDeDeseosDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleListaDeseos"]>

  export type DetalleListaDeseosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_lista_deseos?: boolean
    fecha_agregado?: boolean
    id_lista_deseo?: boolean
    id_producto?: boolean
    ListaDeDeseos?: boolean | ListaDeDeseosDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleListaDeseos"]>

  export type DetalleListaDeseosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_detalle_lista_deseos?: boolean
    fecha_agregado?: boolean
    id_lista_deseo?: boolean
    id_producto?: boolean
    ListaDeDeseos?: boolean | ListaDeDeseosDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalleListaDeseos"]>

  export type DetalleListaDeseosSelectScalar = {
    id_detalle_lista_deseos?: boolean
    fecha_agregado?: boolean
    id_lista_deseo?: boolean
    id_producto?: boolean
  }

  export type DetalleListaDeseosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_detalle_lista_deseos" | "fecha_agregado" | "id_lista_deseo" | "id_producto", ExtArgs["result"]["detalleListaDeseos"]>
  export type DetalleListaDeseosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListaDeDeseos?: boolean | ListaDeDeseosDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type DetalleListaDeseosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListaDeDeseos?: boolean | ListaDeDeseosDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type DetalleListaDeseosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListaDeDeseos?: boolean | ListaDeDeseosDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }

  export type $DetalleListaDeseosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetalleListaDeseos"
    objects: {
      ListaDeDeseos: Prisma.$ListaDeDeseosPayload<ExtArgs>
      Producto: Prisma.$ProductoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_detalle_lista_deseos: number
      fecha_agregado: Date
      id_lista_deseo: number
      id_producto: number
    }, ExtArgs["result"]["detalleListaDeseos"]>
    composites: {}
  }

  type DetalleListaDeseosGetPayload<S extends boolean | null | undefined | DetalleListaDeseosDefaultArgs> = $Result.GetResult<Prisma.$DetalleListaDeseosPayload, S>

  type DetalleListaDeseosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DetalleListaDeseosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DetalleListaDeseosCountAggregateInputType | true
    }

  export interface DetalleListaDeseosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetalleListaDeseos'], meta: { name: 'DetalleListaDeseos' } }
    /**
     * Find zero or one DetalleListaDeseos that matches the filter.
     * @param {DetalleListaDeseosFindUniqueArgs} args - Arguments to find a DetalleListaDeseos
     * @example
     * // Get one DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetalleListaDeseosFindUniqueArgs>(args: SelectSubset<T, DetalleListaDeseosFindUniqueArgs<ExtArgs>>): Prisma__DetalleListaDeseosClient<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DetalleListaDeseos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DetalleListaDeseosFindUniqueOrThrowArgs} args - Arguments to find a DetalleListaDeseos
     * @example
     * // Get one DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetalleListaDeseosFindUniqueOrThrowArgs>(args: SelectSubset<T, DetalleListaDeseosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetalleListaDeseosClient<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DetalleListaDeseos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleListaDeseosFindFirstArgs} args - Arguments to find a DetalleListaDeseos
     * @example
     * // Get one DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetalleListaDeseosFindFirstArgs>(args?: SelectSubset<T, DetalleListaDeseosFindFirstArgs<ExtArgs>>): Prisma__DetalleListaDeseosClient<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DetalleListaDeseos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleListaDeseosFindFirstOrThrowArgs} args - Arguments to find a DetalleListaDeseos
     * @example
     * // Get one DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetalleListaDeseosFindFirstOrThrowArgs>(args?: SelectSubset<T, DetalleListaDeseosFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetalleListaDeseosClient<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DetalleListaDeseos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleListaDeseosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.findMany()
     * 
     * // Get first 10 DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.findMany({ take: 10 })
     * 
     * // Only select the `id_detalle_lista_deseos`
     * const detalleListaDeseosWithId_detalle_lista_deseosOnly = await prisma.detalleListaDeseos.findMany({ select: { id_detalle_lista_deseos: true } })
     * 
     */
    findMany<T extends DetalleListaDeseosFindManyArgs>(args?: SelectSubset<T, DetalleListaDeseosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DetalleListaDeseos.
     * @param {DetalleListaDeseosCreateArgs} args - Arguments to create a DetalleListaDeseos.
     * @example
     * // Create one DetalleListaDeseos
     * const DetalleListaDeseos = await prisma.detalleListaDeseos.create({
     *   data: {
     *     // ... data to create a DetalleListaDeseos
     *   }
     * })
     * 
     */
    create<T extends DetalleListaDeseosCreateArgs>(args: SelectSubset<T, DetalleListaDeseosCreateArgs<ExtArgs>>): Prisma__DetalleListaDeseosClient<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DetalleListaDeseos.
     * @param {DetalleListaDeseosCreateManyArgs} args - Arguments to create many DetalleListaDeseos.
     * @example
     * // Create many DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetalleListaDeseosCreateManyArgs>(args?: SelectSubset<T, DetalleListaDeseosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetalleListaDeseos and returns the data saved in the database.
     * @param {DetalleListaDeseosCreateManyAndReturnArgs} args - Arguments to create many DetalleListaDeseos.
     * @example
     * // Create many DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetalleListaDeseos and only return the `id_detalle_lista_deseos`
     * const detalleListaDeseosWithId_detalle_lista_deseosOnly = await prisma.detalleListaDeseos.createManyAndReturn({
     *   select: { id_detalle_lista_deseos: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetalleListaDeseosCreateManyAndReturnArgs>(args?: SelectSubset<T, DetalleListaDeseosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DetalleListaDeseos.
     * @param {DetalleListaDeseosDeleteArgs} args - Arguments to delete one DetalleListaDeseos.
     * @example
     * // Delete one DetalleListaDeseos
     * const DetalleListaDeseos = await prisma.detalleListaDeseos.delete({
     *   where: {
     *     // ... filter to delete one DetalleListaDeseos
     *   }
     * })
     * 
     */
    delete<T extends DetalleListaDeseosDeleteArgs>(args: SelectSubset<T, DetalleListaDeseosDeleteArgs<ExtArgs>>): Prisma__DetalleListaDeseosClient<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DetalleListaDeseos.
     * @param {DetalleListaDeseosUpdateArgs} args - Arguments to update one DetalleListaDeseos.
     * @example
     * // Update one DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetalleListaDeseosUpdateArgs>(args: SelectSubset<T, DetalleListaDeseosUpdateArgs<ExtArgs>>): Prisma__DetalleListaDeseosClient<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DetalleListaDeseos.
     * @param {DetalleListaDeseosDeleteManyArgs} args - Arguments to filter DetalleListaDeseos to delete.
     * @example
     * // Delete a few DetalleListaDeseos
     * const { count } = await prisma.detalleListaDeseos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetalleListaDeseosDeleteManyArgs>(args?: SelectSubset<T, DetalleListaDeseosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleListaDeseos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleListaDeseosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetalleListaDeseosUpdateManyArgs>(args: SelectSubset<T, DetalleListaDeseosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetalleListaDeseos and returns the data updated in the database.
     * @param {DetalleListaDeseosUpdateManyAndReturnArgs} args - Arguments to update many DetalleListaDeseos.
     * @example
     * // Update many DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DetalleListaDeseos and only return the `id_detalle_lista_deseos`
     * const detalleListaDeseosWithId_detalle_lista_deseosOnly = await prisma.detalleListaDeseos.updateManyAndReturn({
     *   select: { id_detalle_lista_deseos: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DetalleListaDeseosUpdateManyAndReturnArgs>(args: SelectSubset<T, DetalleListaDeseosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DetalleListaDeseos.
     * @param {DetalleListaDeseosUpsertArgs} args - Arguments to update or create a DetalleListaDeseos.
     * @example
     * // Update or create a DetalleListaDeseos
     * const detalleListaDeseos = await prisma.detalleListaDeseos.upsert({
     *   create: {
     *     // ... data to create a DetalleListaDeseos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetalleListaDeseos we want to update
     *   }
     * })
     */
    upsert<T extends DetalleListaDeseosUpsertArgs>(args: SelectSubset<T, DetalleListaDeseosUpsertArgs<ExtArgs>>): Prisma__DetalleListaDeseosClient<$Result.GetResult<Prisma.$DetalleListaDeseosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DetalleListaDeseos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleListaDeseosCountArgs} args - Arguments to filter DetalleListaDeseos to count.
     * @example
     * // Count the number of DetalleListaDeseos
     * const count = await prisma.detalleListaDeseos.count({
     *   where: {
     *     // ... the filter for the DetalleListaDeseos we want to count
     *   }
     * })
    **/
    count<T extends DetalleListaDeseosCountArgs>(
      args?: Subset<T, DetalleListaDeseosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleListaDeseosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetalleListaDeseos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleListaDeseosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleListaDeseosAggregateArgs>(args: Subset<T, DetalleListaDeseosAggregateArgs>): Prisma.PrismaPromise<GetDetalleListaDeseosAggregateType<T>>

    /**
     * Group by DetalleListaDeseos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleListaDeseosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetalleListaDeseosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetalleListaDeseosGroupByArgs['orderBy'] }
        : { orderBy?: DetalleListaDeseosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetalleListaDeseosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleListaDeseosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetalleListaDeseos model
   */
  readonly fields: DetalleListaDeseosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetalleListaDeseos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetalleListaDeseosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ListaDeDeseos<T extends ListaDeDeseosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListaDeDeseosDefaultArgs<ExtArgs>>): Prisma__ListaDeDeseosClient<$Result.GetResult<Prisma.$ListaDeDeseosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetalleListaDeseos model
   */
  interface DetalleListaDeseosFieldRefs {
    readonly id_detalle_lista_deseos: FieldRef<"DetalleListaDeseos", 'Int'>
    readonly fecha_agregado: FieldRef<"DetalleListaDeseos", 'DateTime'>
    readonly id_lista_deseo: FieldRef<"DetalleListaDeseos", 'Int'>
    readonly id_producto: FieldRef<"DetalleListaDeseos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * DetalleListaDeseos findUnique
   */
  export type DetalleListaDeseosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * Filter, which DetalleListaDeseos to fetch.
     */
    where: DetalleListaDeseosWhereUniqueInput
  }

  /**
   * DetalleListaDeseos findUniqueOrThrow
   */
  export type DetalleListaDeseosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * Filter, which DetalleListaDeseos to fetch.
     */
    where: DetalleListaDeseosWhereUniqueInput
  }

  /**
   * DetalleListaDeseos findFirst
   */
  export type DetalleListaDeseosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * Filter, which DetalleListaDeseos to fetch.
     */
    where?: DetalleListaDeseosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleListaDeseos to fetch.
     */
    orderBy?: DetalleListaDeseosOrderByWithRelationInput | DetalleListaDeseosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleListaDeseos.
     */
    cursor?: DetalleListaDeseosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleListaDeseos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleListaDeseos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleListaDeseos.
     */
    distinct?: DetalleListaDeseosScalarFieldEnum | DetalleListaDeseosScalarFieldEnum[]
  }

  /**
   * DetalleListaDeseos findFirstOrThrow
   */
  export type DetalleListaDeseosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * Filter, which DetalleListaDeseos to fetch.
     */
    where?: DetalleListaDeseosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleListaDeseos to fetch.
     */
    orderBy?: DetalleListaDeseosOrderByWithRelationInput | DetalleListaDeseosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetalleListaDeseos.
     */
    cursor?: DetalleListaDeseosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleListaDeseos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleListaDeseos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetalleListaDeseos.
     */
    distinct?: DetalleListaDeseosScalarFieldEnum | DetalleListaDeseosScalarFieldEnum[]
  }

  /**
   * DetalleListaDeseos findMany
   */
  export type DetalleListaDeseosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * Filter, which DetalleListaDeseos to fetch.
     */
    where?: DetalleListaDeseosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetalleListaDeseos to fetch.
     */
    orderBy?: DetalleListaDeseosOrderByWithRelationInput | DetalleListaDeseosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetalleListaDeseos.
     */
    cursor?: DetalleListaDeseosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetalleListaDeseos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetalleListaDeseos.
     */
    skip?: number
    distinct?: DetalleListaDeseosScalarFieldEnum | DetalleListaDeseosScalarFieldEnum[]
  }

  /**
   * DetalleListaDeseos create
   */
  export type DetalleListaDeseosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * The data needed to create a DetalleListaDeseos.
     */
    data: XOR<DetalleListaDeseosCreateInput, DetalleListaDeseosUncheckedCreateInput>
  }

  /**
   * DetalleListaDeseos createMany
   */
  export type DetalleListaDeseosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetalleListaDeseos.
     */
    data: DetalleListaDeseosCreateManyInput | DetalleListaDeseosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DetalleListaDeseos createManyAndReturn
   */
  export type DetalleListaDeseosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * The data used to create many DetalleListaDeseos.
     */
    data: DetalleListaDeseosCreateManyInput | DetalleListaDeseosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleListaDeseos update
   */
  export type DetalleListaDeseosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * The data needed to update a DetalleListaDeseos.
     */
    data: XOR<DetalleListaDeseosUpdateInput, DetalleListaDeseosUncheckedUpdateInput>
    /**
     * Choose, which DetalleListaDeseos to update.
     */
    where: DetalleListaDeseosWhereUniqueInput
  }

  /**
   * DetalleListaDeseos updateMany
   */
  export type DetalleListaDeseosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetalleListaDeseos.
     */
    data: XOR<DetalleListaDeseosUpdateManyMutationInput, DetalleListaDeseosUncheckedUpdateManyInput>
    /**
     * Filter which DetalleListaDeseos to update
     */
    where?: DetalleListaDeseosWhereInput
    /**
     * Limit how many DetalleListaDeseos to update.
     */
    limit?: number
  }

  /**
   * DetalleListaDeseos updateManyAndReturn
   */
  export type DetalleListaDeseosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * The data used to update DetalleListaDeseos.
     */
    data: XOR<DetalleListaDeseosUpdateManyMutationInput, DetalleListaDeseosUncheckedUpdateManyInput>
    /**
     * Filter which DetalleListaDeseos to update
     */
    where?: DetalleListaDeseosWhereInput
    /**
     * Limit how many DetalleListaDeseos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetalleListaDeseos upsert
   */
  export type DetalleListaDeseosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * The filter to search for the DetalleListaDeseos to update in case it exists.
     */
    where: DetalleListaDeseosWhereUniqueInput
    /**
     * In case the DetalleListaDeseos found by the `where` argument doesn't exist, create a new DetalleListaDeseos with this data.
     */
    create: XOR<DetalleListaDeseosCreateInput, DetalleListaDeseosUncheckedCreateInput>
    /**
     * In case the DetalleListaDeseos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetalleListaDeseosUpdateInput, DetalleListaDeseosUncheckedUpdateInput>
  }

  /**
   * DetalleListaDeseos delete
   */
  export type DetalleListaDeseosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
    /**
     * Filter which DetalleListaDeseos to delete.
     */
    where: DetalleListaDeseosWhereUniqueInput
  }

  /**
   * DetalleListaDeseos deleteMany
   */
  export type DetalleListaDeseosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetalleListaDeseos to delete
     */
    where?: DetalleListaDeseosWhereInput
    /**
     * Limit how many DetalleListaDeseos to delete.
     */
    limit?: number
  }

  /**
   * DetalleListaDeseos without action
   */
  export type DetalleListaDeseosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetalleListaDeseos
     */
    select?: DetalleListaDeseosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetalleListaDeseos
     */
    omit?: DetalleListaDeseosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetalleListaDeseosInclude<ExtArgs> | null
  }


  /**
   * Model Valoracion
   */

  export type AggregateValoracion = {
    _count: ValoracionCountAggregateOutputType | null
    _avg: ValoracionAvgAggregateOutputType | null
    _sum: ValoracionSumAggregateOutputType | null
    _min: ValoracionMinAggregateOutputType | null
    _max: ValoracionMaxAggregateOutputType | null
  }

  export type ValoracionAvgAggregateOutputType = {
    id_valoracion: number | null
    puntaje: number | null
    id_usuario: number | null
    id_producto: number | null
  }

  export type ValoracionSumAggregateOutputType = {
    id_valoracion: number | null
    puntaje: number | null
    id_usuario: number | null
    id_producto: number | null
  }

  export type ValoracionMinAggregateOutputType = {
    id_valoracion: number | null
    puntaje: number | null
    comentario: string | null
    fecha: Date | null
    id_usuario: number | null
    id_producto: number | null
  }

  export type ValoracionMaxAggregateOutputType = {
    id_valoracion: number | null
    puntaje: number | null
    comentario: string | null
    fecha: Date | null
    id_usuario: number | null
    id_producto: number | null
  }

  export type ValoracionCountAggregateOutputType = {
    id_valoracion: number
    puntaje: number
    comentario: number
    fecha: number
    id_usuario: number
    id_producto: number
    _all: number
  }


  export type ValoracionAvgAggregateInputType = {
    id_valoracion?: true
    puntaje?: true
    id_usuario?: true
    id_producto?: true
  }

  export type ValoracionSumAggregateInputType = {
    id_valoracion?: true
    puntaje?: true
    id_usuario?: true
    id_producto?: true
  }

  export type ValoracionMinAggregateInputType = {
    id_valoracion?: true
    puntaje?: true
    comentario?: true
    fecha?: true
    id_usuario?: true
    id_producto?: true
  }

  export type ValoracionMaxAggregateInputType = {
    id_valoracion?: true
    puntaje?: true
    comentario?: true
    fecha?: true
    id_usuario?: true
    id_producto?: true
  }

  export type ValoracionCountAggregateInputType = {
    id_valoracion?: true
    puntaje?: true
    comentario?: true
    fecha?: true
    id_usuario?: true
    id_producto?: true
    _all?: true
  }

  export type ValoracionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Valoracion to aggregate.
     */
    where?: ValoracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Valoracions to fetch.
     */
    orderBy?: ValoracionOrderByWithRelationInput | ValoracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ValoracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Valoracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Valoracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Valoracions
    **/
    _count?: true | ValoracionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ValoracionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ValoracionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ValoracionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ValoracionMaxAggregateInputType
  }

  export type GetValoracionAggregateType<T extends ValoracionAggregateArgs> = {
        [P in keyof T & keyof AggregateValoracion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateValoracion[P]>
      : GetScalarType<T[P], AggregateValoracion[P]>
  }




  export type ValoracionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ValoracionWhereInput
    orderBy?: ValoracionOrderByWithAggregationInput | ValoracionOrderByWithAggregationInput[]
    by: ValoracionScalarFieldEnum[] | ValoracionScalarFieldEnum
    having?: ValoracionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ValoracionCountAggregateInputType | true
    _avg?: ValoracionAvgAggregateInputType
    _sum?: ValoracionSumAggregateInputType
    _min?: ValoracionMinAggregateInputType
    _max?: ValoracionMaxAggregateInputType
  }

  export type ValoracionGroupByOutputType = {
    id_valoracion: number
    puntaje: number
    comentario: string | null
    fecha: Date
    id_usuario: number
    id_producto: number
    _count: ValoracionCountAggregateOutputType | null
    _avg: ValoracionAvgAggregateOutputType | null
    _sum: ValoracionSumAggregateOutputType | null
    _min: ValoracionMinAggregateOutputType | null
    _max: ValoracionMaxAggregateOutputType | null
  }

  type GetValoracionGroupByPayload<T extends ValoracionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ValoracionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ValoracionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ValoracionGroupByOutputType[P]>
            : GetScalarType<T[P], ValoracionGroupByOutputType[P]>
        }
      >
    >


  export type ValoracionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_valoracion?: boolean
    puntaje?: boolean
    comentario?: boolean
    fecha?: boolean
    id_usuario?: boolean
    id_producto?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["valoracion"]>

  export type ValoracionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_valoracion?: boolean
    puntaje?: boolean
    comentario?: boolean
    fecha?: boolean
    id_usuario?: boolean
    id_producto?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["valoracion"]>

  export type ValoracionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_valoracion?: boolean
    puntaje?: boolean
    comentario?: boolean
    fecha?: boolean
    id_usuario?: boolean
    id_producto?: boolean
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["valoracion"]>

  export type ValoracionSelectScalar = {
    id_valoracion?: boolean
    puntaje?: boolean
    comentario?: boolean
    fecha?: boolean
    id_usuario?: boolean
    id_producto?: boolean
  }

  export type ValoracionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_valoracion" | "puntaje" | "comentario" | "fecha" | "id_usuario" | "id_producto", ExtArgs["result"]["valoracion"]>
  export type ValoracionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type ValoracionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type ValoracionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    Producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }

  export type $ValoracionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Valoracion"
    objects: {
      Usuario: Prisma.$UsuarioPayload<ExtArgs>
      Producto: Prisma.$ProductoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_valoracion: number
      puntaje: number
      comentario: string | null
      fecha: Date
      id_usuario: number
      id_producto: number
    }, ExtArgs["result"]["valoracion"]>
    composites: {}
  }

  type ValoracionGetPayload<S extends boolean | null | undefined | ValoracionDefaultArgs> = $Result.GetResult<Prisma.$ValoracionPayload, S>

  type ValoracionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ValoracionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ValoracionCountAggregateInputType | true
    }

  export interface ValoracionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Valoracion'], meta: { name: 'Valoracion' } }
    /**
     * Find zero or one Valoracion that matches the filter.
     * @param {ValoracionFindUniqueArgs} args - Arguments to find a Valoracion
     * @example
     * // Get one Valoracion
     * const valoracion = await prisma.valoracion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ValoracionFindUniqueArgs>(args: SelectSubset<T, ValoracionFindUniqueArgs<ExtArgs>>): Prisma__ValoracionClient<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Valoracion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ValoracionFindUniqueOrThrowArgs} args - Arguments to find a Valoracion
     * @example
     * // Get one Valoracion
     * const valoracion = await prisma.valoracion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ValoracionFindUniqueOrThrowArgs>(args: SelectSubset<T, ValoracionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ValoracionClient<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Valoracion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionFindFirstArgs} args - Arguments to find a Valoracion
     * @example
     * // Get one Valoracion
     * const valoracion = await prisma.valoracion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ValoracionFindFirstArgs>(args?: SelectSubset<T, ValoracionFindFirstArgs<ExtArgs>>): Prisma__ValoracionClient<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Valoracion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionFindFirstOrThrowArgs} args - Arguments to find a Valoracion
     * @example
     * // Get one Valoracion
     * const valoracion = await prisma.valoracion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ValoracionFindFirstOrThrowArgs>(args?: SelectSubset<T, ValoracionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ValoracionClient<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Valoracions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Valoracions
     * const valoracions = await prisma.valoracion.findMany()
     * 
     * // Get first 10 Valoracions
     * const valoracions = await prisma.valoracion.findMany({ take: 10 })
     * 
     * // Only select the `id_valoracion`
     * const valoracionWithId_valoracionOnly = await prisma.valoracion.findMany({ select: { id_valoracion: true } })
     * 
     */
    findMany<T extends ValoracionFindManyArgs>(args?: SelectSubset<T, ValoracionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Valoracion.
     * @param {ValoracionCreateArgs} args - Arguments to create a Valoracion.
     * @example
     * // Create one Valoracion
     * const Valoracion = await prisma.valoracion.create({
     *   data: {
     *     // ... data to create a Valoracion
     *   }
     * })
     * 
     */
    create<T extends ValoracionCreateArgs>(args: SelectSubset<T, ValoracionCreateArgs<ExtArgs>>): Prisma__ValoracionClient<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Valoracions.
     * @param {ValoracionCreateManyArgs} args - Arguments to create many Valoracions.
     * @example
     * // Create many Valoracions
     * const valoracion = await prisma.valoracion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ValoracionCreateManyArgs>(args?: SelectSubset<T, ValoracionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Valoracions and returns the data saved in the database.
     * @param {ValoracionCreateManyAndReturnArgs} args - Arguments to create many Valoracions.
     * @example
     * // Create many Valoracions
     * const valoracion = await prisma.valoracion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Valoracions and only return the `id_valoracion`
     * const valoracionWithId_valoracionOnly = await prisma.valoracion.createManyAndReturn({
     *   select: { id_valoracion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ValoracionCreateManyAndReturnArgs>(args?: SelectSubset<T, ValoracionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Valoracion.
     * @param {ValoracionDeleteArgs} args - Arguments to delete one Valoracion.
     * @example
     * // Delete one Valoracion
     * const Valoracion = await prisma.valoracion.delete({
     *   where: {
     *     // ... filter to delete one Valoracion
     *   }
     * })
     * 
     */
    delete<T extends ValoracionDeleteArgs>(args: SelectSubset<T, ValoracionDeleteArgs<ExtArgs>>): Prisma__ValoracionClient<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Valoracion.
     * @param {ValoracionUpdateArgs} args - Arguments to update one Valoracion.
     * @example
     * // Update one Valoracion
     * const valoracion = await prisma.valoracion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ValoracionUpdateArgs>(args: SelectSubset<T, ValoracionUpdateArgs<ExtArgs>>): Prisma__ValoracionClient<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Valoracions.
     * @param {ValoracionDeleteManyArgs} args - Arguments to filter Valoracions to delete.
     * @example
     * // Delete a few Valoracions
     * const { count } = await prisma.valoracion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ValoracionDeleteManyArgs>(args?: SelectSubset<T, ValoracionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Valoracions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Valoracions
     * const valoracion = await prisma.valoracion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ValoracionUpdateManyArgs>(args: SelectSubset<T, ValoracionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Valoracions and returns the data updated in the database.
     * @param {ValoracionUpdateManyAndReturnArgs} args - Arguments to update many Valoracions.
     * @example
     * // Update many Valoracions
     * const valoracion = await prisma.valoracion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Valoracions and only return the `id_valoracion`
     * const valoracionWithId_valoracionOnly = await prisma.valoracion.updateManyAndReturn({
     *   select: { id_valoracion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ValoracionUpdateManyAndReturnArgs>(args: SelectSubset<T, ValoracionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Valoracion.
     * @param {ValoracionUpsertArgs} args - Arguments to update or create a Valoracion.
     * @example
     * // Update or create a Valoracion
     * const valoracion = await prisma.valoracion.upsert({
     *   create: {
     *     // ... data to create a Valoracion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Valoracion we want to update
     *   }
     * })
     */
    upsert<T extends ValoracionUpsertArgs>(args: SelectSubset<T, ValoracionUpsertArgs<ExtArgs>>): Prisma__ValoracionClient<$Result.GetResult<Prisma.$ValoracionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Valoracions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionCountArgs} args - Arguments to filter Valoracions to count.
     * @example
     * // Count the number of Valoracions
     * const count = await prisma.valoracion.count({
     *   where: {
     *     // ... the filter for the Valoracions we want to count
     *   }
     * })
    **/
    count<T extends ValoracionCountArgs>(
      args?: Subset<T, ValoracionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ValoracionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Valoracion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ValoracionAggregateArgs>(args: Subset<T, ValoracionAggregateArgs>): Prisma.PrismaPromise<GetValoracionAggregateType<T>>

    /**
     * Group by Valoracion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ValoracionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ValoracionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ValoracionGroupByArgs['orderBy'] }
        : { orderBy?: ValoracionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ValoracionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetValoracionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Valoracion model
   */
  readonly fields: ValoracionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Valoracion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ValoracionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Valoracion model
   */
  interface ValoracionFieldRefs {
    readonly id_valoracion: FieldRef<"Valoracion", 'Int'>
    readonly puntaje: FieldRef<"Valoracion", 'Int'>
    readonly comentario: FieldRef<"Valoracion", 'String'>
    readonly fecha: FieldRef<"Valoracion", 'DateTime'>
    readonly id_usuario: FieldRef<"Valoracion", 'Int'>
    readonly id_producto: FieldRef<"Valoracion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Valoracion findUnique
   */
  export type ValoracionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * Filter, which Valoracion to fetch.
     */
    where: ValoracionWhereUniqueInput
  }

  /**
   * Valoracion findUniqueOrThrow
   */
  export type ValoracionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * Filter, which Valoracion to fetch.
     */
    where: ValoracionWhereUniqueInput
  }

  /**
   * Valoracion findFirst
   */
  export type ValoracionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * Filter, which Valoracion to fetch.
     */
    where?: ValoracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Valoracions to fetch.
     */
    orderBy?: ValoracionOrderByWithRelationInput | ValoracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Valoracions.
     */
    cursor?: ValoracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Valoracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Valoracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Valoracions.
     */
    distinct?: ValoracionScalarFieldEnum | ValoracionScalarFieldEnum[]
  }

  /**
   * Valoracion findFirstOrThrow
   */
  export type ValoracionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * Filter, which Valoracion to fetch.
     */
    where?: ValoracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Valoracions to fetch.
     */
    orderBy?: ValoracionOrderByWithRelationInput | ValoracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Valoracions.
     */
    cursor?: ValoracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Valoracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Valoracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Valoracions.
     */
    distinct?: ValoracionScalarFieldEnum | ValoracionScalarFieldEnum[]
  }

  /**
   * Valoracion findMany
   */
  export type ValoracionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * Filter, which Valoracions to fetch.
     */
    where?: ValoracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Valoracions to fetch.
     */
    orderBy?: ValoracionOrderByWithRelationInput | ValoracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Valoracions.
     */
    cursor?: ValoracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Valoracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Valoracions.
     */
    skip?: number
    distinct?: ValoracionScalarFieldEnum | ValoracionScalarFieldEnum[]
  }

  /**
   * Valoracion create
   */
  export type ValoracionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * The data needed to create a Valoracion.
     */
    data: XOR<ValoracionCreateInput, ValoracionUncheckedCreateInput>
  }

  /**
   * Valoracion createMany
   */
  export type ValoracionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Valoracions.
     */
    data: ValoracionCreateManyInput | ValoracionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Valoracion createManyAndReturn
   */
  export type ValoracionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * The data used to create many Valoracions.
     */
    data: ValoracionCreateManyInput | ValoracionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Valoracion update
   */
  export type ValoracionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * The data needed to update a Valoracion.
     */
    data: XOR<ValoracionUpdateInput, ValoracionUncheckedUpdateInput>
    /**
     * Choose, which Valoracion to update.
     */
    where: ValoracionWhereUniqueInput
  }

  /**
   * Valoracion updateMany
   */
  export type ValoracionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Valoracions.
     */
    data: XOR<ValoracionUpdateManyMutationInput, ValoracionUncheckedUpdateManyInput>
    /**
     * Filter which Valoracions to update
     */
    where?: ValoracionWhereInput
    /**
     * Limit how many Valoracions to update.
     */
    limit?: number
  }

  /**
   * Valoracion updateManyAndReturn
   */
  export type ValoracionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * The data used to update Valoracions.
     */
    data: XOR<ValoracionUpdateManyMutationInput, ValoracionUncheckedUpdateManyInput>
    /**
     * Filter which Valoracions to update
     */
    where?: ValoracionWhereInput
    /**
     * Limit how many Valoracions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Valoracion upsert
   */
  export type ValoracionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * The filter to search for the Valoracion to update in case it exists.
     */
    where: ValoracionWhereUniqueInput
    /**
     * In case the Valoracion found by the `where` argument doesn't exist, create a new Valoracion with this data.
     */
    create: XOR<ValoracionCreateInput, ValoracionUncheckedCreateInput>
    /**
     * In case the Valoracion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ValoracionUpdateInput, ValoracionUncheckedUpdateInput>
  }

  /**
   * Valoracion delete
   */
  export type ValoracionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
    /**
     * Filter which Valoracion to delete.
     */
    where: ValoracionWhereUniqueInput
  }

  /**
   * Valoracion deleteMany
   */
  export type ValoracionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Valoracions to delete
     */
    where?: ValoracionWhereInput
    /**
     * Limit how many Valoracions to delete.
     */
    limit?: number
  }

  /**
   * Valoracion without action
   */
  export type ValoracionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Valoracion
     */
    select?: ValoracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Valoracion
     */
    omit?: ValoracionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ValoracionInclude<ExtArgs> | null
  }


  /**
   * Model MetodoPago
   */

  export type AggregateMetodoPago = {
    _count: MetodoPagoCountAggregateOutputType | null
    _avg: MetodoPagoAvgAggregateOutputType | null
    _sum: MetodoPagoSumAggregateOutputType | null
    _min: MetodoPagoMinAggregateOutputType | null
    _max: MetodoPagoMaxAggregateOutputType | null
  }

  export type MetodoPagoAvgAggregateOutputType = {
    id_metodo_pago: number | null
  }

  export type MetodoPagoSumAggregateOutputType = {
    id_metodo_pago: number | null
  }

  export type MetodoPagoMinAggregateOutputType = {
    id_metodo_pago: number | null
    tipo: string | null
    descripcion: string | null
  }

  export type MetodoPagoMaxAggregateOutputType = {
    id_metodo_pago: number | null
    tipo: string | null
    descripcion: string | null
  }

  export type MetodoPagoCountAggregateOutputType = {
    id_metodo_pago: number
    tipo: number
    descripcion: number
    _all: number
  }


  export type MetodoPagoAvgAggregateInputType = {
    id_metodo_pago?: true
  }

  export type MetodoPagoSumAggregateInputType = {
    id_metodo_pago?: true
  }

  export type MetodoPagoMinAggregateInputType = {
    id_metodo_pago?: true
    tipo?: true
    descripcion?: true
  }

  export type MetodoPagoMaxAggregateInputType = {
    id_metodo_pago?: true
    tipo?: true
    descripcion?: true
  }

  export type MetodoPagoCountAggregateInputType = {
    id_metodo_pago?: true
    tipo?: true
    descripcion?: true
    _all?: true
  }

  export type MetodoPagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetodoPago to aggregate.
     */
    where?: MetodoPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetodoPagos to fetch.
     */
    orderBy?: MetodoPagoOrderByWithRelationInput | MetodoPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MetodoPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetodoPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetodoPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MetodoPagos
    **/
    _count?: true | MetodoPagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MetodoPagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MetodoPagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MetodoPagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MetodoPagoMaxAggregateInputType
  }

  export type GetMetodoPagoAggregateType<T extends MetodoPagoAggregateArgs> = {
        [P in keyof T & keyof AggregateMetodoPago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMetodoPago[P]>
      : GetScalarType<T[P], AggregateMetodoPago[P]>
  }




  export type MetodoPagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetodoPagoWhereInput
    orderBy?: MetodoPagoOrderByWithAggregationInput | MetodoPagoOrderByWithAggregationInput[]
    by: MetodoPagoScalarFieldEnum[] | MetodoPagoScalarFieldEnum
    having?: MetodoPagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MetodoPagoCountAggregateInputType | true
    _avg?: MetodoPagoAvgAggregateInputType
    _sum?: MetodoPagoSumAggregateInputType
    _min?: MetodoPagoMinAggregateInputType
    _max?: MetodoPagoMaxAggregateInputType
  }

  export type MetodoPagoGroupByOutputType = {
    id_metodo_pago: number
    tipo: string
    descripcion: string | null
    _count: MetodoPagoCountAggregateOutputType | null
    _avg: MetodoPagoAvgAggregateOutputType | null
    _sum: MetodoPagoSumAggregateOutputType | null
    _min: MetodoPagoMinAggregateOutputType | null
    _max: MetodoPagoMaxAggregateOutputType | null
  }

  type GetMetodoPagoGroupByPayload<T extends MetodoPagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MetodoPagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MetodoPagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MetodoPagoGroupByOutputType[P]>
            : GetScalarType<T[P], MetodoPagoGroupByOutputType[P]>
        }
      >
    >


  export type MetodoPagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_metodo_pago?: boolean
    tipo?: boolean
    descripcion?: boolean
    Venta?: boolean | MetodoPago$VentaArgs<ExtArgs>
    _count?: boolean | MetodoPagoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["metodoPago"]>

  export type MetodoPagoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_metodo_pago?: boolean
    tipo?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["metodoPago"]>

  export type MetodoPagoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_metodo_pago?: boolean
    tipo?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["metodoPago"]>

  export type MetodoPagoSelectScalar = {
    id_metodo_pago?: boolean
    tipo?: boolean
    descripcion?: boolean
  }

  export type MetodoPagoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_metodo_pago" | "tipo" | "descripcion", ExtArgs["result"]["metodoPago"]>
  export type MetodoPagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Venta?: boolean | MetodoPago$VentaArgs<ExtArgs>
    _count?: boolean | MetodoPagoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MetodoPagoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type MetodoPagoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MetodoPagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MetodoPago"
    objects: {
      Venta: Prisma.$VentaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_metodo_pago: number
      tipo: string
      descripcion: string | null
    }, ExtArgs["result"]["metodoPago"]>
    composites: {}
  }

  type MetodoPagoGetPayload<S extends boolean | null | undefined | MetodoPagoDefaultArgs> = $Result.GetResult<Prisma.$MetodoPagoPayload, S>

  type MetodoPagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MetodoPagoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MetodoPagoCountAggregateInputType | true
    }

  export interface MetodoPagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MetodoPago'], meta: { name: 'MetodoPago' } }
    /**
     * Find zero or one MetodoPago that matches the filter.
     * @param {MetodoPagoFindUniqueArgs} args - Arguments to find a MetodoPago
     * @example
     * // Get one MetodoPago
     * const metodoPago = await prisma.metodoPago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MetodoPagoFindUniqueArgs>(args: SelectSubset<T, MetodoPagoFindUniqueArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MetodoPago that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MetodoPagoFindUniqueOrThrowArgs} args - Arguments to find a MetodoPago
     * @example
     * // Get one MetodoPago
     * const metodoPago = await prisma.metodoPago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MetodoPagoFindUniqueOrThrowArgs>(args: SelectSubset<T, MetodoPagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MetodoPago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetodoPagoFindFirstArgs} args - Arguments to find a MetodoPago
     * @example
     * // Get one MetodoPago
     * const metodoPago = await prisma.metodoPago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MetodoPagoFindFirstArgs>(args?: SelectSubset<T, MetodoPagoFindFirstArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MetodoPago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetodoPagoFindFirstOrThrowArgs} args - Arguments to find a MetodoPago
     * @example
     * // Get one MetodoPago
     * const metodoPago = await prisma.metodoPago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MetodoPagoFindFirstOrThrowArgs>(args?: SelectSubset<T, MetodoPagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MetodoPagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetodoPagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MetodoPagos
     * const metodoPagos = await prisma.metodoPago.findMany()
     * 
     * // Get first 10 MetodoPagos
     * const metodoPagos = await prisma.metodoPago.findMany({ take: 10 })
     * 
     * // Only select the `id_metodo_pago`
     * const metodoPagoWithId_metodo_pagoOnly = await prisma.metodoPago.findMany({ select: { id_metodo_pago: true } })
     * 
     */
    findMany<T extends MetodoPagoFindManyArgs>(args?: SelectSubset<T, MetodoPagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MetodoPago.
     * @param {MetodoPagoCreateArgs} args - Arguments to create a MetodoPago.
     * @example
     * // Create one MetodoPago
     * const MetodoPago = await prisma.metodoPago.create({
     *   data: {
     *     // ... data to create a MetodoPago
     *   }
     * })
     * 
     */
    create<T extends MetodoPagoCreateArgs>(args: SelectSubset<T, MetodoPagoCreateArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MetodoPagos.
     * @param {MetodoPagoCreateManyArgs} args - Arguments to create many MetodoPagos.
     * @example
     * // Create many MetodoPagos
     * const metodoPago = await prisma.metodoPago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MetodoPagoCreateManyArgs>(args?: SelectSubset<T, MetodoPagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MetodoPagos and returns the data saved in the database.
     * @param {MetodoPagoCreateManyAndReturnArgs} args - Arguments to create many MetodoPagos.
     * @example
     * // Create many MetodoPagos
     * const metodoPago = await prisma.metodoPago.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MetodoPagos and only return the `id_metodo_pago`
     * const metodoPagoWithId_metodo_pagoOnly = await prisma.metodoPago.createManyAndReturn({
     *   select: { id_metodo_pago: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MetodoPagoCreateManyAndReturnArgs>(args?: SelectSubset<T, MetodoPagoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MetodoPago.
     * @param {MetodoPagoDeleteArgs} args - Arguments to delete one MetodoPago.
     * @example
     * // Delete one MetodoPago
     * const MetodoPago = await prisma.metodoPago.delete({
     *   where: {
     *     // ... filter to delete one MetodoPago
     *   }
     * })
     * 
     */
    delete<T extends MetodoPagoDeleteArgs>(args: SelectSubset<T, MetodoPagoDeleteArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MetodoPago.
     * @param {MetodoPagoUpdateArgs} args - Arguments to update one MetodoPago.
     * @example
     * // Update one MetodoPago
     * const metodoPago = await prisma.metodoPago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MetodoPagoUpdateArgs>(args: SelectSubset<T, MetodoPagoUpdateArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MetodoPagos.
     * @param {MetodoPagoDeleteManyArgs} args - Arguments to filter MetodoPagos to delete.
     * @example
     * // Delete a few MetodoPagos
     * const { count } = await prisma.metodoPago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MetodoPagoDeleteManyArgs>(args?: SelectSubset<T, MetodoPagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MetodoPagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetodoPagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MetodoPagos
     * const metodoPago = await prisma.metodoPago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MetodoPagoUpdateManyArgs>(args: SelectSubset<T, MetodoPagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MetodoPagos and returns the data updated in the database.
     * @param {MetodoPagoUpdateManyAndReturnArgs} args - Arguments to update many MetodoPagos.
     * @example
     * // Update many MetodoPagos
     * const metodoPago = await prisma.metodoPago.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MetodoPagos and only return the `id_metodo_pago`
     * const metodoPagoWithId_metodo_pagoOnly = await prisma.metodoPago.updateManyAndReturn({
     *   select: { id_metodo_pago: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MetodoPagoUpdateManyAndReturnArgs>(args: SelectSubset<T, MetodoPagoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MetodoPago.
     * @param {MetodoPagoUpsertArgs} args - Arguments to update or create a MetodoPago.
     * @example
     * // Update or create a MetodoPago
     * const metodoPago = await prisma.metodoPago.upsert({
     *   create: {
     *     // ... data to create a MetodoPago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MetodoPago we want to update
     *   }
     * })
     */
    upsert<T extends MetodoPagoUpsertArgs>(args: SelectSubset<T, MetodoPagoUpsertArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MetodoPagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetodoPagoCountArgs} args - Arguments to filter MetodoPagos to count.
     * @example
     * // Count the number of MetodoPagos
     * const count = await prisma.metodoPago.count({
     *   where: {
     *     // ... the filter for the MetodoPagos we want to count
     *   }
     * })
    **/
    count<T extends MetodoPagoCountArgs>(
      args?: Subset<T, MetodoPagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MetodoPagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MetodoPago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetodoPagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MetodoPagoAggregateArgs>(args: Subset<T, MetodoPagoAggregateArgs>): Prisma.PrismaPromise<GetMetodoPagoAggregateType<T>>

    /**
     * Group by MetodoPago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetodoPagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MetodoPagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MetodoPagoGroupByArgs['orderBy'] }
        : { orderBy?: MetodoPagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MetodoPagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetodoPagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MetodoPago model
   */
  readonly fields: MetodoPagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MetodoPago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MetodoPagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Venta<T extends MetodoPago$VentaArgs<ExtArgs> = {}>(args?: Subset<T, MetodoPago$VentaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MetodoPago model
   */
  interface MetodoPagoFieldRefs {
    readonly id_metodo_pago: FieldRef<"MetodoPago", 'Int'>
    readonly tipo: FieldRef<"MetodoPago", 'String'>
    readonly descripcion: FieldRef<"MetodoPago", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MetodoPago findUnique
   */
  export type MetodoPagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * Filter, which MetodoPago to fetch.
     */
    where: MetodoPagoWhereUniqueInput
  }

  /**
   * MetodoPago findUniqueOrThrow
   */
  export type MetodoPagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * Filter, which MetodoPago to fetch.
     */
    where: MetodoPagoWhereUniqueInput
  }

  /**
   * MetodoPago findFirst
   */
  export type MetodoPagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * Filter, which MetodoPago to fetch.
     */
    where?: MetodoPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetodoPagos to fetch.
     */
    orderBy?: MetodoPagoOrderByWithRelationInput | MetodoPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetodoPagos.
     */
    cursor?: MetodoPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetodoPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetodoPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetodoPagos.
     */
    distinct?: MetodoPagoScalarFieldEnum | MetodoPagoScalarFieldEnum[]
  }

  /**
   * MetodoPago findFirstOrThrow
   */
  export type MetodoPagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * Filter, which MetodoPago to fetch.
     */
    where?: MetodoPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetodoPagos to fetch.
     */
    orderBy?: MetodoPagoOrderByWithRelationInput | MetodoPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetodoPagos.
     */
    cursor?: MetodoPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetodoPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetodoPagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetodoPagos.
     */
    distinct?: MetodoPagoScalarFieldEnum | MetodoPagoScalarFieldEnum[]
  }

  /**
   * MetodoPago findMany
   */
  export type MetodoPagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * Filter, which MetodoPagos to fetch.
     */
    where?: MetodoPagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetodoPagos to fetch.
     */
    orderBy?: MetodoPagoOrderByWithRelationInput | MetodoPagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MetodoPagos.
     */
    cursor?: MetodoPagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetodoPagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetodoPagos.
     */
    skip?: number
    distinct?: MetodoPagoScalarFieldEnum | MetodoPagoScalarFieldEnum[]
  }

  /**
   * MetodoPago create
   */
  export type MetodoPagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * The data needed to create a MetodoPago.
     */
    data: XOR<MetodoPagoCreateInput, MetodoPagoUncheckedCreateInput>
  }

  /**
   * MetodoPago createMany
   */
  export type MetodoPagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MetodoPagos.
     */
    data: MetodoPagoCreateManyInput | MetodoPagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MetodoPago createManyAndReturn
   */
  export type MetodoPagoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * The data used to create many MetodoPagos.
     */
    data: MetodoPagoCreateManyInput | MetodoPagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MetodoPago update
   */
  export type MetodoPagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * The data needed to update a MetodoPago.
     */
    data: XOR<MetodoPagoUpdateInput, MetodoPagoUncheckedUpdateInput>
    /**
     * Choose, which MetodoPago to update.
     */
    where: MetodoPagoWhereUniqueInput
  }

  /**
   * MetodoPago updateMany
   */
  export type MetodoPagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MetodoPagos.
     */
    data: XOR<MetodoPagoUpdateManyMutationInput, MetodoPagoUncheckedUpdateManyInput>
    /**
     * Filter which MetodoPagos to update
     */
    where?: MetodoPagoWhereInput
    /**
     * Limit how many MetodoPagos to update.
     */
    limit?: number
  }

  /**
   * MetodoPago updateManyAndReturn
   */
  export type MetodoPagoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * The data used to update MetodoPagos.
     */
    data: XOR<MetodoPagoUpdateManyMutationInput, MetodoPagoUncheckedUpdateManyInput>
    /**
     * Filter which MetodoPagos to update
     */
    where?: MetodoPagoWhereInput
    /**
     * Limit how many MetodoPagos to update.
     */
    limit?: number
  }

  /**
   * MetodoPago upsert
   */
  export type MetodoPagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * The filter to search for the MetodoPago to update in case it exists.
     */
    where: MetodoPagoWhereUniqueInput
    /**
     * In case the MetodoPago found by the `where` argument doesn't exist, create a new MetodoPago with this data.
     */
    create: XOR<MetodoPagoCreateInput, MetodoPagoUncheckedCreateInput>
    /**
     * In case the MetodoPago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MetodoPagoUpdateInput, MetodoPagoUncheckedUpdateInput>
  }

  /**
   * MetodoPago delete
   */
  export type MetodoPagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
    /**
     * Filter which MetodoPago to delete.
     */
    where: MetodoPagoWhereUniqueInput
  }

  /**
   * MetodoPago deleteMany
   */
  export type MetodoPagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetodoPagos to delete
     */
    where?: MetodoPagoWhereInput
    /**
     * Limit how many MetodoPagos to delete.
     */
    limit?: number
  }

  /**
   * MetodoPago.Venta
   */
  export type MetodoPago$VentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * MetodoPago without action
   */
  export type MetodoPagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetodoPago
     */
    select?: MetodoPagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetodoPago
     */
    omit?: MetodoPagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MetodoPagoInclude<ExtArgs> | null
  }


  /**
   * Model Venta
   */

  export type AggregateVenta = {
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  export type VentaAvgAggregateOutputType = {
    id_venta: number | null
    monto_total: Decimal | null
    id_carro_compras: number | null
    id_metodo_pago: number | null
  }

  export type VentaSumAggregateOutputType = {
    id_venta: number | null
    monto_total: Decimal | null
    id_carro_compras: number | null
    id_metodo_pago: number | null
  }

  export type VentaMinAggregateOutputType = {
    id_venta: number | null
    monto_total: Decimal | null
    fecha_venta: Date | null
    id_carro_compras: number | null
    id_metodo_pago: number | null
  }

  export type VentaMaxAggregateOutputType = {
    id_venta: number | null
    monto_total: Decimal | null
    fecha_venta: Date | null
    id_carro_compras: number | null
    id_metodo_pago: number | null
  }

  export type VentaCountAggregateOutputType = {
    id_venta: number
    monto_total: number
    fecha_venta: number
    id_carro_compras: number
    id_metodo_pago: number
    _all: number
  }


  export type VentaAvgAggregateInputType = {
    id_venta?: true
    monto_total?: true
    id_carro_compras?: true
    id_metodo_pago?: true
  }

  export type VentaSumAggregateInputType = {
    id_venta?: true
    monto_total?: true
    id_carro_compras?: true
    id_metodo_pago?: true
  }

  export type VentaMinAggregateInputType = {
    id_venta?: true
    monto_total?: true
    fecha_venta?: true
    id_carro_compras?: true
    id_metodo_pago?: true
  }

  export type VentaMaxAggregateInputType = {
    id_venta?: true
    monto_total?: true
    fecha_venta?: true
    id_carro_compras?: true
    id_metodo_pago?: true
  }

  export type VentaCountAggregateInputType = {
    id_venta?: true
    monto_total?: true
    fecha_venta?: true
    id_carro_compras?: true
    id_metodo_pago?: true
    _all?: true
  }

  export type VentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Venta to aggregate.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ventas
    **/
    _count?: true | VentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaMaxAggregateInputType
  }

  export type GetVentaAggregateType<T extends VentaAggregateArgs> = {
        [P in keyof T & keyof AggregateVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVenta[P]>
      : GetScalarType<T[P], AggregateVenta[P]>
  }




  export type VentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithAggregationInput | VentaOrderByWithAggregationInput[]
    by: VentaScalarFieldEnum[] | VentaScalarFieldEnum
    having?: VentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaCountAggregateInputType | true
    _avg?: VentaAvgAggregateInputType
    _sum?: VentaSumAggregateInputType
    _min?: VentaMinAggregateInputType
    _max?: VentaMaxAggregateInputType
  }

  export type VentaGroupByOutputType = {
    id_venta: number
    monto_total: Decimal
    fecha_venta: Date
    id_carro_compras: number
    id_metodo_pago: number
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  type GetVentaGroupByPayload<T extends VentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaGroupByOutputType[P]>
        }
      >
    >


  export type VentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta?: boolean
    monto_total?: boolean
    fecha_venta?: boolean
    id_carro_compras?: boolean
    id_metodo_pago?: boolean
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
    MetodoPago?: boolean | MetodoPagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta?: boolean
    monto_total?: boolean
    fecha_venta?: boolean
    id_carro_compras?: boolean
    id_metodo_pago?: boolean
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
    MetodoPago?: boolean | MetodoPagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta?: boolean
    monto_total?: boolean
    fecha_venta?: boolean
    id_carro_compras?: boolean
    id_metodo_pago?: boolean
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
    MetodoPago?: boolean | MetodoPagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectScalar = {
    id_venta?: boolean
    monto_total?: boolean
    fecha_venta?: boolean
    id_carro_compras?: boolean
    id_metodo_pago?: boolean
  }

  export type VentaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_venta" | "monto_total" | "fecha_venta" | "id_carro_compras" | "id_metodo_pago", ExtArgs["result"]["venta"]>
  export type VentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
    MetodoPago?: boolean | MetodoPagoDefaultArgs<ExtArgs>
  }
  export type VentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
    MetodoPago?: boolean | MetodoPagoDefaultArgs<ExtArgs>
  }
  export type VentaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CarroDeCompras?: boolean | CarroDeComprasDefaultArgs<ExtArgs>
    MetodoPago?: boolean | MetodoPagoDefaultArgs<ExtArgs>
  }

  export type $VentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Venta"
    objects: {
      CarroDeCompras: Prisma.$CarroDeComprasPayload<ExtArgs>
      MetodoPago: Prisma.$MetodoPagoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_venta: number
      monto_total: Prisma.Decimal
      fecha_venta: Date
      id_carro_compras: number
      id_metodo_pago: number
    }, ExtArgs["result"]["venta"]>
    composites: {}
  }

  type VentaGetPayload<S extends boolean | null | undefined | VentaDefaultArgs> = $Result.GetResult<Prisma.$VentaPayload, S>

  type VentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VentaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VentaCountAggregateInputType | true
    }

  export interface VentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Venta'], meta: { name: 'Venta' } }
    /**
     * Find zero or one Venta that matches the filter.
     * @param {VentaFindUniqueArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaFindUniqueArgs>(args: SelectSubset<T, VentaFindUniqueArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Venta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VentaFindUniqueOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaFindFirstArgs>(args?: SelectSubset<T, VentaFindFirstArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.venta.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.venta.findMany({ take: 10 })
     * 
     * // Only select the `id_venta`
     * const ventaWithId_ventaOnly = await prisma.venta.findMany({ select: { id_venta: true } })
     * 
     */
    findMany<T extends VentaFindManyArgs>(args?: SelectSubset<T, VentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Venta.
     * @param {VentaCreateArgs} args - Arguments to create a Venta.
     * @example
     * // Create one Venta
     * const Venta = await prisma.venta.create({
     *   data: {
     *     // ... data to create a Venta
     *   }
     * })
     * 
     */
    create<T extends VentaCreateArgs>(args: SelectSubset<T, VentaCreateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ventas.
     * @param {VentaCreateManyArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaCreateManyArgs>(args?: SelectSubset<T, VentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ventas and returns the data saved in the database.
     * @param {VentaCreateManyAndReturnArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ventas and only return the `id_venta`
     * const ventaWithId_ventaOnly = await prisma.venta.createManyAndReturn({
     *   select: { id_venta: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Venta.
     * @param {VentaDeleteArgs} args - Arguments to delete one Venta.
     * @example
     * // Delete one Venta
     * const Venta = await prisma.venta.delete({
     *   where: {
     *     // ... filter to delete one Venta
     *   }
     * })
     * 
     */
    delete<T extends VentaDeleteArgs>(args: SelectSubset<T, VentaDeleteArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Venta.
     * @param {VentaUpdateArgs} args - Arguments to update one Venta.
     * @example
     * // Update one Venta
     * const venta = await prisma.venta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaUpdateArgs>(args: SelectSubset<T, VentaUpdateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ventas.
     * @param {VentaDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.venta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaDeleteManyArgs>(args?: SelectSubset<T, VentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaUpdateManyArgs>(args: SelectSubset<T, VentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas and returns the data updated in the database.
     * @param {VentaUpdateManyAndReturnArgs} args - Arguments to update many Ventas.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ventas and only return the `id_venta`
     * const ventaWithId_ventaOnly = await prisma.venta.updateManyAndReturn({
     *   select: { id_venta: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VentaUpdateManyAndReturnArgs>(args: SelectSubset<T, VentaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Venta.
     * @param {VentaUpsertArgs} args - Arguments to update or create a Venta.
     * @example
     * // Update or create a Venta
     * const venta = await prisma.venta.upsert({
     *   create: {
     *     // ... data to create a Venta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Venta we want to update
     *   }
     * })
     */
    upsert<T extends VentaUpsertArgs>(args: SelectSubset<T, VentaUpsertArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.venta.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends VentaCountArgs>(
      args?: Subset<T, VentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaAggregateArgs>(args: Subset<T, VentaAggregateArgs>): Prisma.PrismaPromise<GetVentaAggregateType<T>>

    /**
     * Group by Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaGroupByArgs['orderBy'] }
        : { orderBy?: VentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Venta model
   */
  readonly fields: VentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Venta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CarroDeCompras<T extends CarroDeComprasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CarroDeComprasDefaultArgs<ExtArgs>>): Prisma__CarroDeComprasClient<$Result.GetResult<Prisma.$CarroDeComprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    MetodoPago<T extends MetodoPagoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MetodoPagoDefaultArgs<ExtArgs>>): Prisma__MetodoPagoClient<$Result.GetResult<Prisma.$MetodoPagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Venta model
   */
  interface VentaFieldRefs {
    readonly id_venta: FieldRef<"Venta", 'Int'>
    readonly monto_total: FieldRef<"Venta", 'Decimal'>
    readonly fecha_venta: FieldRef<"Venta", 'DateTime'>
    readonly id_carro_compras: FieldRef<"Venta", 'Int'>
    readonly id_metodo_pago: FieldRef<"Venta", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Venta findUnique
   */
  export type VentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findUniqueOrThrow
   */
  export type VentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findFirst
   */
  export type VentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findFirstOrThrow
   */
  export type VentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findMany
   */
  export type VentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Ventas to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta create
   */
  export type VentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to create a Venta.
     */
    data: XOR<VentaCreateInput, VentaUncheckedCreateInput>
  }

  /**
   * Venta createMany
   */
  export type VentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Venta createManyAndReturn
   */
  export type VentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta update
   */
  export type VentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to update a Venta.
     */
    data: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
    /**
     * Choose, which Venta to update.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta updateMany
   */
  export type VentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to update.
     */
    limit?: number
  }

  /**
   * Venta updateManyAndReturn
   */
  export type VentaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta upsert
   */
  export type VentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The filter to search for the Venta to update in case it exists.
     */
    where: VentaWhereUniqueInput
    /**
     * In case the Venta found by the `where` argument doesn't exist, create a new Venta with this data.
     */
    create: XOR<VentaCreateInput, VentaUncheckedCreateInput>
    /**
     * In case the Venta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
  }

  /**
   * Venta delete
   */
  export type VentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter which Venta to delete.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta deleteMany
   */
  export type VentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ventas to delete
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to delete.
     */
    limit?: number
  }

  /**
   * Venta without action
   */
  export type VentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const RegionScalarFieldEnum: {
    id_region: 'id_region',
    nombre: 'nombre'
  };

  export type RegionScalarFieldEnum = (typeof RegionScalarFieldEnum)[keyof typeof RegionScalarFieldEnum]


  export const CiudadScalarFieldEnum: {
    id_ciudad: 'id_ciudad',
    nombre: 'nombre',
    id_region: 'id_region'
  };

  export type CiudadScalarFieldEnum = (typeof CiudadScalarFieldEnum)[keyof typeof CiudadScalarFieldEnum]


  export const ComunaScalarFieldEnum: {
    id_comuna: 'id_comuna',
    nombre: 'nombre',
    id_ciudad: 'id_ciudad'
  };

  export type ComunaScalarFieldEnum = (typeof ComunaScalarFieldEnum)[keyof typeof ComunaScalarFieldEnum]


  export const DireccionScalarFieldEnum: {
    id_direccion: 'id_direccion',
    calle: 'calle',
    numero: 'numero',
    id_comuna: 'id_comuna'
  };

  export type DireccionScalarFieldEnum = (typeof DireccionScalarFieldEnum)[keyof typeof DireccionScalarFieldEnum]


  export const RolScalarFieldEnum: {
    id_rol: 'id_rol',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type RolScalarFieldEnum = (typeof RolScalarFieldEnum)[keyof typeof RolScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    fecha_registro: 'fecha_registro',
    ultimo_login: 'ultimo_login',
    esta_activo: 'esta_activo',
    id_direccion: 'id_direccion',
    id_rol: 'id_rol'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const PermisoScalarFieldEnum: {
    id_permiso: 'id_permiso',
    nombre: 'nombre',
    descripcion: 'descripcion',
    id_rol: 'id_rol'
  };

  export type PermisoScalarFieldEnum = (typeof PermisoScalarFieldEnum)[keyof typeof PermisoScalarFieldEnum]


  export const PymeScalarFieldEnum: {
    id_pyme: 'id_pyme',
    nombre: 'nombre',
    rut: 'rut',
    descripcion: 'descripcion',
    id_usuario: 'id_usuario',
    id_direccion: 'id_direccion'
  };

  export type PymeScalarFieldEnum = (typeof PymeScalarFieldEnum)[keyof typeof PymeScalarFieldEnum]


  export const CategoriaDeProductoScalarFieldEnum: {
    id_categoria_producto: 'id_categoria_producto',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type CategoriaDeProductoScalarFieldEnum = (typeof CategoriaDeProductoScalarFieldEnum)[keyof typeof CategoriaDeProductoScalarFieldEnum]


  export const ProductoScalarFieldEnum: {
    id_producto: 'id_producto',
    nombre: 'nombre',
    descripcion: 'descripcion',
    precio: 'precio',
    stock: 'stock',
    estado: 'estado',
    fecha_publicacion: 'fecha_publicacion',
    fecha_actualizacion: 'fecha_actualizacion',
    img_url: 'img_url',
    id_pyme: 'id_pyme',
    id_categoria_producto: 'id_categoria_producto'
  };

  export type ProductoScalarFieldEnum = (typeof ProductoScalarFieldEnum)[keyof typeof ProductoScalarFieldEnum]


  export const CarroDeComprasScalarFieldEnum: {
    id_carro_compras: 'id_carro_compras',
    fecha: 'fecha',
    total: 'total',
    estado: 'estado',
    id_usuario: 'id_usuario'
  };

  export type CarroDeComprasScalarFieldEnum = (typeof CarroDeComprasScalarFieldEnum)[keyof typeof CarroDeComprasScalarFieldEnum]


  export const DetalleCarroComprasScalarFieldEnum: {
    id_detalle_carro_compras: 'id_detalle_carro_compras',
    cantidad: 'cantidad',
    id_producto: 'id_producto',
    id_carro_compras: 'id_carro_compras'
  };

  export type DetalleCarroComprasScalarFieldEnum = (typeof DetalleCarroComprasScalarFieldEnum)[keyof typeof DetalleCarroComprasScalarFieldEnum]


  export const ListaDeDeseosScalarFieldEnum: {
    id_lista_deseo: 'id_lista_deseo',
    fecha_creacion: 'fecha_creacion',
    id_usuario: 'id_usuario'
  };

  export type ListaDeDeseosScalarFieldEnum = (typeof ListaDeDeseosScalarFieldEnum)[keyof typeof ListaDeDeseosScalarFieldEnum]


  export const DetalleListaDeseosScalarFieldEnum: {
    id_detalle_lista_deseos: 'id_detalle_lista_deseos',
    fecha_agregado: 'fecha_agregado',
    id_lista_deseo: 'id_lista_deseo',
    id_producto: 'id_producto'
  };

  export type DetalleListaDeseosScalarFieldEnum = (typeof DetalleListaDeseosScalarFieldEnum)[keyof typeof DetalleListaDeseosScalarFieldEnum]


  export const ValoracionScalarFieldEnum: {
    id_valoracion: 'id_valoracion',
    puntaje: 'puntaje',
    comentario: 'comentario',
    fecha: 'fecha',
    id_usuario: 'id_usuario',
    id_producto: 'id_producto'
  };

  export type ValoracionScalarFieldEnum = (typeof ValoracionScalarFieldEnum)[keyof typeof ValoracionScalarFieldEnum]


  export const MetodoPagoScalarFieldEnum: {
    id_metodo_pago: 'id_metodo_pago',
    tipo: 'tipo',
    descripcion: 'descripcion'
  };

  export type MetodoPagoScalarFieldEnum = (typeof MetodoPagoScalarFieldEnum)[keyof typeof MetodoPagoScalarFieldEnum]


  export const VentaScalarFieldEnum: {
    id_venta: 'id_venta',
    monto_total: 'monto_total',
    fecha_venta: 'fecha_venta',
    id_carro_compras: 'id_carro_compras',
    id_metodo_pago: 'id_metodo_pago'
  };

  export type VentaScalarFieldEnum = (typeof VentaScalarFieldEnum)[keyof typeof VentaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type RegionWhereInput = {
    AND?: RegionWhereInput | RegionWhereInput[]
    OR?: RegionWhereInput[]
    NOT?: RegionWhereInput | RegionWhereInput[]
    id_region?: IntFilter<"Region"> | number
    nombre?: StringFilter<"Region"> | string
    Ciudad?: CiudadListRelationFilter
  }

  export type RegionOrderByWithRelationInput = {
    id_region?: SortOrder
    nombre?: SortOrder
    Ciudad?: CiudadOrderByRelationAggregateInput
  }

  export type RegionWhereUniqueInput = Prisma.AtLeast<{
    id_region?: number
    AND?: RegionWhereInput | RegionWhereInput[]
    OR?: RegionWhereInput[]
    NOT?: RegionWhereInput | RegionWhereInput[]
    nombre?: StringFilter<"Region"> | string
    Ciudad?: CiudadListRelationFilter
  }, "id_region">

  export type RegionOrderByWithAggregationInput = {
    id_region?: SortOrder
    nombre?: SortOrder
    _count?: RegionCountOrderByAggregateInput
    _avg?: RegionAvgOrderByAggregateInput
    _max?: RegionMaxOrderByAggregateInput
    _min?: RegionMinOrderByAggregateInput
    _sum?: RegionSumOrderByAggregateInput
  }

  export type RegionScalarWhereWithAggregatesInput = {
    AND?: RegionScalarWhereWithAggregatesInput | RegionScalarWhereWithAggregatesInput[]
    OR?: RegionScalarWhereWithAggregatesInput[]
    NOT?: RegionScalarWhereWithAggregatesInput | RegionScalarWhereWithAggregatesInput[]
    id_region?: IntWithAggregatesFilter<"Region"> | number
    nombre?: StringWithAggregatesFilter<"Region"> | string
  }

  export type CiudadWhereInput = {
    AND?: CiudadWhereInput | CiudadWhereInput[]
    OR?: CiudadWhereInput[]
    NOT?: CiudadWhereInput | CiudadWhereInput[]
    id_ciudad?: IntFilter<"Ciudad"> | number
    nombre?: StringFilter<"Ciudad"> | string
    id_region?: IntFilter<"Ciudad"> | number
    Region?: XOR<RegionScalarRelationFilter, RegionWhereInput>
    Comuna?: ComunaListRelationFilter
  }

  export type CiudadOrderByWithRelationInput = {
    id_ciudad?: SortOrder
    nombre?: SortOrder
    id_region?: SortOrder
    Region?: RegionOrderByWithRelationInput
    Comuna?: ComunaOrderByRelationAggregateInput
  }

  export type CiudadWhereUniqueInput = Prisma.AtLeast<{
    id_ciudad?: number
    AND?: CiudadWhereInput | CiudadWhereInput[]
    OR?: CiudadWhereInput[]
    NOT?: CiudadWhereInput | CiudadWhereInput[]
    nombre?: StringFilter<"Ciudad"> | string
    id_region?: IntFilter<"Ciudad"> | number
    Region?: XOR<RegionScalarRelationFilter, RegionWhereInput>
    Comuna?: ComunaListRelationFilter
  }, "id_ciudad">

  export type CiudadOrderByWithAggregationInput = {
    id_ciudad?: SortOrder
    nombre?: SortOrder
    id_region?: SortOrder
    _count?: CiudadCountOrderByAggregateInput
    _avg?: CiudadAvgOrderByAggregateInput
    _max?: CiudadMaxOrderByAggregateInput
    _min?: CiudadMinOrderByAggregateInput
    _sum?: CiudadSumOrderByAggregateInput
  }

  export type CiudadScalarWhereWithAggregatesInput = {
    AND?: CiudadScalarWhereWithAggregatesInput | CiudadScalarWhereWithAggregatesInput[]
    OR?: CiudadScalarWhereWithAggregatesInput[]
    NOT?: CiudadScalarWhereWithAggregatesInput | CiudadScalarWhereWithAggregatesInput[]
    id_ciudad?: IntWithAggregatesFilter<"Ciudad"> | number
    nombre?: StringWithAggregatesFilter<"Ciudad"> | string
    id_region?: IntWithAggregatesFilter<"Ciudad"> | number
  }

  export type ComunaWhereInput = {
    AND?: ComunaWhereInput | ComunaWhereInput[]
    OR?: ComunaWhereInput[]
    NOT?: ComunaWhereInput | ComunaWhereInput[]
    id_comuna?: IntFilter<"Comuna"> | number
    nombre?: StringFilter<"Comuna"> | string
    id_ciudad?: IntFilter<"Comuna"> | number
    Ciudad?: XOR<CiudadScalarRelationFilter, CiudadWhereInput>
    Direccion?: DireccionListRelationFilter
  }

  export type ComunaOrderByWithRelationInput = {
    id_comuna?: SortOrder
    nombre?: SortOrder
    id_ciudad?: SortOrder
    Ciudad?: CiudadOrderByWithRelationInput
    Direccion?: DireccionOrderByRelationAggregateInput
  }

  export type ComunaWhereUniqueInput = Prisma.AtLeast<{
    id_comuna?: number
    AND?: ComunaWhereInput | ComunaWhereInput[]
    OR?: ComunaWhereInput[]
    NOT?: ComunaWhereInput | ComunaWhereInput[]
    nombre?: StringFilter<"Comuna"> | string
    id_ciudad?: IntFilter<"Comuna"> | number
    Ciudad?: XOR<CiudadScalarRelationFilter, CiudadWhereInput>
    Direccion?: DireccionListRelationFilter
  }, "id_comuna">

  export type ComunaOrderByWithAggregationInput = {
    id_comuna?: SortOrder
    nombre?: SortOrder
    id_ciudad?: SortOrder
    _count?: ComunaCountOrderByAggregateInput
    _avg?: ComunaAvgOrderByAggregateInput
    _max?: ComunaMaxOrderByAggregateInput
    _min?: ComunaMinOrderByAggregateInput
    _sum?: ComunaSumOrderByAggregateInput
  }

  export type ComunaScalarWhereWithAggregatesInput = {
    AND?: ComunaScalarWhereWithAggregatesInput | ComunaScalarWhereWithAggregatesInput[]
    OR?: ComunaScalarWhereWithAggregatesInput[]
    NOT?: ComunaScalarWhereWithAggregatesInput | ComunaScalarWhereWithAggregatesInput[]
    id_comuna?: IntWithAggregatesFilter<"Comuna"> | number
    nombre?: StringWithAggregatesFilter<"Comuna"> | string
    id_ciudad?: IntWithAggregatesFilter<"Comuna"> | number
  }

  export type DireccionWhereInput = {
    AND?: DireccionWhereInput | DireccionWhereInput[]
    OR?: DireccionWhereInput[]
    NOT?: DireccionWhereInput | DireccionWhereInput[]
    id_direccion?: IntFilter<"Direccion"> | number
    calle?: StringFilter<"Direccion"> | string
    numero?: StringFilter<"Direccion"> | string
    id_comuna?: IntFilter<"Direccion"> | number
    Comuna?: XOR<ComunaScalarRelationFilter, ComunaWhereInput>
    Usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    Pyme?: XOR<PymeNullableScalarRelationFilter, PymeWhereInput> | null
  }

  export type DireccionOrderByWithRelationInput = {
    id_direccion?: SortOrder
    calle?: SortOrder
    numero?: SortOrder
    id_comuna?: SortOrder
    Comuna?: ComunaOrderByWithRelationInput
    Usuario?: UsuarioOrderByWithRelationInput
    Pyme?: PymeOrderByWithRelationInput
  }

  export type DireccionWhereUniqueInput = Prisma.AtLeast<{
    id_direccion?: number
    AND?: DireccionWhereInput | DireccionWhereInput[]
    OR?: DireccionWhereInput[]
    NOT?: DireccionWhereInput | DireccionWhereInput[]
    calle?: StringFilter<"Direccion"> | string
    numero?: StringFilter<"Direccion"> | string
    id_comuna?: IntFilter<"Direccion"> | number
    Comuna?: XOR<ComunaScalarRelationFilter, ComunaWhereInput>
    Usuario?: XOR<UsuarioNullableScalarRelationFilter, UsuarioWhereInput> | null
    Pyme?: XOR<PymeNullableScalarRelationFilter, PymeWhereInput> | null
  }, "id_direccion">

  export type DireccionOrderByWithAggregationInput = {
    id_direccion?: SortOrder
    calle?: SortOrder
    numero?: SortOrder
    id_comuna?: SortOrder
    _count?: DireccionCountOrderByAggregateInput
    _avg?: DireccionAvgOrderByAggregateInput
    _max?: DireccionMaxOrderByAggregateInput
    _min?: DireccionMinOrderByAggregateInput
    _sum?: DireccionSumOrderByAggregateInput
  }

  export type DireccionScalarWhereWithAggregatesInput = {
    AND?: DireccionScalarWhereWithAggregatesInput | DireccionScalarWhereWithAggregatesInput[]
    OR?: DireccionScalarWhereWithAggregatesInput[]
    NOT?: DireccionScalarWhereWithAggregatesInput | DireccionScalarWhereWithAggregatesInput[]
    id_direccion?: IntWithAggregatesFilter<"Direccion"> | number
    calle?: StringWithAggregatesFilter<"Direccion"> | string
    numero?: StringWithAggregatesFilter<"Direccion"> | string
    id_comuna?: IntWithAggregatesFilter<"Direccion"> | number
  }

  export type RolWhereInput = {
    AND?: RolWhereInput | RolWhereInput[]
    OR?: RolWhereInput[]
    NOT?: RolWhereInput | RolWhereInput[]
    id_rol?: IntFilter<"Rol"> | number
    nombre?: StringFilter<"Rol"> | string
    descripcion?: StringNullableFilter<"Rol"> | string | null
    Usuario?: UsuarioListRelationFilter
    Permiso?: PermisoListRelationFilter
  }

  export type RolOrderByWithRelationInput = {
    id_rol?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    Usuario?: UsuarioOrderByRelationAggregateInput
    Permiso?: PermisoOrderByRelationAggregateInput
  }

  export type RolWhereUniqueInput = Prisma.AtLeast<{
    id_rol?: number
    AND?: RolWhereInput | RolWhereInput[]
    OR?: RolWhereInput[]
    NOT?: RolWhereInput | RolWhereInput[]
    nombre?: StringFilter<"Rol"> | string
    descripcion?: StringNullableFilter<"Rol"> | string | null
    Usuario?: UsuarioListRelationFilter
    Permiso?: PermisoListRelationFilter
  }, "id_rol">

  export type RolOrderByWithAggregationInput = {
    id_rol?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: RolCountOrderByAggregateInput
    _avg?: RolAvgOrderByAggregateInput
    _max?: RolMaxOrderByAggregateInput
    _min?: RolMinOrderByAggregateInput
    _sum?: RolSumOrderByAggregateInput
  }

  export type RolScalarWhereWithAggregatesInput = {
    AND?: RolScalarWhereWithAggregatesInput | RolScalarWhereWithAggregatesInput[]
    OR?: RolScalarWhereWithAggregatesInput[]
    NOT?: RolScalarWhereWithAggregatesInput | RolScalarWhereWithAggregatesInput[]
    id_rol?: IntWithAggregatesFilter<"Rol"> | number
    nombre?: StringWithAggregatesFilter<"Rol"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Rol"> | string | null
  }

  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    password?: StringFilter<"Usuario"> | string
    fecha_registro?: DateTimeFilter<"Usuario"> | Date | string
    ultimo_login?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    esta_activo?: BoolFilter<"Usuario"> | boolean
    id_direccion?: IntNullableFilter<"Usuario"> | number | null
    id_rol?: IntFilter<"Usuario"> | number
    Direccion?: XOR<DireccionNullableScalarRelationFilter, DireccionWhereInput> | null
    Rol?: XOR<RolScalarRelationFilter, RolWhereInput>
    Pyme?: XOR<PymeNullableScalarRelationFilter, PymeWhereInput> | null
    CarroDeCompras?: CarroDeComprasListRelationFilter
    ListaDeDeseos?: XOR<ListaDeDeseosNullableScalarRelationFilter, ListaDeDeseosWhereInput> | null
    Valoracion?: ValoracionListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fecha_registro?: SortOrder
    ultimo_login?: SortOrderInput | SortOrder
    esta_activo?: SortOrder
    id_direccion?: SortOrderInput | SortOrder
    id_rol?: SortOrder
    Direccion?: DireccionOrderByWithRelationInput
    Rol?: RolOrderByWithRelationInput
    Pyme?: PymeOrderByWithRelationInput
    CarroDeCompras?: CarroDeComprasOrderByRelationAggregateInput
    ListaDeDeseos?: ListaDeDeseosOrderByWithRelationInput
    Valoracion?: ValoracionOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    email?: string
    id_direccion?: number
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre?: StringFilter<"Usuario"> | string
    password?: StringFilter<"Usuario"> | string
    fecha_registro?: DateTimeFilter<"Usuario"> | Date | string
    ultimo_login?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    esta_activo?: BoolFilter<"Usuario"> | boolean
    id_rol?: IntFilter<"Usuario"> | number
    Direccion?: XOR<DireccionNullableScalarRelationFilter, DireccionWhereInput> | null
    Rol?: XOR<RolScalarRelationFilter, RolWhereInput>
    Pyme?: XOR<PymeNullableScalarRelationFilter, PymeWhereInput> | null
    CarroDeCompras?: CarroDeComprasListRelationFilter
    ListaDeDeseos?: XOR<ListaDeDeseosNullableScalarRelationFilter, ListaDeDeseosWhereInput> | null
    Valoracion?: ValoracionListRelationFilter
  }, "id_usuario" | "email" | "id_direccion">

  export type UsuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fecha_registro?: SortOrder
    ultimo_login?: SortOrderInput | SortOrder
    esta_activo?: SortOrder
    id_direccion?: SortOrderInput | SortOrder
    id_rol?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"Usuario"> | number
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    password?: StringWithAggregatesFilter<"Usuario"> | string
    fecha_registro?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    ultimo_login?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
    esta_activo?: BoolWithAggregatesFilter<"Usuario"> | boolean
    id_direccion?: IntNullableWithAggregatesFilter<"Usuario"> | number | null
    id_rol?: IntWithAggregatesFilter<"Usuario"> | number
  }

  export type PermisoWhereInput = {
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    id_permiso?: IntFilter<"Permiso"> | number
    nombre?: StringFilter<"Permiso"> | string
    descripcion?: StringNullableFilter<"Permiso"> | string | null
    id_rol?: IntNullableFilter<"Permiso"> | number | null
    Rol?: XOR<RolNullableScalarRelationFilter, RolWhereInput> | null
  }

  export type PermisoOrderByWithRelationInput = {
    id_permiso?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    id_rol?: SortOrderInput | SortOrder
    Rol?: RolOrderByWithRelationInput
  }

  export type PermisoWhereUniqueInput = Prisma.AtLeast<{
    id_permiso?: number
    AND?: PermisoWhereInput | PermisoWhereInput[]
    OR?: PermisoWhereInput[]
    NOT?: PermisoWhereInput | PermisoWhereInput[]
    nombre?: StringFilter<"Permiso"> | string
    descripcion?: StringNullableFilter<"Permiso"> | string | null
    id_rol?: IntNullableFilter<"Permiso"> | number | null
    Rol?: XOR<RolNullableScalarRelationFilter, RolWhereInput> | null
  }, "id_permiso">

  export type PermisoOrderByWithAggregationInput = {
    id_permiso?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    id_rol?: SortOrderInput | SortOrder
    _count?: PermisoCountOrderByAggregateInput
    _avg?: PermisoAvgOrderByAggregateInput
    _max?: PermisoMaxOrderByAggregateInput
    _min?: PermisoMinOrderByAggregateInput
    _sum?: PermisoSumOrderByAggregateInput
  }

  export type PermisoScalarWhereWithAggregatesInput = {
    AND?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    OR?: PermisoScalarWhereWithAggregatesInput[]
    NOT?: PermisoScalarWhereWithAggregatesInput | PermisoScalarWhereWithAggregatesInput[]
    id_permiso?: IntWithAggregatesFilter<"Permiso"> | number
    nombre?: StringWithAggregatesFilter<"Permiso"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Permiso"> | string | null
    id_rol?: IntNullableWithAggregatesFilter<"Permiso"> | number | null
  }

  export type PymeWhereInput = {
    AND?: PymeWhereInput | PymeWhereInput[]
    OR?: PymeWhereInput[]
    NOT?: PymeWhereInput | PymeWhereInput[]
    id_pyme?: IntFilter<"Pyme"> | number
    nombre?: StringFilter<"Pyme"> | string
    rut?: StringFilter<"Pyme"> | string
    descripcion?: StringNullableFilter<"Pyme"> | string | null
    id_usuario?: IntFilter<"Pyme"> | number
    id_direccion?: IntFilter<"Pyme"> | number
    Usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    Direccion?: XOR<DireccionScalarRelationFilter, DireccionWhereInput>
    Producto?: ProductoListRelationFilter
  }

  export type PymeOrderByWithRelationInput = {
    id_pyme?: SortOrder
    nombre?: SortOrder
    rut?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    id_usuario?: SortOrder
    id_direccion?: SortOrder
    Usuario?: UsuarioOrderByWithRelationInput
    Direccion?: DireccionOrderByWithRelationInput
    Producto?: ProductoOrderByRelationAggregateInput
  }

  export type PymeWhereUniqueInput = Prisma.AtLeast<{
    id_pyme?: number
    id_usuario?: number
    id_direccion?: number
    AND?: PymeWhereInput | PymeWhereInput[]
    OR?: PymeWhereInput[]
    NOT?: PymeWhereInput | PymeWhereInput[]
    nombre?: StringFilter<"Pyme"> | string
    rut?: StringFilter<"Pyme"> | string
    descripcion?: StringNullableFilter<"Pyme"> | string | null
    Usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    Direccion?: XOR<DireccionScalarRelationFilter, DireccionWhereInput>
    Producto?: ProductoListRelationFilter
  }, "id_pyme" | "id_usuario" | "id_direccion">

  export type PymeOrderByWithAggregationInput = {
    id_pyme?: SortOrder
    nombre?: SortOrder
    rut?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    id_usuario?: SortOrder
    id_direccion?: SortOrder
    _count?: PymeCountOrderByAggregateInput
    _avg?: PymeAvgOrderByAggregateInput
    _max?: PymeMaxOrderByAggregateInput
    _min?: PymeMinOrderByAggregateInput
    _sum?: PymeSumOrderByAggregateInput
  }

  export type PymeScalarWhereWithAggregatesInput = {
    AND?: PymeScalarWhereWithAggregatesInput | PymeScalarWhereWithAggregatesInput[]
    OR?: PymeScalarWhereWithAggregatesInput[]
    NOT?: PymeScalarWhereWithAggregatesInput | PymeScalarWhereWithAggregatesInput[]
    id_pyme?: IntWithAggregatesFilter<"Pyme"> | number
    nombre?: StringWithAggregatesFilter<"Pyme"> | string
    rut?: StringWithAggregatesFilter<"Pyme"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Pyme"> | string | null
    id_usuario?: IntWithAggregatesFilter<"Pyme"> | number
    id_direccion?: IntWithAggregatesFilter<"Pyme"> | number
  }

  export type CategoriaDeProductoWhereInput = {
    AND?: CategoriaDeProductoWhereInput | CategoriaDeProductoWhereInput[]
    OR?: CategoriaDeProductoWhereInput[]
    NOT?: CategoriaDeProductoWhereInput | CategoriaDeProductoWhereInput[]
    id_categoria_producto?: IntFilter<"CategoriaDeProducto"> | number
    nombre?: StringFilter<"CategoriaDeProducto"> | string
    descripcion?: StringNullableFilter<"CategoriaDeProducto"> | string | null
    Producto?: ProductoListRelationFilter
  }

  export type CategoriaDeProductoOrderByWithRelationInput = {
    id_categoria_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    Producto?: ProductoOrderByRelationAggregateInput
  }

  export type CategoriaDeProductoWhereUniqueInput = Prisma.AtLeast<{
    id_categoria_producto?: number
    AND?: CategoriaDeProductoWhereInput | CategoriaDeProductoWhereInput[]
    OR?: CategoriaDeProductoWhereInput[]
    NOT?: CategoriaDeProductoWhereInput | CategoriaDeProductoWhereInput[]
    nombre?: StringFilter<"CategoriaDeProducto"> | string
    descripcion?: StringNullableFilter<"CategoriaDeProducto"> | string | null
    Producto?: ProductoListRelationFilter
  }, "id_categoria_producto">

  export type CategoriaDeProductoOrderByWithAggregationInput = {
    id_categoria_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: CategoriaDeProductoCountOrderByAggregateInput
    _avg?: CategoriaDeProductoAvgOrderByAggregateInput
    _max?: CategoriaDeProductoMaxOrderByAggregateInput
    _min?: CategoriaDeProductoMinOrderByAggregateInput
    _sum?: CategoriaDeProductoSumOrderByAggregateInput
  }

  export type CategoriaDeProductoScalarWhereWithAggregatesInput = {
    AND?: CategoriaDeProductoScalarWhereWithAggregatesInput | CategoriaDeProductoScalarWhereWithAggregatesInput[]
    OR?: CategoriaDeProductoScalarWhereWithAggregatesInput[]
    NOT?: CategoriaDeProductoScalarWhereWithAggregatesInput | CategoriaDeProductoScalarWhereWithAggregatesInput[]
    id_categoria_producto?: IntWithAggregatesFilter<"CategoriaDeProducto"> | number
    nombre?: StringWithAggregatesFilter<"CategoriaDeProducto"> | string
    descripcion?: StringNullableWithAggregatesFilter<"CategoriaDeProducto"> | string | null
  }

  export type ProductoWhereInput = {
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    id_producto?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"Producto"> | number
    estado?: StringFilter<"Producto"> | string
    fecha_publicacion?: DateTimeFilter<"Producto"> | Date | string
    fecha_actualizacion?: DateTimeFilter<"Producto"> | Date | string
    img_url?: StringNullableFilter<"Producto"> | string | null
    id_pyme?: IntFilter<"Producto"> | number
    id_categoria_producto?: IntFilter<"Producto"> | number
    Pyme?: XOR<PymeScalarRelationFilter, PymeWhereInput>
    CategoriaDeProducto?: XOR<CategoriaDeProductoScalarRelationFilter, CategoriaDeProductoWhereInput>
    DetalleCarroCompras?: DetalleCarroComprasListRelationFilter
    DetalleListaDeseos?: DetalleListaDeseosListRelationFilter
    Valoracion?: ValoracionListRelationFilter
  }

  export type ProductoOrderByWithRelationInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    stock?: SortOrder
    estado?: SortOrder
    fecha_publicacion?: SortOrder
    fecha_actualizacion?: SortOrder
    img_url?: SortOrderInput | SortOrder
    id_pyme?: SortOrder
    id_categoria_producto?: SortOrder
    Pyme?: PymeOrderByWithRelationInput
    CategoriaDeProducto?: CategoriaDeProductoOrderByWithRelationInput
    DetalleCarroCompras?: DetalleCarroComprasOrderByRelationAggregateInput
    DetalleListaDeseos?: DetalleListaDeseosOrderByRelationAggregateInput
    Valoracion?: ValoracionOrderByRelationAggregateInput
  }

  export type ProductoWhereUniqueInput = Prisma.AtLeast<{
    id_producto?: number
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"Producto"> | number
    estado?: StringFilter<"Producto"> | string
    fecha_publicacion?: DateTimeFilter<"Producto"> | Date | string
    fecha_actualizacion?: DateTimeFilter<"Producto"> | Date | string
    img_url?: StringNullableFilter<"Producto"> | string | null
    id_pyme?: IntFilter<"Producto"> | number
    id_categoria_producto?: IntFilter<"Producto"> | number
    Pyme?: XOR<PymeScalarRelationFilter, PymeWhereInput>
    CategoriaDeProducto?: XOR<CategoriaDeProductoScalarRelationFilter, CategoriaDeProductoWhereInput>
    DetalleCarroCompras?: DetalleCarroComprasListRelationFilter
    DetalleListaDeseos?: DetalleListaDeseosListRelationFilter
    Valoracion?: ValoracionListRelationFilter
  }, "id_producto">

  export type ProductoOrderByWithAggregationInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    stock?: SortOrder
    estado?: SortOrder
    fecha_publicacion?: SortOrder
    fecha_actualizacion?: SortOrder
    img_url?: SortOrderInput | SortOrder
    id_pyme?: SortOrder
    id_categoria_producto?: SortOrder
    _count?: ProductoCountOrderByAggregateInput
    _avg?: ProductoAvgOrderByAggregateInput
    _max?: ProductoMaxOrderByAggregateInput
    _min?: ProductoMinOrderByAggregateInput
    _sum?: ProductoSumOrderByAggregateInput
  }

  export type ProductoScalarWhereWithAggregatesInput = {
    AND?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    OR?: ProductoScalarWhereWithAggregatesInput[]
    NOT?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    id_producto?: IntWithAggregatesFilter<"Producto"> | number
    nombre?: StringWithAggregatesFilter<"Producto"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    precio?: DecimalWithAggregatesFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    stock?: IntWithAggregatesFilter<"Producto"> | number
    estado?: StringWithAggregatesFilter<"Producto"> | string
    fecha_publicacion?: DateTimeWithAggregatesFilter<"Producto"> | Date | string
    fecha_actualizacion?: DateTimeWithAggregatesFilter<"Producto"> | Date | string
    img_url?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    id_pyme?: IntWithAggregatesFilter<"Producto"> | number
    id_categoria_producto?: IntWithAggregatesFilter<"Producto"> | number
  }

  export type CarroDeComprasWhereInput = {
    AND?: CarroDeComprasWhereInput | CarroDeComprasWhereInput[]
    OR?: CarroDeComprasWhereInput[]
    NOT?: CarroDeComprasWhereInput | CarroDeComprasWhereInput[]
    id_carro_compras?: IntFilter<"CarroDeCompras"> | number
    fecha?: DateTimeFilter<"CarroDeCompras"> | Date | string
    total?: DecimalFilter<"CarroDeCompras"> | Decimal | DecimalJsLike | number | string
    estado?: StringFilter<"CarroDeCompras"> | string
    id_usuario?: IntFilter<"CarroDeCompras"> | number
    Usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    Venta?: XOR<VentaNullableScalarRelationFilter, VentaWhereInput> | null
    DetalleCarroCompras?: DetalleCarroComprasListRelationFilter
  }

  export type CarroDeComprasOrderByWithRelationInput = {
    id_carro_compras?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    id_usuario?: SortOrder
    Usuario?: UsuarioOrderByWithRelationInput
    Venta?: VentaOrderByWithRelationInput
    DetalleCarroCompras?: DetalleCarroComprasOrderByRelationAggregateInput
  }

  export type CarroDeComprasWhereUniqueInput = Prisma.AtLeast<{
    id_carro_compras?: number
    AND?: CarroDeComprasWhereInput | CarroDeComprasWhereInput[]
    OR?: CarroDeComprasWhereInput[]
    NOT?: CarroDeComprasWhereInput | CarroDeComprasWhereInput[]
    fecha?: DateTimeFilter<"CarroDeCompras"> | Date | string
    total?: DecimalFilter<"CarroDeCompras"> | Decimal | DecimalJsLike | number | string
    estado?: StringFilter<"CarroDeCompras"> | string
    id_usuario?: IntFilter<"CarroDeCompras"> | number
    Usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    Venta?: XOR<VentaNullableScalarRelationFilter, VentaWhereInput> | null
    DetalleCarroCompras?: DetalleCarroComprasListRelationFilter
  }, "id_carro_compras">

  export type CarroDeComprasOrderByWithAggregationInput = {
    id_carro_compras?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    id_usuario?: SortOrder
    _count?: CarroDeComprasCountOrderByAggregateInput
    _avg?: CarroDeComprasAvgOrderByAggregateInput
    _max?: CarroDeComprasMaxOrderByAggregateInput
    _min?: CarroDeComprasMinOrderByAggregateInput
    _sum?: CarroDeComprasSumOrderByAggregateInput
  }

  export type CarroDeComprasScalarWhereWithAggregatesInput = {
    AND?: CarroDeComprasScalarWhereWithAggregatesInput | CarroDeComprasScalarWhereWithAggregatesInput[]
    OR?: CarroDeComprasScalarWhereWithAggregatesInput[]
    NOT?: CarroDeComprasScalarWhereWithAggregatesInput | CarroDeComprasScalarWhereWithAggregatesInput[]
    id_carro_compras?: IntWithAggregatesFilter<"CarroDeCompras"> | number
    fecha?: DateTimeWithAggregatesFilter<"CarroDeCompras"> | Date | string
    total?: DecimalWithAggregatesFilter<"CarroDeCompras"> | Decimal | DecimalJsLike | number | string
    estado?: StringWithAggregatesFilter<"CarroDeCompras"> | string
    id_usuario?: IntWithAggregatesFilter<"CarroDeCompras"> | number
  }

  export type DetalleCarroComprasWhereInput = {
    AND?: DetalleCarroComprasWhereInput | DetalleCarroComprasWhereInput[]
    OR?: DetalleCarroComprasWhereInput[]
    NOT?: DetalleCarroComprasWhereInput | DetalleCarroComprasWhereInput[]
    id_detalle_carro_compras?: IntFilter<"DetalleCarroCompras"> | number
    cantidad?: IntFilter<"DetalleCarroCompras"> | number
    id_producto?: IntFilter<"DetalleCarroCompras"> | number
    id_carro_compras?: IntFilter<"DetalleCarroCompras"> | number
    Producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
    CarroDeCompras?: XOR<CarroDeComprasScalarRelationFilter, CarroDeComprasWhereInput>
  }

  export type DetalleCarroComprasOrderByWithRelationInput = {
    id_detalle_carro_compras?: SortOrder
    cantidad?: SortOrder
    id_producto?: SortOrder
    id_carro_compras?: SortOrder
    Producto?: ProductoOrderByWithRelationInput
    CarroDeCompras?: CarroDeComprasOrderByWithRelationInput
  }

  export type DetalleCarroComprasWhereUniqueInput = Prisma.AtLeast<{
    id_detalle_carro_compras?: number
    AND?: DetalleCarroComprasWhereInput | DetalleCarroComprasWhereInput[]
    OR?: DetalleCarroComprasWhereInput[]
    NOT?: DetalleCarroComprasWhereInput | DetalleCarroComprasWhereInput[]
    cantidad?: IntFilter<"DetalleCarroCompras"> | number
    id_producto?: IntFilter<"DetalleCarroCompras"> | number
    id_carro_compras?: IntFilter<"DetalleCarroCompras"> | number
    Producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
    CarroDeCompras?: XOR<CarroDeComprasScalarRelationFilter, CarroDeComprasWhereInput>
  }, "id_detalle_carro_compras">

  export type DetalleCarroComprasOrderByWithAggregationInput = {
    id_detalle_carro_compras?: SortOrder
    cantidad?: SortOrder
    id_producto?: SortOrder
    id_carro_compras?: SortOrder
    _count?: DetalleCarroComprasCountOrderByAggregateInput
    _avg?: DetalleCarroComprasAvgOrderByAggregateInput
    _max?: DetalleCarroComprasMaxOrderByAggregateInput
    _min?: DetalleCarroComprasMinOrderByAggregateInput
    _sum?: DetalleCarroComprasSumOrderByAggregateInput
  }

  export type DetalleCarroComprasScalarWhereWithAggregatesInput = {
    AND?: DetalleCarroComprasScalarWhereWithAggregatesInput | DetalleCarroComprasScalarWhereWithAggregatesInput[]
    OR?: DetalleCarroComprasScalarWhereWithAggregatesInput[]
    NOT?: DetalleCarroComprasScalarWhereWithAggregatesInput | DetalleCarroComprasScalarWhereWithAggregatesInput[]
    id_detalle_carro_compras?: IntWithAggregatesFilter<"DetalleCarroCompras"> | number
    cantidad?: IntWithAggregatesFilter<"DetalleCarroCompras"> | number
    id_producto?: IntWithAggregatesFilter<"DetalleCarroCompras"> | number
    id_carro_compras?: IntWithAggregatesFilter<"DetalleCarroCompras"> | number
  }

  export type ListaDeDeseosWhereInput = {
    AND?: ListaDeDeseosWhereInput | ListaDeDeseosWhereInput[]
    OR?: ListaDeDeseosWhereInput[]
    NOT?: ListaDeDeseosWhereInput | ListaDeDeseosWhereInput[]
    id_lista_deseo?: IntFilter<"ListaDeDeseos"> | number
    fecha_creacion?: DateTimeFilter<"ListaDeDeseos"> | Date | string
    id_usuario?: IntFilter<"ListaDeDeseos"> | number
    Usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    DetalleListaDeseos?: DetalleListaDeseosListRelationFilter
  }

  export type ListaDeDeseosOrderByWithRelationInput = {
    id_lista_deseo?: SortOrder
    fecha_creacion?: SortOrder
    id_usuario?: SortOrder
    Usuario?: UsuarioOrderByWithRelationInput
    DetalleListaDeseos?: DetalleListaDeseosOrderByRelationAggregateInput
  }

  export type ListaDeDeseosWhereUniqueInput = Prisma.AtLeast<{
    id_lista_deseo?: number
    id_usuario?: number
    AND?: ListaDeDeseosWhereInput | ListaDeDeseosWhereInput[]
    OR?: ListaDeDeseosWhereInput[]
    NOT?: ListaDeDeseosWhereInput | ListaDeDeseosWhereInput[]
    fecha_creacion?: DateTimeFilter<"ListaDeDeseos"> | Date | string
    Usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    DetalleListaDeseos?: DetalleListaDeseosListRelationFilter
  }, "id_lista_deseo" | "id_usuario">

  export type ListaDeDeseosOrderByWithAggregationInput = {
    id_lista_deseo?: SortOrder
    fecha_creacion?: SortOrder
    id_usuario?: SortOrder
    _count?: ListaDeDeseosCountOrderByAggregateInput
    _avg?: ListaDeDeseosAvgOrderByAggregateInput
    _max?: ListaDeDeseosMaxOrderByAggregateInput
    _min?: ListaDeDeseosMinOrderByAggregateInput
    _sum?: ListaDeDeseosSumOrderByAggregateInput
  }

  export type ListaDeDeseosScalarWhereWithAggregatesInput = {
    AND?: ListaDeDeseosScalarWhereWithAggregatesInput | ListaDeDeseosScalarWhereWithAggregatesInput[]
    OR?: ListaDeDeseosScalarWhereWithAggregatesInput[]
    NOT?: ListaDeDeseosScalarWhereWithAggregatesInput | ListaDeDeseosScalarWhereWithAggregatesInput[]
    id_lista_deseo?: IntWithAggregatesFilter<"ListaDeDeseos"> | number
    fecha_creacion?: DateTimeWithAggregatesFilter<"ListaDeDeseos"> | Date | string
    id_usuario?: IntWithAggregatesFilter<"ListaDeDeseos"> | number
  }

  export type DetalleListaDeseosWhereInput = {
    AND?: DetalleListaDeseosWhereInput | DetalleListaDeseosWhereInput[]
    OR?: DetalleListaDeseosWhereInput[]
    NOT?: DetalleListaDeseosWhereInput | DetalleListaDeseosWhereInput[]
    id_detalle_lista_deseos?: IntFilter<"DetalleListaDeseos"> | number
    fecha_agregado?: DateTimeFilter<"DetalleListaDeseos"> | Date | string
    id_lista_deseo?: IntFilter<"DetalleListaDeseos"> | number
    id_producto?: IntFilter<"DetalleListaDeseos"> | number
    ListaDeDeseos?: XOR<ListaDeDeseosScalarRelationFilter, ListaDeDeseosWhereInput>
    Producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }

  export type DetalleListaDeseosOrderByWithRelationInput = {
    id_detalle_lista_deseos?: SortOrder
    fecha_agregado?: SortOrder
    id_lista_deseo?: SortOrder
    id_producto?: SortOrder
    ListaDeDeseos?: ListaDeDeseosOrderByWithRelationInput
    Producto?: ProductoOrderByWithRelationInput
  }

  export type DetalleListaDeseosWhereUniqueInput = Prisma.AtLeast<{
    id_detalle_lista_deseos?: number
    AND?: DetalleListaDeseosWhereInput | DetalleListaDeseosWhereInput[]
    OR?: DetalleListaDeseosWhereInput[]
    NOT?: DetalleListaDeseosWhereInput | DetalleListaDeseosWhereInput[]
    fecha_agregado?: DateTimeFilter<"DetalleListaDeseos"> | Date | string
    id_lista_deseo?: IntFilter<"DetalleListaDeseos"> | number
    id_producto?: IntFilter<"DetalleListaDeseos"> | number
    ListaDeDeseos?: XOR<ListaDeDeseosScalarRelationFilter, ListaDeDeseosWhereInput>
    Producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }, "id_detalle_lista_deseos">

  export type DetalleListaDeseosOrderByWithAggregationInput = {
    id_detalle_lista_deseos?: SortOrder
    fecha_agregado?: SortOrder
    id_lista_deseo?: SortOrder
    id_producto?: SortOrder
    _count?: DetalleListaDeseosCountOrderByAggregateInput
    _avg?: DetalleListaDeseosAvgOrderByAggregateInput
    _max?: DetalleListaDeseosMaxOrderByAggregateInput
    _min?: DetalleListaDeseosMinOrderByAggregateInput
    _sum?: DetalleListaDeseosSumOrderByAggregateInput
  }

  export type DetalleListaDeseosScalarWhereWithAggregatesInput = {
    AND?: DetalleListaDeseosScalarWhereWithAggregatesInput | DetalleListaDeseosScalarWhereWithAggregatesInput[]
    OR?: DetalleListaDeseosScalarWhereWithAggregatesInput[]
    NOT?: DetalleListaDeseosScalarWhereWithAggregatesInput | DetalleListaDeseosScalarWhereWithAggregatesInput[]
    id_detalle_lista_deseos?: IntWithAggregatesFilter<"DetalleListaDeseos"> | number
    fecha_agregado?: DateTimeWithAggregatesFilter<"DetalleListaDeseos"> | Date | string
    id_lista_deseo?: IntWithAggregatesFilter<"DetalleListaDeseos"> | number
    id_producto?: IntWithAggregatesFilter<"DetalleListaDeseos"> | number
  }

  export type ValoracionWhereInput = {
    AND?: ValoracionWhereInput | ValoracionWhereInput[]
    OR?: ValoracionWhereInput[]
    NOT?: ValoracionWhereInput | ValoracionWhereInput[]
    id_valoracion?: IntFilter<"Valoracion"> | number
    puntaje?: IntFilter<"Valoracion"> | number
    comentario?: StringNullableFilter<"Valoracion"> | string | null
    fecha?: DateTimeFilter<"Valoracion"> | Date | string
    id_usuario?: IntFilter<"Valoracion"> | number
    id_producto?: IntFilter<"Valoracion"> | number
    Usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    Producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }

  export type ValoracionOrderByWithRelationInput = {
    id_valoracion?: SortOrder
    puntaje?: SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha?: SortOrder
    id_usuario?: SortOrder
    id_producto?: SortOrder
    Usuario?: UsuarioOrderByWithRelationInput
    Producto?: ProductoOrderByWithRelationInput
  }

  export type ValoracionWhereUniqueInput = Prisma.AtLeast<{
    id_valoracion?: number
    id_usuario_id_producto?: ValoracionId_usuarioId_productoCompoundUniqueInput
    AND?: ValoracionWhereInput | ValoracionWhereInput[]
    OR?: ValoracionWhereInput[]
    NOT?: ValoracionWhereInput | ValoracionWhereInput[]
    puntaje?: IntFilter<"Valoracion"> | number
    comentario?: StringNullableFilter<"Valoracion"> | string | null
    fecha?: DateTimeFilter<"Valoracion"> | Date | string
    id_usuario?: IntFilter<"Valoracion"> | number
    id_producto?: IntFilter<"Valoracion"> | number
    Usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    Producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }, "id_valoracion" | "id_usuario_id_producto">

  export type ValoracionOrderByWithAggregationInput = {
    id_valoracion?: SortOrder
    puntaje?: SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha?: SortOrder
    id_usuario?: SortOrder
    id_producto?: SortOrder
    _count?: ValoracionCountOrderByAggregateInput
    _avg?: ValoracionAvgOrderByAggregateInput
    _max?: ValoracionMaxOrderByAggregateInput
    _min?: ValoracionMinOrderByAggregateInput
    _sum?: ValoracionSumOrderByAggregateInput
  }

  export type ValoracionScalarWhereWithAggregatesInput = {
    AND?: ValoracionScalarWhereWithAggregatesInput | ValoracionScalarWhereWithAggregatesInput[]
    OR?: ValoracionScalarWhereWithAggregatesInput[]
    NOT?: ValoracionScalarWhereWithAggregatesInput | ValoracionScalarWhereWithAggregatesInput[]
    id_valoracion?: IntWithAggregatesFilter<"Valoracion"> | number
    puntaje?: IntWithAggregatesFilter<"Valoracion"> | number
    comentario?: StringNullableWithAggregatesFilter<"Valoracion"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"Valoracion"> | Date | string
    id_usuario?: IntWithAggregatesFilter<"Valoracion"> | number
    id_producto?: IntWithAggregatesFilter<"Valoracion"> | number
  }

  export type MetodoPagoWhereInput = {
    AND?: MetodoPagoWhereInput | MetodoPagoWhereInput[]
    OR?: MetodoPagoWhereInput[]
    NOT?: MetodoPagoWhereInput | MetodoPagoWhereInput[]
    id_metodo_pago?: IntFilter<"MetodoPago"> | number
    tipo?: StringFilter<"MetodoPago"> | string
    descripcion?: StringNullableFilter<"MetodoPago"> | string | null
    Venta?: VentaListRelationFilter
  }

  export type MetodoPagoOrderByWithRelationInput = {
    id_metodo_pago?: SortOrder
    tipo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    Venta?: VentaOrderByRelationAggregateInput
  }

  export type MetodoPagoWhereUniqueInput = Prisma.AtLeast<{
    id_metodo_pago?: number
    AND?: MetodoPagoWhereInput | MetodoPagoWhereInput[]
    OR?: MetodoPagoWhereInput[]
    NOT?: MetodoPagoWhereInput | MetodoPagoWhereInput[]
    tipo?: StringFilter<"MetodoPago"> | string
    descripcion?: StringNullableFilter<"MetodoPago"> | string | null
    Venta?: VentaListRelationFilter
  }, "id_metodo_pago">

  export type MetodoPagoOrderByWithAggregationInput = {
    id_metodo_pago?: SortOrder
    tipo?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: MetodoPagoCountOrderByAggregateInput
    _avg?: MetodoPagoAvgOrderByAggregateInput
    _max?: MetodoPagoMaxOrderByAggregateInput
    _min?: MetodoPagoMinOrderByAggregateInput
    _sum?: MetodoPagoSumOrderByAggregateInput
  }

  export type MetodoPagoScalarWhereWithAggregatesInput = {
    AND?: MetodoPagoScalarWhereWithAggregatesInput | MetodoPagoScalarWhereWithAggregatesInput[]
    OR?: MetodoPagoScalarWhereWithAggregatesInput[]
    NOT?: MetodoPagoScalarWhereWithAggregatesInput | MetodoPagoScalarWhereWithAggregatesInput[]
    id_metodo_pago?: IntWithAggregatesFilter<"MetodoPago"> | number
    tipo?: StringWithAggregatesFilter<"MetodoPago"> | string
    descripcion?: StringNullableWithAggregatesFilter<"MetodoPago"> | string | null
  }

  export type VentaWhereInput = {
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    id_venta?: IntFilter<"Venta"> | number
    monto_total?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFilter<"Venta"> | Date | string
    id_carro_compras?: IntFilter<"Venta"> | number
    id_metodo_pago?: IntFilter<"Venta"> | number
    CarroDeCompras?: XOR<CarroDeComprasScalarRelationFilter, CarroDeComprasWhereInput>
    MetodoPago?: XOR<MetodoPagoScalarRelationFilter, MetodoPagoWhereInput>
  }

  export type VentaOrderByWithRelationInput = {
    id_venta?: SortOrder
    monto_total?: SortOrder
    fecha_venta?: SortOrder
    id_carro_compras?: SortOrder
    id_metodo_pago?: SortOrder
    CarroDeCompras?: CarroDeComprasOrderByWithRelationInput
    MetodoPago?: MetodoPagoOrderByWithRelationInput
  }

  export type VentaWhereUniqueInput = Prisma.AtLeast<{
    id_venta?: number
    id_carro_compras?: number
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    monto_total?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFilter<"Venta"> | Date | string
    id_metodo_pago?: IntFilter<"Venta"> | number
    CarroDeCompras?: XOR<CarroDeComprasScalarRelationFilter, CarroDeComprasWhereInput>
    MetodoPago?: XOR<MetodoPagoScalarRelationFilter, MetodoPagoWhereInput>
  }, "id_venta" | "id_carro_compras">

  export type VentaOrderByWithAggregationInput = {
    id_venta?: SortOrder
    monto_total?: SortOrder
    fecha_venta?: SortOrder
    id_carro_compras?: SortOrder
    id_metodo_pago?: SortOrder
    _count?: VentaCountOrderByAggregateInput
    _avg?: VentaAvgOrderByAggregateInput
    _max?: VentaMaxOrderByAggregateInput
    _min?: VentaMinOrderByAggregateInput
    _sum?: VentaSumOrderByAggregateInput
  }

  export type VentaScalarWhereWithAggregatesInput = {
    AND?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    OR?: VentaScalarWhereWithAggregatesInput[]
    NOT?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    id_venta?: IntWithAggregatesFilter<"Venta"> | number
    monto_total?: DecimalWithAggregatesFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeWithAggregatesFilter<"Venta"> | Date | string
    id_carro_compras?: IntWithAggregatesFilter<"Venta"> | number
    id_metodo_pago?: IntWithAggregatesFilter<"Venta"> | number
  }

  export type RegionCreateInput = {
    nombre: string
    Ciudad?: CiudadCreateNestedManyWithoutRegionInput
  }

  export type RegionUncheckedCreateInput = {
    id_region?: number
    nombre: string
    Ciudad?: CiudadUncheckedCreateNestedManyWithoutRegionInput
  }

  export type RegionUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    Ciudad?: CiudadUpdateManyWithoutRegionNestedInput
  }

  export type RegionUncheckedUpdateInput = {
    id_region?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    Ciudad?: CiudadUncheckedUpdateManyWithoutRegionNestedInput
  }

  export type RegionCreateManyInput = {
    id_region?: number
    nombre: string
  }

  export type RegionUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type RegionUncheckedUpdateManyInput = {
    id_region?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CiudadCreateInput = {
    nombre: string
    Region: RegionCreateNestedOneWithoutCiudadInput
    Comuna?: ComunaCreateNestedManyWithoutCiudadInput
  }

  export type CiudadUncheckedCreateInput = {
    id_ciudad?: number
    nombre: string
    id_region: number
    Comuna?: ComunaUncheckedCreateNestedManyWithoutCiudadInput
  }

  export type CiudadUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    Region?: RegionUpdateOneRequiredWithoutCiudadNestedInput
    Comuna?: ComunaUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadUncheckedUpdateInput = {
    id_ciudad?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_region?: IntFieldUpdateOperationsInput | number
    Comuna?: ComunaUncheckedUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadCreateManyInput = {
    id_ciudad?: number
    nombre: string
    id_region: number
  }

  export type CiudadUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CiudadUncheckedUpdateManyInput = {
    id_ciudad?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_region?: IntFieldUpdateOperationsInput | number
  }

  export type ComunaCreateInput = {
    nombre: string
    Ciudad: CiudadCreateNestedOneWithoutComunaInput
    Direccion?: DireccionCreateNestedManyWithoutComunaInput
  }

  export type ComunaUncheckedCreateInput = {
    id_comuna?: number
    nombre: string
    id_ciudad: number
    Direccion?: DireccionUncheckedCreateNestedManyWithoutComunaInput
  }

  export type ComunaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    Ciudad?: CiudadUpdateOneRequiredWithoutComunaNestedInput
    Direccion?: DireccionUpdateManyWithoutComunaNestedInput
  }

  export type ComunaUncheckedUpdateInput = {
    id_comuna?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_ciudad?: IntFieldUpdateOperationsInput | number
    Direccion?: DireccionUncheckedUpdateManyWithoutComunaNestedInput
  }

  export type ComunaCreateManyInput = {
    id_comuna?: number
    nombre: string
    id_ciudad: number
  }

  export type ComunaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ComunaUncheckedUpdateManyInput = {
    id_comuna?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_ciudad?: IntFieldUpdateOperationsInput | number
  }

  export type DireccionCreateInput = {
    calle: string
    numero: string
    Comuna: ComunaCreateNestedOneWithoutDireccionInput
    Usuario?: UsuarioCreateNestedOneWithoutDireccionInput
    Pyme?: PymeCreateNestedOneWithoutDireccionInput
  }

  export type DireccionUncheckedCreateInput = {
    id_direccion?: number
    calle: string
    numero: string
    id_comuna: number
    Usuario?: UsuarioUncheckedCreateNestedOneWithoutDireccionInput
    Pyme?: PymeUncheckedCreateNestedOneWithoutDireccionInput
  }

  export type DireccionUpdateInput = {
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    Comuna?: ComunaUpdateOneRequiredWithoutDireccionNestedInput
    Usuario?: UsuarioUpdateOneWithoutDireccionNestedInput
    Pyme?: PymeUpdateOneWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    id_comuna?: IntFieldUpdateOperationsInput | number
    Usuario?: UsuarioUncheckedUpdateOneWithoutDireccionNestedInput
    Pyme?: PymeUncheckedUpdateOneWithoutDireccionNestedInput
  }

  export type DireccionCreateManyInput = {
    id_direccion?: number
    calle: string
    numero: string
    id_comuna: number
  }

  export type DireccionUpdateManyMutationInput = {
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
  }

  export type DireccionUncheckedUpdateManyInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    id_comuna?: IntFieldUpdateOperationsInput | number
  }

  export type RolCreateInput = {
    nombre: string
    descripcion?: string | null
    Usuario?: UsuarioCreateNestedManyWithoutRolInput
    Permiso?: PermisoCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateInput = {
    id_rol?: number
    nombre: string
    descripcion?: string | null
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutRolInput
    Permiso?: PermisoUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuarioUpdateManyWithoutRolNestedInput
    Permiso?: PermisoUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateInput = {
    id_rol?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuarioUncheckedUpdateManyWithoutRolNestedInput
    Permiso?: PermisoUncheckedUpdateManyWithoutRolNestedInput
  }

  export type RolCreateManyInput = {
    id_rol?: number
    nombre: string
    descripcion?: string | null
  }

  export type RolUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RolUncheckedUpdateManyInput = {
    id_rol?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioCreateInput = {
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    Direccion?: DireccionCreateNestedOneWithoutUsuarioInput
    Rol: RolCreateNestedOneWithoutUsuarioInput
    Pyme?: PymeCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_direccion?: number | null
    id_rol: number
    Pyme?: PymeUncheckedCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasUncheckedCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosUncheckedCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    Direccion?: DireccionUpdateOneWithoutUsuarioNestedInput
    Rol?: RolUpdateOneRequiredWithoutUsuarioNestedInput
    Pyme?: PymeUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_direccion?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: IntFieldUpdateOperationsInput | number
    Pyme?: PymeUncheckedUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUncheckedUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUncheckedUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_direccion?: number | null
    id_rol: number
  }

  export type UsuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_direccion?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: IntFieldUpdateOperationsInput | number
  }

  export type PermisoCreateInput = {
    nombre: string
    descripcion?: string | null
    Rol?: RolCreateNestedOneWithoutPermisoInput
  }

  export type PermisoUncheckedCreateInput = {
    id_permiso?: number
    nombre: string
    descripcion?: string | null
    id_rol?: number | null
  }

  export type PermisoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Rol?: RolUpdateOneWithoutPermisoNestedInput
  }

  export type PermisoUncheckedUpdateInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PermisoCreateManyInput = {
    id_permiso?: number
    nombre: string
    descripcion?: string | null
    id_rol?: number | null
  }

  export type PermisoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermisoUncheckedUpdateManyInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PymeCreateInput = {
    nombre: string
    rut: string
    descripcion?: string | null
    Usuario: UsuarioCreateNestedOneWithoutPymeInput
    Direccion: DireccionCreateNestedOneWithoutPymeInput
    Producto?: ProductoCreateNestedManyWithoutPymeInput
  }

  export type PymeUncheckedCreateInput = {
    id_pyme?: number
    nombre: string
    rut: string
    descripcion?: string | null
    id_usuario: number
    id_direccion: number
    Producto?: ProductoUncheckedCreateNestedManyWithoutPymeInput
  }

  export type PymeUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuarioUpdateOneRequiredWithoutPymeNestedInput
    Direccion?: DireccionUpdateOneRequiredWithoutPymeNestedInput
    Producto?: ProductoUpdateManyWithoutPymeNestedInput
  }

  export type PymeUncheckedUpdateInput = {
    id_pyme?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_direccion?: IntFieldUpdateOperationsInput | number
    Producto?: ProductoUncheckedUpdateManyWithoutPymeNestedInput
  }

  export type PymeCreateManyInput = {
    id_pyme?: number
    nombre: string
    rut: string
    descripcion?: string | null
    id_usuario: number
    id_direccion: number
  }

  export type PymeUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PymeUncheckedUpdateManyInput = {
    id_pyme?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_direccion?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriaDeProductoCreateInput = {
    nombre: string
    descripcion?: string | null
    Producto?: ProductoCreateNestedManyWithoutCategoriaDeProductoInput
  }

  export type CategoriaDeProductoUncheckedCreateInput = {
    id_categoria_producto?: number
    nombre: string
    descripcion?: string | null
    Producto?: ProductoUncheckedCreateNestedManyWithoutCategoriaDeProductoInput
  }

  export type CategoriaDeProductoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Producto?: ProductoUpdateManyWithoutCategoriaDeProductoNestedInput
  }

  export type CategoriaDeProductoUncheckedUpdateInput = {
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Producto?: ProductoUncheckedUpdateManyWithoutCategoriaDeProductoNestedInput
  }

  export type CategoriaDeProductoCreateManyInput = {
    id_categoria_producto?: number
    nombre: string
    descripcion?: string | null
  }

  export type CategoriaDeProductoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoriaDeProductoUncheckedUpdateManyInput = {
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductoCreateInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    Pyme: PymeCreateNestedOneWithoutProductoInput
    CategoriaDeProducto: CategoriaDeProductoCreateNestedOneWithoutProductoInput
    DetalleCarroCompras?: DetalleCarroComprasCreateNestedManyWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_pyme: number
    id_categoria_producto: number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedCreateNestedManyWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosUncheckedCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    Pyme?: PymeUpdateOneRequiredWithoutProductoNestedInput
    CategoriaDeProducto?: CategoriaDeProductoUpdateOneRequiredWithoutProductoNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUpdateManyWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_pyme?: IntFieldUpdateOperationsInput | number
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedUpdateManyWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUncheckedUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoCreateManyInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_pyme: number
    id_categoria_producto: number
  }

  export type ProductoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductoUncheckedUpdateManyInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_pyme?: IntFieldUpdateOperationsInput | number
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
  }

  export type CarroDeComprasCreateInput = {
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    Usuario: UsuarioCreateNestedOneWithoutCarroDeComprasInput
    Venta?: VentaCreateNestedOneWithoutCarroDeComprasInput
    DetalleCarroCompras?: DetalleCarroComprasCreateNestedManyWithoutCarroDeComprasInput
  }

  export type CarroDeComprasUncheckedCreateInput = {
    id_carro_compras?: number
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    id_usuario: number
    Venta?: VentaUncheckedCreateNestedOneWithoutCarroDeComprasInput
    DetalleCarroCompras?: DetalleCarroComprasUncheckedCreateNestedManyWithoutCarroDeComprasInput
  }

  export type CarroDeComprasUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUpdateOneRequiredWithoutCarroDeComprasNestedInput
    Venta?: VentaUpdateOneWithoutCarroDeComprasNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUpdateManyWithoutCarroDeComprasNestedInput
  }

  export type CarroDeComprasUncheckedUpdateInput = {
    id_carro_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    id_usuario?: IntFieldUpdateOperationsInput | number
    Venta?: VentaUncheckedUpdateOneWithoutCarroDeComprasNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUncheckedUpdateManyWithoutCarroDeComprasNestedInput
  }

  export type CarroDeComprasCreateManyInput = {
    id_carro_compras?: number
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    id_usuario: number
  }

  export type CarroDeComprasUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type CarroDeComprasUncheckedUpdateManyInput = {
    id_carro_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleCarroComprasCreateInput = {
    cantidad: number
    Producto: ProductoCreateNestedOneWithoutDetalleCarroComprasInput
    CarroDeCompras: CarroDeComprasCreateNestedOneWithoutDetalleCarroComprasInput
  }

  export type DetalleCarroComprasUncheckedCreateInput = {
    id_detalle_carro_compras?: number
    cantidad: number
    id_producto: number
    id_carro_compras: number
  }

  export type DetalleCarroComprasUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    Producto?: ProductoUpdateOneRequiredWithoutDetalleCarroComprasNestedInput
    CarroDeCompras?: CarroDeComprasUpdateOneRequiredWithoutDetalleCarroComprasNestedInput
  }

  export type DetalleCarroComprasUncheckedUpdateInput = {
    id_detalle_carro_compras?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    id_carro_compras?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleCarroComprasCreateManyInput = {
    id_detalle_carro_compras?: number
    cantidad: number
    id_producto: number
    id_carro_compras: number
  }

  export type DetalleCarroComprasUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleCarroComprasUncheckedUpdateManyInput = {
    id_detalle_carro_compras?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
    id_carro_compras?: IntFieldUpdateOperationsInput | number
  }

  export type ListaDeDeseosCreateInput = {
    fecha_creacion?: Date | string
    Usuario: UsuarioCreateNestedOneWithoutListaDeDeseosInput
    DetalleListaDeseos?: DetalleListaDeseosCreateNestedManyWithoutListaDeDeseosInput
  }

  export type ListaDeDeseosUncheckedCreateInput = {
    id_lista_deseo?: number
    fecha_creacion?: Date | string
    id_usuario: number
    DetalleListaDeseos?: DetalleListaDeseosUncheckedCreateNestedManyWithoutListaDeDeseosInput
  }

  export type ListaDeDeseosUpdateInput = {
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateOneRequiredWithoutListaDeDeseosNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUpdateManyWithoutListaDeDeseosNestedInput
  }

  export type ListaDeDeseosUncheckedUpdateInput = {
    id_lista_deseo?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: IntFieldUpdateOperationsInput | number
    DetalleListaDeseos?: DetalleListaDeseosUncheckedUpdateManyWithoutListaDeDeseosNestedInput
  }

  export type ListaDeDeseosCreateManyInput = {
    id_lista_deseo?: number
    fecha_creacion?: Date | string
    id_usuario: number
  }

  export type ListaDeDeseosUpdateManyMutationInput = {
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListaDeDeseosUncheckedUpdateManyInput = {
    id_lista_deseo?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleListaDeseosCreateInput = {
    fecha_agregado?: Date | string
    ListaDeDeseos: ListaDeDeseosCreateNestedOneWithoutDetalleListaDeseosInput
    Producto: ProductoCreateNestedOneWithoutDetalleListaDeseosInput
  }

  export type DetalleListaDeseosUncheckedCreateInput = {
    id_detalle_lista_deseos?: number
    fecha_agregado?: Date | string
    id_lista_deseo: number
    id_producto: number
  }

  export type DetalleListaDeseosUpdateInput = {
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    ListaDeDeseos?: ListaDeDeseosUpdateOneRequiredWithoutDetalleListaDeseosNestedInput
    Producto?: ProductoUpdateOneRequiredWithoutDetalleListaDeseosNestedInput
  }

  export type DetalleListaDeseosUncheckedUpdateInput = {
    id_detalle_lista_deseos?: IntFieldUpdateOperationsInput | number
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    id_lista_deseo?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleListaDeseosCreateManyInput = {
    id_detalle_lista_deseos?: number
    fecha_agregado?: Date | string
    id_lista_deseo: number
    id_producto: number
  }

  export type DetalleListaDeseosUpdateManyMutationInput = {
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetalleListaDeseosUncheckedUpdateManyInput = {
    id_detalle_lista_deseos?: IntFieldUpdateOperationsInput | number
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    id_lista_deseo?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type ValoracionCreateInput = {
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    Usuario: UsuarioCreateNestedOneWithoutValoracionInput
    Producto: ProductoCreateNestedOneWithoutValoracionInput
  }

  export type ValoracionUncheckedCreateInput = {
    id_valoracion?: number
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    id_usuario: number
    id_producto: number
  }

  export type ValoracionUpdateInput = {
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateOneRequiredWithoutValoracionNestedInput
    Producto?: ProductoUpdateOneRequiredWithoutValoracionNestedInput
  }

  export type ValoracionUncheckedUpdateInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type ValoracionCreateManyInput = {
    id_valoracion?: number
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    id_usuario: number
    id_producto: number
  }

  export type ValoracionUpdateManyMutationInput = {
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ValoracionUncheckedUpdateManyInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type MetodoPagoCreateInput = {
    tipo: string
    descripcion?: string | null
    Venta?: VentaCreateNestedManyWithoutMetodoPagoInput
  }

  export type MetodoPagoUncheckedCreateInput = {
    id_metodo_pago?: number
    tipo: string
    descripcion?: string | null
    Venta?: VentaUncheckedCreateNestedManyWithoutMetodoPagoInput
  }

  export type MetodoPagoUpdateInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Venta?: VentaUpdateManyWithoutMetodoPagoNestedInput
  }

  export type MetodoPagoUncheckedUpdateInput = {
    id_metodo_pago?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Venta?: VentaUncheckedUpdateManyWithoutMetodoPagoNestedInput
  }

  export type MetodoPagoCreateManyInput = {
    id_metodo_pago?: number
    tipo: string
    descripcion?: string | null
  }

  export type MetodoPagoUpdateManyMutationInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MetodoPagoUncheckedUpdateManyInput = {
    id_metodo_pago?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VentaCreateInput = {
    monto_total: Decimal | DecimalJsLike | number | string
    fecha_venta?: Date | string
    CarroDeCompras: CarroDeComprasCreateNestedOneWithoutVentaInput
    MetodoPago: MetodoPagoCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateInput = {
    id_venta?: number
    monto_total: Decimal | DecimalJsLike | number | string
    fecha_venta?: Date | string
    id_carro_compras: number
    id_metodo_pago: number
  }

  export type VentaUpdateInput = {
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    CarroDeCompras?: CarroDeComprasUpdateOneRequiredWithoutVentaNestedInput
    MetodoPago?: MetodoPagoUpdateOneRequiredWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    id_carro_compras?: IntFieldUpdateOperationsInput | number
    id_metodo_pago?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCreateManyInput = {
    id_venta?: number
    monto_total: Decimal | DecimalJsLike | number | string
    fecha_venta?: Date | string
    id_carro_compras: number
    id_metodo_pago: number
  }

  export type VentaUpdateManyMutationInput = {
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VentaUncheckedUpdateManyInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    id_carro_compras?: IntFieldUpdateOperationsInput | number
    id_metodo_pago?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type CiudadListRelationFilter = {
    every?: CiudadWhereInput
    some?: CiudadWhereInput
    none?: CiudadWhereInput
  }

  export type CiudadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RegionCountOrderByAggregateInput = {
    id_region?: SortOrder
    nombre?: SortOrder
  }

  export type RegionAvgOrderByAggregateInput = {
    id_region?: SortOrder
  }

  export type RegionMaxOrderByAggregateInput = {
    id_region?: SortOrder
    nombre?: SortOrder
  }

  export type RegionMinOrderByAggregateInput = {
    id_region?: SortOrder
    nombre?: SortOrder
  }

  export type RegionSumOrderByAggregateInput = {
    id_region?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type RegionScalarRelationFilter = {
    is?: RegionWhereInput
    isNot?: RegionWhereInput
  }

  export type ComunaListRelationFilter = {
    every?: ComunaWhereInput
    some?: ComunaWhereInput
    none?: ComunaWhereInput
  }

  export type ComunaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CiudadCountOrderByAggregateInput = {
    id_ciudad?: SortOrder
    nombre?: SortOrder
    id_region?: SortOrder
  }

  export type CiudadAvgOrderByAggregateInput = {
    id_ciudad?: SortOrder
    id_region?: SortOrder
  }

  export type CiudadMaxOrderByAggregateInput = {
    id_ciudad?: SortOrder
    nombre?: SortOrder
    id_region?: SortOrder
  }

  export type CiudadMinOrderByAggregateInput = {
    id_ciudad?: SortOrder
    nombre?: SortOrder
    id_region?: SortOrder
  }

  export type CiudadSumOrderByAggregateInput = {
    id_ciudad?: SortOrder
    id_region?: SortOrder
  }

  export type CiudadScalarRelationFilter = {
    is?: CiudadWhereInput
    isNot?: CiudadWhereInput
  }

  export type DireccionListRelationFilter = {
    every?: DireccionWhereInput
    some?: DireccionWhereInput
    none?: DireccionWhereInput
  }

  export type DireccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ComunaCountOrderByAggregateInput = {
    id_comuna?: SortOrder
    nombre?: SortOrder
    id_ciudad?: SortOrder
  }

  export type ComunaAvgOrderByAggregateInput = {
    id_comuna?: SortOrder
    id_ciudad?: SortOrder
  }

  export type ComunaMaxOrderByAggregateInput = {
    id_comuna?: SortOrder
    nombre?: SortOrder
    id_ciudad?: SortOrder
  }

  export type ComunaMinOrderByAggregateInput = {
    id_comuna?: SortOrder
    nombre?: SortOrder
    id_ciudad?: SortOrder
  }

  export type ComunaSumOrderByAggregateInput = {
    id_comuna?: SortOrder
    id_ciudad?: SortOrder
  }

  export type ComunaScalarRelationFilter = {
    is?: ComunaWhereInput
    isNot?: ComunaWhereInput
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: UsuarioWhereInput | null
    isNot?: UsuarioWhereInput | null
  }

  export type PymeNullableScalarRelationFilter = {
    is?: PymeWhereInput | null
    isNot?: PymeWhereInput | null
  }

  export type DireccionCountOrderByAggregateInput = {
    id_direccion?: SortOrder
    calle?: SortOrder
    numero?: SortOrder
    id_comuna?: SortOrder
  }

  export type DireccionAvgOrderByAggregateInput = {
    id_direccion?: SortOrder
    id_comuna?: SortOrder
  }

  export type DireccionMaxOrderByAggregateInput = {
    id_direccion?: SortOrder
    calle?: SortOrder
    numero?: SortOrder
    id_comuna?: SortOrder
  }

  export type DireccionMinOrderByAggregateInput = {
    id_direccion?: SortOrder
    calle?: SortOrder
    numero?: SortOrder
    id_comuna?: SortOrder
  }

  export type DireccionSumOrderByAggregateInput = {
    id_direccion?: SortOrder
    id_comuna?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type UsuarioListRelationFilter = {
    every?: UsuarioWhereInput
    some?: UsuarioWhereInput
    none?: UsuarioWhereInput
  }

  export type PermisoListRelationFilter = {
    every?: PermisoWhereInput
    some?: PermisoWhereInput
    none?: PermisoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermisoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RolCountOrderByAggregateInput = {
    id_rol?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type RolAvgOrderByAggregateInput = {
    id_rol?: SortOrder
  }

  export type RolMaxOrderByAggregateInput = {
    id_rol?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type RolMinOrderByAggregateInput = {
    id_rol?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type RolSumOrderByAggregateInput = {
    id_rol?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DireccionNullableScalarRelationFilter = {
    is?: DireccionWhereInput | null
    isNot?: DireccionWhereInput | null
  }

  export type RolScalarRelationFilter = {
    is?: RolWhereInput
    isNot?: RolWhereInput
  }

  export type CarroDeComprasListRelationFilter = {
    every?: CarroDeComprasWhereInput
    some?: CarroDeComprasWhereInput
    none?: CarroDeComprasWhereInput
  }

  export type ListaDeDeseosNullableScalarRelationFilter = {
    is?: ListaDeDeseosWhereInput | null
    isNot?: ListaDeDeseosWhereInput | null
  }

  export type ValoracionListRelationFilter = {
    every?: ValoracionWhereInput
    some?: ValoracionWhereInput
    none?: ValoracionWhereInput
  }

  export type CarroDeComprasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ValoracionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fecha_registro?: SortOrder
    ultimo_login?: SortOrder
    esta_activo?: SortOrder
    id_direccion?: SortOrder
    id_rol?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_direccion?: SortOrder
    id_rol?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fecha_registro?: SortOrder
    ultimo_login?: SortOrder
    esta_activo?: SortOrder
    id_direccion?: SortOrder
    id_rol?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    fecha_registro?: SortOrder
    ultimo_login?: SortOrder
    esta_activo?: SortOrder
    id_direccion?: SortOrder
    id_rol?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
    id_direccion?: SortOrder
    id_rol?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type RolNullableScalarRelationFilter = {
    is?: RolWhereInput | null
    isNot?: RolWhereInput | null
  }

  export type PermisoCountOrderByAggregateInput = {
    id_permiso?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_rol?: SortOrder
  }

  export type PermisoAvgOrderByAggregateInput = {
    id_permiso?: SortOrder
    id_rol?: SortOrder
  }

  export type PermisoMaxOrderByAggregateInput = {
    id_permiso?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_rol?: SortOrder
  }

  export type PermisoMinOrderByAggregateInput = {
    id_permiso?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    id_rol?: SortOrder
  }

  export type PermisoSumOrderByAggregateInput = {
    id_permiso?: SortOrder
    id_rol?: SortOrder
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type DireccionScalarRelationFilter = {
    is?: DireccionWhereInput
    isNot?: DireccionWhereInput
  }

  export type ProductoListRelationFilter = {
    every?: ProductoWhereInput
    some?: ProductoWhereInput
    none?: ProductoWhereInput
  }

  export type ProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PymeCountOrderByAggregateInput = {
    id_pyme?: SortOrder
    nombre?: SortOrder
    rut?: SortOrder
    descripcion?: SortOrder
    id_usuario?: SortOrder
    id_direccion?: SortOrder
  }

  export type PymeAvgOrderByAggregateInput = {
    id_pyme?: SortOrder
    id_usuario?: SortOrder
    id_direccion?: SortOrder
  }

  export type PymeMaxOrderByAggregateInput = {
    id_pyme?: SortOrder
    nombre?: SortOrder
    rut?: SortOrder
    descripcion?: SortOrder
    id_usuario?: SortOrder
    id_direccion?: SortOrder
  }

  export type PymeMinOrderByAggregateInput = {
    id_pyme?: SortOrder
    nombre?: SortOrder
    rut?: SortOrder
    descripcion?: SortOrder
    id_usuario?: SortOrder
    id_direccion?: SortOrder
  }

  export type PymeSumOrderByAggregateInput = {
    id_pyme?: SortOrder
    id_usuario?: SortOrder
    id_direccion?: SortOrder
  }

  export type CategoriaDeProductoCountOrderByAggregateInput = {
    id_categoria_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type CategoriaDeProductoAvgOrderByAggregateInput = {
    id_categoria_producto?: SortOrder
  }

  export type CategoriaDeProductoMaxOrderByAggregateInput = {
    id_categoria_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type CategoriaDeProductoMinOrderByAggregateInput = {
    id_categoria_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type CategoriaDeProductoSumOrderByAggregateInput = {
    id_categoria_producto?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type PymeScalarRelationFilter = {
    is?: PymeWhereInput
    isNot?: PymeWhereInput
  }

  export type CategoriaDeProductoScalarRelationFilter = {
    is?: CategoriaDeProductoWhereInput
    isNot?: CategoriaDeProductoWhereInput
  }

  export type DetalleCarroComprasListRelationFilter = {
    every?: DetalleCarroComprasWhereInput
    some?: DetalleCarroComprasWhereInput
    none?: DetalleCarroComprasWhereInput
  }

  export type DetalleListaDeseosListRelationFilter = {
    every?: DetalleListaDeseosWhereInput
    some?: DetalleListaDeseosWhereInput
    none?: DetalleListaDeseosWhereInput
  }

  export type DetalleCarroComprasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DetalleListaDeseosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoCountOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    stock?: SortOrder
    estado?: SortOrder
    fecha_publicacion?: SortOrder
    fecha_actualizacion?: SortOrder
    img_url?: SortOrder
    id_pyme?: SortOrder
    id_categoria_producto?: SortOrder
  }

  export type ProductoAvgOrderByAggregateInput = {
    id_producto?: SortOrder
    precio?: SortOrder
    stock?: SortOrder
    id_pyme?: SortOrder
    id_categoria_producto?: SortOrder
  }

  export type ProductoMaxOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    stock?: SortOrder
    estado?: SortOrder
    fecha_publicacion?: SortOrder
    fecha_actualizacion?: SortOrder
    img_url?: SortOrder
    id_pyme?: SortOrder
    id_categoria_producto?: SortOrder
  }

  export type ProductoMinOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    stock?: SortOrder
    estado?: SortOrder
    fecha_publicacion?: SortOrder
    fecha_actualizacion?: SortOrder
    img_url?: SortOrder
    id_pyme?: SortOrder
    id_categoria_producto?: SortOrder
  }

  export type ProductoSumOrderByAggregateInput = {
    id_producto?: SortOrder
    precio?: SortOrder
    stock?: SortOrder
    id_pyme?: SortOrder
    id_categoria_producto?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type VentaNullableScalarRelationFilter = {
    is?: VentaWhereInput | null
    isNot?: VentaWhereInput | null
  }

  export type CarroDeComprasCountOrderByAggregateInput = {
    id_carro_compras?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    id_usuario?: SortOrder
  }

  export type CarroDeComprasAvgOrderByAggregateInput = {
    id_carro_compras?: SortOrder
    total?: SortOrder
    id_usuario?: SortOrder
  }

  export type CarroDeComprasMaxOrderByAggregateInput = {
    id_carro_compras?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    id_usuario?: SortOrder
  }

  export type CarroDeComprasMinOrderByAggregateInput = {
    id_carro_compras?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    estado?: SortOrder
    id_usuario?: SortOrder
  }

  export type CarroDeComprasSumOrderByAggregateInput = {
    id_carro_compras?: SortOrder
    total?: SortOrder
    id_usuario?: SortOrder
  }

  export type ProductoScalarRelationFilter = {
    is?: ProductoWhereInput
    isNot?: ProductoWhereInput
  }

  export type CarroDeComprasScalarRelationFilter = {
    is?: CarroDeComprasWhereInput
    isNot?: CarroDeComprasWhereInput
  }

  export type DetalleCarroComprasCountOrderByAggregateInput = {
    id_detalle_carro_compras?: SortOrder
    cantidad?: SortOrder
    id_producto?: SortOrder
    id_carro_compras?: SortOrder
  }

  export type DetalleCarroComprasAvgOrderByAggregateInput = {
    id_detalle_carro_compras?: SortOrder
    cantidad?: SortOrder
    id_producto?: SortOrder
    id_carro_compras?: SortOrder
  }

  export type DetalleCarroComprasMaxOrderByAggregateInput = {
    id_detalle_carro_compras?: SortOrder
    cantidad?: SortOrder
    id_producto?: SortOrder
    id_carro_compras?: SortOrder
  }

  export type DetalleCarroComprasMinOrderByAggregateInput = {
    id_detalle_carro_compras?: SortOrder
    cantidad?: SortOrder
    id_producto?: SortOrder
    id_carro_compras?: SortOrder
  }

  export type DetalleCarroComprasSumOrderByAggregateInput = {
    id_detalle_carro_compras?: SortOrder
    cantidad?: SortOrder
    id_producto?: SortOrder
    id_carro_compras?: SortOrder
  }

  export type ListaDeDeseosCountOrderByAggregateInput = {
    id_lista_deseo?: SortOrder
    fecha_creacion?: SortOrder
    id_usuario?: SortOrder
  }

  export type ListaDeDeseosAvgOrderByAggregateInput = {
    id_lista_deseo?: SortOrder
    id_usuario?: SortOrder
  }

  export type ListaDeDeseosMaxOrderByAggregateInput = {
    id_lista_deseo?: SortOrder
    fecha_creacion?: SortOrder
    id_usuario?: SortOrder
  }

  export type ListaDeDeseosMinOrderByAggregateInput = {
    id_lista_deseo?: SortOrder
    fecha_creacion?: SortOrder
    id_usuario?: SortOrder
  }

  export type ListaDeDeseosSumOrderByAggregateInput = {
    id_lista_deseo?: SortOrder
    id_usuario?: SortOrder
  }

  export type ListaDeDeseosScalarRelationFilter = {
    is?: ListaDeDeseosWhereInput
    isNot?: ListaDeDeseosWhereInput
  }

  export type DetalleListaDeseosCountOrderByAggregateInput = {
    id_detalle_lista_deseos?: SortOrder
    fecha_agregado?: SortOrder
    id_lista_deseo?: SortOrder
    id_producto?: SortOrder
  }

  export type DetalleListaDeseosAvgOrderByAggregateInput = {
    id_detalle_lista_deseos?: SortOrder
    id_lista_deseo?: SortOrder
    id_producto?: SortOrder
  }

  export type DetalleListaDeseosMaxOrderByAggregateInput = {
    id_detalle_lista_deseos?: SortOrder
    fecha_agregado?: SortOrder
    id_lista_deseo?: SortOrder
    id_producto?: SortOrder
  }

  export type DetalleListaDeseosMinOrderByAggregateInput = {
    id_detalle_lista_deseos?: SortOrder
    fecha_agregado?: SortOrder
    id_lista_deseo?: SortOrder
    id_producto?: SortOrder
  }

  export type DetalleListaDeseosSumOrderByAggregateInput = {
    id_detalle_lista_deseos?: SortOrder
    id_lista_deseo?: SortOrder
    id_producto?: SortOrder
  }

  export type ValoracionId_usuarioId_productoCompoundUniqueInput = {
    id_usuario: number
    id_producto: number
  }

  export type ValoracionCountOrderByAggregateInput = {
    id_valoracion?: SortOrder
    puntaje?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    id_usuario?: SortOrder
    id_producto?: SortOrder
  }

  export type ValoracionAvgOrderByAggregateInput = {
    id_valoracion?: SortOrder
    puntaje?: SortOrder
    id_usuario?: SortOrder
    id_producto?: SortOrder
  }

  export type ValoracionMaxOrderByAggregateInput = {
    id_valoracion?: SortOrder
    puntaje?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    id_usuario?: SortOrder
    id_producto?: SortOrder
  }

  export type ValoracionMinOrderByAggregateInput = {
    id_valoracion?: SortOrder
    puntaje?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    id_usuario?: SortOrder
    id_producto?: SortOrder
  }

  export type ValoracionSumOrderByAggregateInput = {
    id_valoracion?: SortOrder
    puntaje?: SortOrder
    id_usuario?: SortOrder
    id_producto?: SortOrder
  }

  export type VentaListRelationFilter = {
    every?: VentaWhereInput
    some?: VentaWhereInput
    none?: VentaWhereInput
  }

  export type VentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MetodoPagoCountOrderByAggregateInput = {
    id_metodo_pago?: SortOrder
    tipo?: SortOrder
    descripcion?: SortOrder
  }

  export type MetodoPagoAvgOrderByAggregateInput = {
    id_metodo_pago?: SortOrder
  }

  export type MetodoPagoMaxOrderByAggregateInput = {
    id_metodo_pago?: SortOrder
    tipo?: SortOrder
    descripcion?: SortOrder
  }

  export type MetodoPagoMinOrderByAggregateInput = {
    id_metodo_pago?: SortOrder
    tipo?: SortOrder
    descripcion?: SortOrder
  }

  export type MetodoPagoSumOrderByAggregateInput = {
    id_metodo_pago?: SortOrder
  }

  export type MetodoPagoScalarRelationFilter = {
    is?: MetodoPagoWhereInput
    isNot?: MetodoPagoWhereInput
  }

  export type VentaCountOrderByAggregateInput = {
    id_venta?: SortOrder
    monto_total?: SortOrder
    fecha_venta?: SortOrder
    id_carro_compras?: SortOrder
    id_metodo_pago?: SortOrder
  }

  export type VentaAvgOrderByAggregateInput = {
    id_venta?: SortOrder
    monto_total?: SortOrder
    id_carro_compras?: SortOrder
    id_metodo_pago?: SortOrder
  }

  export type VentaMaxOrderByAggregateInput = {
    id_venta?: SortOrder
    monto_total?: SortOrder
    fecha_venta?: SortOrder
    id_carro_compras?: SortOrder
    id_metodo_pago?: SortOrder
  }

  export type VentaMinOrderByAggregateInput = {
    id_venta?: SortOrder
    monto_total?: SortOrder
    fecha_venta?: SortOrder
    id_carro_compras?: SortOrder
    id_metodo_pago?: SortOrder
  }

  export type VentaSumOrderByAggregateInput = {
    id_venta?: SortOrder
    monto_total?: SortOrder
    id_carro_compras?: SortOrder
    id_metodo_pago?: SortOrder
  }

  export type CiudadCreateNestedManyWithoutRegionInput = {
    create?: XOR<CiudadCreateWithoutRegionInput, CiudadUncheckedCreateWithoutRegionInput> | CiudadCreateWithoutRegionInput[] | CiudadUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: CiudadCreateOrConnectWithoutRegionInput | CiudadCreateOrConnectWithoutRegionInput[]
    createMany?: CiudadCreateManyRegionInputEnvelope
    connect?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
  }

  export type CiudadUncheckedCreateNestedManyWithoutRegionInput = {
    create?: XOR<CiudadCreateWithoutRegionInput, CiudadUncheckedCreateWithoutRegionInput> | CiudadCreateWithoutRegionInput[] | CiudadUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: CiudadCreateOrConnectWithoutRegionInput | CiudadCreateOrConnectWithoutRegionInput[]
    createMany?: CiudadCreateManyRegionInputEnvelope
    connect?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type CiudadUpdateManyWithoutRegionNestedInput = {
    create?: XOR<CiudadCreateWithoutRegionInput, CiudadUncheckedCreateWithoutRegionInput> | CiudadCreateWithoutRegionInput[] | CiudadUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: CiudadCreateOrConnectWithoutRegionInput | CiudadCreateOrConnectWithoutRegionInput[]
    upsert?: CiudadUpsertWithWhereUniqueWithoutRegionInput | CiudadUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: CiudadCreateManyRegionInputEnvelope
    set?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
    disconnect?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
    delete?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
    connect?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
    update?: CiudadUpdateWithWhereUniqueWithoutRegionInput | CiudadUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: CiudadUpdateManyWithWhereWithoutRegionInput | CiudadUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: CiudadScalarWhereInput | CiudadScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CiudadUncheckedUpdateManyWithoutRegionNestedInput = {
    create?: XOR<CiudadCreateWithoutRegionInput, CiudadUncheckedCreateWithoutRegionInput> | CiudadCreateWithoutRegionInput[] | CiudadUncheckedCreateWithoutRegionInput[]
    connectOrCreate?: CiudadCreateOrConnectWithoutRegionInput | CiudadCreateOrConnectWithoutRegionInput[]
    upsert?: CiudadUpsertWithWhereUniqueWithoutRegionInput | CiudadUpsertWithWhereUniqueWithoutRegionInput[]
    createMany?: CiudadCreateManyRegionInputEnvelope
    set?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
    disconnect?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
    delete?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
    connect?: CiudadWhereUniqueInput | CiudadWhereUniqueInput[]
    update?: CiudadUpdateWithWhereUniqueWithoutRegionInput | CiudadUpdateWithWhereUniqueWithoutRegionInput[]
    updateMany?: CiudadUpdateManyWithWhereWithoutRegionInput | CiudadUpdateManyWithWhereWithoutRegionInput[]
    deleteMany?: CiudadScalarWhereInput | CiudadScalarWhereInput[]
  }

  export type RegionCreateNestedOneWithoutCiudadInput = {
    create?: XOR<RegionCreateWithoutCiudadInput, RegionUncheckedCreateWithoutCiudadInput>
    connectOrCreate?: RegionCreateOrConnectWithoutCiudadInput
    connect?: RegionWhereUniqueInput
  }

  export type ComunaCreateNestedManyWithoutCiudadInput = {
    create?: XOR<ComunaCreateWithoutCiudadInput, ComunaUncheckedCreateWithoutCiudadInput> | ComunaCreateWithoutCiudadInput[] | ComunaUncheckedCreateWithoutCiudadInput[]
    connectOrCreate?: ComunaCreateOrConnectWithoutCiudadInput | ComunaCreateOrConnectWithoutCiudadInput[]
    createMany?: ComunaCreateManyCiudadInputEnvelope
    connect?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
  }

  export type ComunaUncheckedCreateNestedManyWithoutCiudadInput = {
    create?: XOR<ComunaCreateWithoutCiudadInput, ComunaUncheckedCreateWithoutCiudadInput> | ComunaCreateWithoutCiudadInput[] | ComunaUncheckedCreateWithoutCiudadInput[]
    connectOrCreate?: ComunaCreateOrConnectWithoutCiudadInput | ComunaCreateOrConnectWithoutCiudadInput[]
    createMany?: ComunaCreateManyCiudadInputEnvelope
    connect?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
  }

  export type RegionUpdateOneRequiredWithoutCiudadNestedInput = {
    create?: XOR<RegionCreateWithoutCiudadInput, RegionUncheckedCreateWithoutCiudadInput>
    connectOrCreate?: RegionCreateOrConnectWithoutCiudadInput
    upsert?: RegionUpsertWithoutCiudadInput
    connect?: RegionWhereUniqueInput
    update?: XOR<XOR<RegionUpdateToOneWithWhereWithoutCiudadInput, RegionUpdateWithoutCiudadInput>, RegionUncheckedUpdateWithoutCiudadInput>
  }

  export type ComunaUpdateManyWithoutCiudadNestedInput = {
    create?: XOR<ComunaCreateWithoutCiudadInput, ComunaUncheckedCreateWithoutCiudadInput> | ComunaCreateWithoutCiudadInput[] | ComunaUncheckedCreateWithoutCiudadInput[]
    connectOrCreate?: ComunaCreateOrConnectWithoutCiudadInput | ComunaCreateOrConnectWithoutCiudadInput[]
    upsert?: ComunaUpsertWithWhereUniqueWithoutCiudadInput | ComunaUpsertWithWhereUniqueWithoutCiudadInput[]
    createMany?: ComunaCreateManyCiudadInputEnvelope
    set?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
    disconnect?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
    delete?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
    connect?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
    update?: ComunaUpdateWithWhereUniqueWithoutCiudadInput | ComunaUpdateWithWhereUniqueWithoutCiudadInput[]
    updateMany?: ComunaUpdateManyWithWhereWithoutCiudadInput | ComunaUpdateManyWithWhereWithoutCiudadInput[]
    deleteMany?: ComunaScalarWhereInput | ComunaScalarWhereInput[]
  }

  export type ComunaUncheckedUpdateManyWithoutCiudadNestedInput = {
    create?: XOR<ComunaCreateWithoutCiudadInput, ComunaUncheckedCreateWithoutCiudadInput> | ComunaCreateWithoutCiudadInput[] | ComunaUncheckedCreateWithoutCiudadInput[]
    connectOrCreate?: ComunaCreateOrConnectWithoutCiudadInput | ComunaCreateOrConnectWithoutCiudadInput[]
    upsert?: ComunaUpsertWithWhereUniqueWithoutCiudadInput | ComunaUpsertWithWhereUniqueWithoutCiudadInput[]
    createMany?: ComunaCreateManyCiudadInputEnvelope
    set?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
    disconnect?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
    delete?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
    connect?: ComunaWhereUniqueInput | ComunaWhereUniqueInput[]
    update?: ComunaUpdateWithWhereUniqueWithoutCiudadInput | ComunaUpdateWithWhereUniqueWithoutCiudadInput[]
    updateMany?: ComunaUpdateManyWithWhereWithoutCiudadInput | ComunaUpdateManyWithWhereWithoutCiudadInput[]
    deleteMany?: ComunaScalarWhereInput | ComunaScalarWhereInput[]
  }

  export type CiudadCreateNestedOneWithoutComunaInput = {
    create?: XOR<CiudadCreateWithoutComunaInput, CiudadUncheckedCreateWithoutComunaInput>
    connectOrCreate?: CiudadCreateOrConnectWithoutComunaInput
    connect?: CiudadWhereUniqueInput
  }

  export type DireccionCreateNestedManyWithoutComunaInput = {
    create?: XOR<DireccionCreateWithoutComunaInput, DireccionUncheckedCreateWithoutComunaInput> | DireccionCreateWithoutComunaInput[] | DireccionUncheckedCreateWithoutComunaInput[]
    connectOrCreate?: DireccionCreateOrConnectWithoutComunaInput | DireccionCreateOrConnectWithoutComunaInput[]
    createMany?: DireccionCreateManyComunaInputEnvelope
    connect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
  }

  export type DireccionUncheckedCreateNestedManyWithoutComunaInput = {
    create?: XOR<DireccionCreateWithoutComunaInput, DireccionUncheckedCreateWithoutComunaInput> | DireccionCreateWithoutComunaInput[] | DireccionUncheckedCreateWithoutComunaInput[]
    connectOrCreate?: DireccionCreateOrConnectWithoutComunaInput | DireccionCreateOrConnectWithoutComunaInput[]
    createMany?: DireccionCreateManyComunaInputEnvelope
    connect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
  }

  export type CiudadUpdateOneRequiredWithoutComunaNestedInput = {
    create?: XOR<CiudadCreateWithoutComunaInput, CiudadUncheckedCreateWithoutComunaInput>
    connectOrCreate?: CiudadCreateOrConnectWithoutComunaInput
    upsert?: CiudadUpsertWithoutComunaInput
    connect?: CiudadWhereUniqueInput
    update?: XOR<XOR<CiudadUpdateToOneWithWhereWithoutComunaInput, CiudadUpdateWithoutComunaInput>, CiudadUncheckedUpdateWithoutComunaInput>
  }

  export type DireccionUpdateManyWithoutComunaNestedInput = {
    create?: XOR<DireccionCreateWithoutComunaInput, DireccionUncheckedCreateWithoutComunaInput> | DireccionCreateWithoutComunaInput[] | DireccionUncheckedCreateWithoutComunaInput[]
    connectOrCreate?: DireccionCreateOrConnectWithoutComunaInput | DireccionCreateOrConnectWithoutComunaInput[]
    upsert?: DireccionUpsertWithWhereUniqueWithoutComunaInput | DireccionUpsertWithWhereUniqueWithoutComunaInput[]
    createMany?: DireccionCreateManyComunaInputEnvelope
    set?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    disconnect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    delete?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    connect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    update?: DireccionUpdateWithWhereUniqueWithoutComunaInput | DireccionUpdateWithWhereUniqueWithoutComunaInput[]
    updateMany?: DireccionUpdateManyWithWhereWithoutComunaInput | DireccionUpdateManyWithWhereWithoutComunaInput[]
    deleteMany?: DireccionScalarWhereInput | DireccionScalarWhereInput[]
  }

  export type DireccionUncheckedUpdateManyWithoutComunaNestedInput = {
    create?: XOR<DireccionCreateWithoutComunaInput, DireccionUncheckedCreateWithoutComunaInput> | DireccionCreateWithoutComunaInput[] | DireccionUncheckedCreateWithoutComunaInput[]
    connectOrCreate?: DireccionCreateOrConnectWithoutComunaInput | DireccionCreateOrConnectWithoutComunaInput[]
    upsert?: DireccionUpsertWithWhereUniqueWithoutComunaInput | DireccionUpsertWithWhereUniqueWithoutComunaInput[]
    createMany?: DireccionCreateManyComunaInputEnvelope
    set?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    disconnect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    delete?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    connect?: DireccionWhereUniqueInput | DireccionWhereUniqueInput[]
    update?: DireccionUpdateWithWhereUniqueWithoutComunaInput | DireccionUpdateWithWhereUniqueWithoutComunaInput[]
    updateMany?: DireccionUpdateManyWithWhereWithoutComunaInput | DireccionUpdateManyWithWhereWithoutComunaInput[]
    deleteMany?: DireccionScalarWhereInput | DireccionScalarWhereInput[]
  }

  export type ComunaCreateNestedOneWithoutDireccionInput = {
    create?: XOR<ComunaCreateWithoutDireccionInput, ComunaUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: ComunaCreateOrConnectWithoutDireccionInput
    connect?: ComunaWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutDireccionInput = {
    create?: XOR<UsuarioCreateWithoutDireccionInput, UsuarioUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDireccionInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PymeCreateNestedOneWithoutDireccionInput = {
    create?: XOR<PymeCreateWithoutDireccionInput, PymeUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: PymeCreateOrConnectWithoutDireccionInput
    connect?: PymeWhereUniqueInput
  }

  export type UsuarioUncheckedCreateNestedOneWithoutDireccionInput = {
    create?: XOR<UsuarioCreateWithoutDireccionInput, UsuarioUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDireccionInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PymeUncheckedCreateNestedOneWithoutDireccionInput = {
    create?: XOR<PymeCreateWithoutDireccionInput, PymeUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: PymeCreateOrConnectWithoutDireccionInput
    connect?: PymeWhereUniqueInput
  }

  export type ComunaUpdateOneRequiredWithoutDireccionNestedInput = {
    create?: XOR<ComunaCreateWithoutDireccionInput, ComunaUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: ComunaCreateOrConnectWithoutDireccionInput
    upsert?: ComunaUpsertWithoutDireccionInput
    connect?: ComunaWhereUniqueInput
    update?: XOR<XOR<ComunaUpdateToOneWithWhereWithoutDireccionInput, ComunaUpdateWithoutDireccionInput>, ComunaUncheckedUpdateWithoutDireccionInput>
  }

  export type UsuarioUpdateOneWithoutDireccionNestedInput = {
    create?: XOR<UsuarioCreateWithoutDireccionInput, UsuarioUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDireccionInput
    upsert?: UsuarioUpsertWithoutDireccionInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDireccionInput, UsuarioUpdateWithoutDireccionInput>, UsuarioUncheckedUpdateWithoutDireccionInput>
  }

  export type PymeUpdateOneWithoutDireccionNestedInput = {
    create?: XOR<PymeCreateWithoutDireccionInput, PymeUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: PymeCreateOrConnectWithoutDireccionInput
    upsert?: PymeUpsertWithoutDireccionInput
    disconnect?: PymeWhereInput | boolean
    delete?: PymeWhereInput | boolean
    connect?: PymeWhereUniqueInput
    update?: XOR<XOR<PymeUpdateToOneWithWhereWithoutDireccionInput, PymeUpdateWithoutDireccionInput>, PymeUncheckedUpdateWithoutDireccionInput>
  }

  export type UsuarioUncheckedUpdateOneWithoutDireccionNestedInput = {
    create?: XOR<UsuarioCreateWithoutDireccionInput, UsuarioUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutDireccionInput
    upsert?: UsuarioUpsertWithoutDireccionInput
    disconnect?: UsuarioWhereInput | boolean
    delete?: UsuarioWhereInput | boolean
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutDireccionInput, UsuarioUpdateWithoutDireccionInput>, UsuarioUncheckedUpdateWithoutDireccionInput>
  }

  export type PymeUncheckedUpdateOneWithoutDireccionNestedInput = {
    create?: XOR<PymeCreateWithoutDireccionInput, PymeUncheckedCreateWithoutDireccionInput>
    connectOrCreate?: PymeCreateOrConnectWithoutDireccionInput
    upsert?: PymeUpsertWithoutDireccionInput
    disconnect?: PymeWhereInput | boolean
    delete?: PymeWhereInput | boolean
    connect?: PymeWhereUniqueInput
    update?: XOR<XOR<PymeUpdateToOneWithWhereWithoutDireccionInput, PymeUpdateWithoutDireccionInput>, PymeUncheckedUpdateWithoutDireccionInput>
  }

  export type UsuarioCreateNestedManyWithoutRolInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type PermisoCreateNestedManyWithoutRolInput = {
    create?: XOR<PermisoCreateWithoutRolInput, PermisoUncheckedCreateWithoutRolInput> | PermisoCreateWithoutRolInput[] | PermisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutRolInput | PermisoCreateOrConnectWithoutRolInput[]
    createMany?: PermisoCreateManyRolInputEnvelope
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
  }

  export type UsuarioUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
  }

  export type PermisoUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<PermisoCreateWithoutRolInput, PermisoUncheckedCreateWithoutRolInput> | PermisoCreateWithoutRolInput[] | PermisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutRolInput | PermisoCreateOrConnectWithoutRolInput[]
    createMany?: PermisoCreateManyRolInputEnvelope
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UsuarioUpdateManyWithoutRolNestedInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutRolInput | UsuarioUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutRolInput | UsuarioUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutRolInput | UsuarioUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type PermisoUpdateManyWithoutRolNestedInput = {
    create?: XOR<PermisoCreateWithoutRolInput, PermisoUncheckedCreateWithoutRolInput> | PermisoCreateWithoutRolInput[] | PermisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutRolInput | PermisoCreateOrConnectWithoutRolInput[]
    upsert?: PermisoUpsertWithWhereUniqueWithoutRolInput | PermisoUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: PermisoCreateManyRolInputEnvelope
    set?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    disconnect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    delete?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    update?: PermisoUpdateWithWhereUniqueWithoutRolInput | PermisoUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: PermisoUpdateManyWithWhereWithoutRolInput | PermisoUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
  }

  export type UsuarioUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput> | UsuarioCreateWithoutRolInput[] | UsuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: UsuarioCreateOrConnectWithoutRolInput | UsuarioCreateOrConnectWithoutRolInput[]
    upsert?: UsuarioUpsertWithWhereUniqueWithoutRolInput | UsuarioUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: UsuarioCreateManyRolInputEnvelope
    set?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    disconnect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    delete?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    connect?: UsuarioWhereUniqueInput | UsuarioWhereUniqueInput[]
    update?: UsuarioUpdateWithWhereUniqueWithoutRolInput | UsuarioUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: UsuarioUpdateManyWithWhereWithoutRolInput | UsuarioUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
  }

  export type PermisoUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<PermisoCreateWithoutRolInput, PermisoUncheckedCreateWithoutRolInput> | PermisoCreateWithoutRolInput[] | PermisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: PermisoCreateOrConnectWithoutRolInput | PermisoCreateOrConnectWithoutRolInput[]
    upsert?: PermisoUpsertWithWhereUniqueWithoutRolInput | PermisoUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: PermisoCreateManyRolInputEnvelope
    set?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    disconnect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    delete?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    connect?: PermisoWhereUniqueInput | PermisoWhereUniqueInput[]
    update?: PermisoUpdateWithWhereUniqueWithoutRolInput | PermisoUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: PermisoUpdateManyWithWhereWithoutRolInput | PermisoUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
  }

  export type DireccionCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<DireccionCreateWithoutUsuarioInput, DireccionUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: DireccionCreateOrConnectWithoutUsuarioInput
    connect?: DireccionWhereUniqueInput
  }

  export type RolCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<RolCreateWithoutUsuarioInput, RolUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: RolCreateOrConnectWithoutUsuarioInput
    connect?: RolWhereUniqueInput
  }

  export type PymeCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<PymeCreateWithoutUsuarioInput, PymeUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: PymeCreateOrConnectWithoutUsuarioInput
    connect?: PymeWhereUniqueInput
  }

  export type CarroDeComprasCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CarroDeComprasCreateWithoutUsuarioInput, CarroDeComprasUncheckedCreateWithoutUsuarioInput> | CarroDeComprasCreateWithoutUsuarioInput[] | CarroDeComprasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CarroDeComprasCreateOrConnectWithoutUsuarioInput | CarroDeComprasCreateOrConnectWithoutUsuarioInput[]
    createMany?: CarroDeComprasCreateManyUsuarioInputEnvelope
    connect?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
  }

  export type ListaDeDeseosCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ListaDeDeseosCreateWithoutUsuarioInput, ListaDeDeseosUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ListaDeDeseosCreateOrConnectWithoutUsuarioInput
    connect?: ListaDeDeseosWhereUniqueInput
  }

  export type ValoracionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ValoracionCreateWithoutUsuarioInput, ValoracionUncheckedCreateWithoutUsuarioInput> | ValoracionCreateWithoutUsuarioInput[] | ValoracionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ValoracionCreateOrConnectWithoutUsuarioInput | ValoracionCreateOrConnectWithoutUsuarioInput[]
    createMany?: ValoracionCreateManyUsuarioInputEnvelope
    connect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
  }

  export type PymeUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<PymeCreateWithoutUsuarioInput, PymeUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: PymeCreateOrConnectWithoutUsuarioInput
    connect?: PymeWhereUniqueInput
  }

  export type CarroDeComprasUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CarroDeComprasCreateWithoutUsuarioInput, CarroDeComprasUncheckedCreateWithoutUsuarioInput> | CarroDeComprasCreateWithoutUsuarioInput[] | CarroDeComprasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CarroDeComprasCreateOrConnectWithoutUsuarioInput | CarroDeComprasCreateOrConnectWithoutUsuarioInput[]
    createMany?: CarroDeComprasCreateManyUsuarioInputEnvelope
    connect?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
  }

  export type ListaDeDeseosUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ListaDeDeseosCreateWithoutUsuarioInput, ListaDeDeseosUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ListaDeDeseosCreateOrConnectWithoutUsuarioInput
    connect?: ListaDeDeseosWhereUniqueInput
  }

  export type ValoracionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ValoracionCreateWithoutUsuarioInput, ValoracionUncheckedCreateWithoutUsuarioInput> | ValoracionCreateWithoutUsuarioInput[] | ValoracionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ValoracionCreateOrConnectWithoutUsuarioInput | ValoracionCreateOrConnectWithoutUsuarioInput[]
    createMany?: ValoracionCreateManyUsuarioInputEnvelope
    connect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DireccionUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<DireccionCreateWithoutUsuarioInput, DireccionUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: DireccionCreateOrConnectWithoutUsuarioInput
    upsert?: DireccionUpsertWithoutUsuarioInput
    disconnect?: DireccionWhereInput | boolean
    delete?: DireccionWhereInput | boolean
    connect?: DireccionWhereUniqueInput
    update?: XOR<XOR<DireccionUpdateToOneWithWhereWithoutUsuarioInput, DireccionUpdateWithoutUsuarioInput>, DireccionUncheckedUpdateWithoutUsuarioInput>
  }

  export type RolUpdateOneRequiredWithoutUsuarioNestedInput = {
    create?: XOR<RolCreateWithoutUsuarioInput, RolUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: RolCreateOrConnectWithoutUsuarioInput
    upsert?: RolUpsertWithoutUsuarioInput
    connect?: RolWhereUniqueInput
    update?: XOR<XOR<RolUpdateToOneWithWhereWithoutUsuarioInput, RolUpdateWithoutUsuarioInput>, RolUncheckedUpdateWithoutUsuarioInput>
  }

  export type PymeUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<PymeCreateWithoutUsuarioInput, PymeUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: PymeCreateOrConnectWithoutUsuarioInput
    upsert?: PymeUpsertWithoutUsuarioInput
    disconnect?: PymeWhereInput | boolean
    delete?: PymeWhereInput | boolean
    connect?: PymeWhereUniqueInput
    update?: XOR<XOR<PymeUpdateToOneWithWhereWithoutUsuarioInput, PymeUpdateWithoutUsuarioInput>, PymeUncheckedUpdateWithoutUsuarioInput>
  }

  export type CarroDeComprasUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CarroDeComprasCreateWithoutUsuarioInput, CarroDeComprasUncheckedCreateWithoutUsuarioInput> | CarroDeComprasCreateWithoutUsuarioInput[] | CarroDeComprasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CarroDeComprasCreateOrConnectWithoutUsuarioInput | CarroDeComprasCreateOrConnectWithoutUsuarioInput[]
    upsert?: CarroDeComprasUpsertWithWhereUniqueWithoutUsuarioInput | CarroDeComprasUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CarroDeComprasCreateManyUsuarioInputEnvelope
    set?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
    disconnect?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
    delete?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
    connect?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
    update?: CarroDeComprasUpdateWithWhereUniqueWithoutUsuarioInput | CarroDeComprasUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CarroDeComprasUpdateManyWithWhereWithoutUsuarioInput | CarroDeComprasUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CarroDeComprasScalarWhereInput | CarroDeComprasScalarWhereInput[]
  }

  export type ListaDeDeseosUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ListaDeDeseosCreateWithoutUsuarioInput, ListaDeDeseosUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ListaDeDeseosCreateOrConnectWithoutUsuarioInput
    upsert?: ListaDeDeseosUpsertWithoutUsuarioInput
    disconnect?: ListaDeDeseosWhereInput | boolean
    delete?: ListaDeDeseosWhereInput | boolean
    connect?: ListaDeDeseosWhereUniqueInput
    update?: XOR<XOR<ListaDeDeseosUpdateToOneWithWhereWithoutUsuarioInput, ListaDeDeseosUpdateWithoutUsuarioInput>, ListaDeDeseosUncheckedUpdateWithoutUsuarioInput>
  }

  export type ValoracionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ValoracionCreateWithoutUsuarioInput, ValoracionUncheckedCreateWithoutUsuarioInput> | ValoracionCreateWithoutUsuarioInput[] | ValoracionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ValoracionCreateOrConnectWithoutUsuarioInput | ValoracionCreateOrConnectWithoutUsuarioInput[]
    upsert?: ValoracionUpsertWithWhereUniqueWithoutUsuarioInput | ValoracionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ValoracionCreateManyUsuarioInputEnvelope
    set?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    disconnect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    delete?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    connect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    update?: ValoracionUpdateWithWhereUniqueWithoutUsuarioInput | ValoracionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ValoracionUpdateManyWithWhereWithoutUsuarioInput | ValoracionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ValoracionScalarWhereInput | ValoracionScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type PymeUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<PymeCreateWithoutUsuarioInput, PymeUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: PymeCreateOrConnectWithoutUsuarioInput
    upsert?: PymeUpsertWithoutUsuarioInput
    disconnect?: PymeWhereInput | boolean
    delete?: PymeWhereInput | boolean
    connect?: PymeWhereUniqueInput
    update?: XOR<XOR<PymeUpdateToOneWithWhereWithoutUsuarioInput, PymeUpdateWithoutUsuarioInput>, PymeUncheckedUpdateWithoutUsuarioInput>
  }

  export type CarroDeComprasUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CarroDeComprasCreateWithoutUsuarioInput, CarroDeComprasUncheckedCreateWithoutUsuarioInput> | CarroDeComprasCreateWithoutUsuarioInput[] | CarroDeComprasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CarroDeComprasCreateOrConnectWithoutUsuarioInput | CarroDeComprasCreateOrConnectWithoutUsuarioInput[]
    upsert?: CarroDeComprasUpsertWithWhereUniqueWithoutUsuarioInput | CarroDeComprasUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CarroDeComprasCreateManyUsuarioInputEnvelope
    set?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
    disconnect?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
    delete?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
    connect?: CarroDeComprasWhereUniqueInput | CarroDeComprasWhereUniqueInput[]
    update?: CarroDeComprasUpdateWithWhereUniqueWithoutUsuarioInput | CarroDeComprasUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CarroDeComprasUpdateManyWithWhereWithoutUsuarioInput | CarroDeComprasUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CarroDeComprasScalarWhereInput | CarroDeComprasScalarWhereInput[]
  }

  export type ListaDeDeseosUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ListaDeDeseosCreateWithoutUsuarioInput, ListaDeDeseosUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ListaDeDeseosCreateOrConnectWithoutUsuarioInput
    upsert?: ListaDeDeseosUpsertWithoutUsuarioInput
    disconnect?: ListaDeDeseosWhereInput | boolean
    delete?: ListaDeDeseosWhereInput | boolean
    connect?: ListaDeDeseosWhereUniqueInput
    update?: XOR<XOR<ListaDeDeseosUpdateToOneWithWhereWithoutUsuarioInput, ListaDeDeseosUpdateWithoutUsuarioInput>, ListaDeDeseosUncheckedUpdateWithoutUsuarioInput>
  }

  export type ValoracionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ValoracionCreateWithoutUsuarioInput, ValoracionUncheckedCreateWithoutUsuarioInput> | ValoracionCreateWithoutUsuarioInput[] | ValoracionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ValoracionCreateOrConnectWithoutUsuarioInput | ValoracionCreateOrConnectWithoutUsuarioInput[]
    upsert?: ValoracionUpsertWithWhereUniqueWithoutUsuarioInput | ValoracionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ValoracionCreateManyUsuarioInputEnvelope
    set?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    disconnect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    delete?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    connect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    update?: ValoracionUpdateWithWhereUniqueWithoutUsuarioInput | ValoracionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ValoracionUpdateManyWithWhereWithoutUsuarioInput | ValoracionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ValoracionScalarWhereInput | ValoracionScalarWhereInput[]
  }

  export type RolCreateNestedOneWithoutPermisoInput = {
    create?: XOR<RolCreateWithoutPermisoInput, RolUncheckedCreateWithoutPermisoInput>
    connectOrCreate?: RolCreateOrConnectWithoutPermisoInput
    connect?: RolWhereUniqueInput
  }

  export type RolUpdateOneWithoutPermisoNestedInput = {
    create?: XOR<RolCreateWithoutPermisoInput, RolUncheckedCreateWithoutPermisoInput>
    connectOrCreate?: RolCreateOrConnectWithoutPermisoInput
    upsert?: RolUpsertWithoutPermisoInput
    disconnect?: RolWhereInput | boolean
    delete?: RolWhereInput | boolean
    connect?: RolWhereUniqueInput
    update?: XOR<XOR<RolUpdateToOneWithWhereWithoutPermisoInput, RolUpdateWithoutPermisoInput>, RolUncheckedUpdateWithoutPermisoInput>
  }

  export type UsuarioCreateNestedOneWithoutPymeInput = {
    create?: XOR<UsuarioCreateWithoutPymeInput, UsuarioUncheckedCreateWithoutPymeInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPymeInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DireccionCreateNestedOneWithoutPymeInput = {
    create?: XOR<DireccionCreateWithoutPymeInput, DireccionUncheckedCreateWithoutPymeInput>
    connectOrCreate?: DireccionCreateOrConnectWithoutPymeInput
    connect?: DireccionWhereUniqueInput
  }

  export type ProductoCreateNestedManyWithoutPymeInput = {
    create?: XOR<ProductoCreateWithoutPymeInput, ProductoUncheckedCreateWithoutPymeInput> | ProductoCreateWithoutPymeInput[] | ProductoUncheckedCreateWithoutPymeInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutPymeInput | ProductoCreateOrConnectWithoutPymeInput[]
    createMany?: ProductoCreateManyPymeInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutPymeInput = {
    create?: XOR<ProductoCreateWithoutPymeInput, ProductoUncheckedCreateWithoutPymeInput> | ProductoCreateWithoutPymeInput[] | ProductoUncheckedCreateWithoutPymeInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutPymeInput | ProductoCreateOrConnectWithoutPymeInput[]
    createMany?: ProductoCreateManyPymeInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutPymeNestedInput = {
    create?: XOR<UsuarioCreateWithoutPymeInput, UsuarioUncheckedCreateWithoutPymeInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPymeInput
    upsert?: UsuarioUpsertWithoutPymeInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPymeInput, UsuarioUpdateWithoutPymeInput>, UsuarioUncheckedUpdateWithoutPymeInput>
  }

  export type DireccionUpdateOneRequiredWithoutPymeNestedInput = {
    create?: XOR<DireccionCreateWithoutPymeInput, DireccionUncheckedCreateWithoutPymeInput>
    connectOrCreate?: DireccionCreateOrConnectWithoutPymeInput
    upsert?: DireccionUpsertWithoutPymeInput
    connect?: DireccionWhereUniqueInput
    update?: XOR<XOR<DireccionUpdateToOneWithWhereWithoutPymeInput, DireccionUpdateWithoutPymeInput>, DireccionUncheckedUpdateWithoutPymeInput>
  }

  export type ProductoUpdateManyWithoutPymeNestedInput = {
    create?: XOR<ProductoCreateWithoutPymeInput, ProductoUncheckedCreateWithoutPymeInput> | ProductoCreateWithoutPymeInput[] | ProductoUncheckedCreateWithoutPymeInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutPymeInput | ProductoCreateOrConnectWithoutPymeInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutPymeInput | ProductoUpsertWithWhereUniqueWithoutPymeInput[]
    createMany?: ProductoCreateManyPymeInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutPymeInput | ProductoUpdateWithWhereUniqueWithoutPymeInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutPymeInput | ProductoUpdateManyWithWhereWithoutPymeInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutPymeNestedInput = {
    create?: XOR<ProductoCreateWithoutPymeInput, ProductoUncheckedCreateWithoutPymeInput> | ProductoCreateWithoutPymeInput[] | ProductoUncheckedCreateWithoutPymeInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutPymeInput | ProductoCreateOrConnectWithoutPymeInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutPymeInput | ProductoUpsertWithWhereUniqueWithoutPymeInput[]
    createMany?: ProductoCreateManyPymeInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutPymeInput | ProductoUpdateWithWhereUniqueWithoutPymeInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutPymeInput | ProductoUpdateManyWithWhereWithoutPymeInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoCreateNestedManyWithoutCategoriaDeProductoInput = {
    create?: XOR<ProductoCreateWithoutCategoriaDeProductoInput, ProductoUncheckedCreateWithoutCategoriaDeProductoInput> | ProductoCreateWithoutCategoriaDeProductoInput[] | ProductoUncheckedCreateWithoutCategoriaDeProductoInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaDeProductoInput | ProductoCreateOrConnectWithoutCategoriaDeProductoInput[]
    createMany?: ProductoCreateManyCategoriaDeProductoInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutCategoriaDeProductoInput = {
    create?: XOR<ProductoCreateWithoutCategoriaDeProductoInput, ProductoUncheckedCreateWithoutCategoriaDeProductoInput> | ProductoCreateWithoutCategoriaDeProductoInput[] | ProductoUncheckedCreateWithoutCategoriaDeProductoInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaDeProductoInput | ProductoCreateOrConnectWithoutCategoriaDeProductoInput[]
    createMany?: ProductoCreateManyCategoriaDeProductoInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUpdateManyWithoutCategoriaDeProductoNestedInput = {
    create?: XOR<ProductoCreateWithoutCategoriaDeProductoInput, ProductoUncheckedCreateWithoutCategoriaDeProductoInput> | ProductoCreateWithoutCategoriaDeProductoInput[] | ProductoUncheckedCreateWithoutCategoriaDeProductoInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaDeProductoInput | ProductoCreateOrConnectWithoutCategoriaDeProductoInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCategoriaDeProductoInput | ProductoUpsertWithWhereUniqueWithoutCategoriaDeProductoInput[]
    createMany?: ProductoCreateManyCategoriaDeProductoInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCategoriaDeProductoInput | ProductoUpdateWithWhereUniqueWithoutCategoriaDeProductoInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCategoriaDeProductoInput | ProductoUpdateManyWithWhereWithoutCategoriaDeProductoInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutCategoriaDeProductoNestedInput = {
    create?: XOR<ProductoCreateWithoutCategoriaDeProductoInput, ProductoUncheckedCreateWithoutCategoriaDeProductoInput> | ProductoCreateWithoutCategoriaDeProductoInput[] | ProductoUncheckedCreateWithoutCategoriaDeProductoInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaDeProductoInput | ProductoCreateOrConnectWithoutCategoriaDeProductoInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCategoriaDeProductoInput | ProductoUpsertWithWhereUniqueWithoutCategoriaDeProductoInput[]
    createMany?: ProductoCreateManyCategoriaDeProductoInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCategoriaDeProductoInput | ProductoUpdateWithWhereUniqueWithoutCategoriaDeProductoInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCategoriaDeProductoInput | ProductoUpdateManyWithWhereWithoutCategoriaDeProductoInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type PymeCreateNestedOneWithoutProductoInput = {
    create?: XOR<PymeCreateWithoutProductoInput, PymeUncheckedCreateWithoutProductoInput>
    connectOrCreate?: PymeCreateOrConnectWithoutProductoInput
    connect?: PymeWhereUniqueInput
  }

  export type CategoriaDeProductoCreateNestedOneWithoutProductoInput = {
    create?: XOR<CategoriaDeProductoCreateWithoutProductoInput, CategoriaDeProductoUncheckedCreateWithoutProductoInput>
    connectOrCreate?: CategoriaDeProductoCreateOrConnectWithoutProductoInput
    connect?: CategoriaDeProductoWhereUniqueInput
  }

  export type DetalleCarroComprasCreateNestedManyWithoutProductoInput = {
    create?: XOR<DetalleCarroComprasCreateWithoutProductoInput, DetalleCarroComprasUncheckedCreateWithoutProductoInput> | DetalleCarroComprasCreateWithoutProductoInput[] | DetalleCarroComprasUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetalleCarroComprasCreateOrConnectWithoutProductoInput | DetalleCarroComprasCreateOrConnectWithoutProductoInput[]
    createMany?: DetalleCarroComprasCreateManyProductoInputEnvelope
    connect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
  }

  export type DetalleListaDeseosCreateNestedManyWithoutProductoInput = {
    create?: XOR<DetalleListaDeseosCreateWithoutProductoInput, DetalleListaDeseosUncheckedCreateWithoutProductoInput> | DetalleListaDeseosCreateWithoutProductoInput[] | DetalleListaDeseosUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetalleListaDeseosCreateOrConnectWithoutProductoInput | DetalleListaDeseosCreateOrConnectWithoutProductoInput[]
    createMany?: DetalleListaDeseosCreateManyProductoInputEnvelope
    connect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
  }

  export type ValoracionCreateNestedManyWithoutProductoInput = {
    create?: XOR<ValoracionCreateWithoutProductoInput, ValoracionUncheckedCreateWithoutProductoInput> | ValoracionCreateWithoutProductoInput[] | ValoracionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ValoracionCreateOrConnectWithoutProductoInput | ValoracionCreateOrConnectWithoutProductoInput[]
    createMany?: ValoracionCreateManyProductoInputEnvelope
    connect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
  }

  export type DetalleCarroComprasUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<DetalleCarroComprasCreateWithoutProductoInput, DetalleCarroComprasUncheckedCreateWithoutProductoInput> | DetalleCarroComprasCreateWithoutProductoInput[] | DetalleCarroComprasUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetalleCarroComprasCreateOrConnectWithoutProductoInput | DetalleCarroComprasCreateOrConnectWithoutProductoInput[]
    createMany?: DetalleCarroComprasCreateManyProductoInputEnvelope
    connect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
  }

  export type DetalleListaDeseosUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<DetalleListaDeseosCreateWithoutProductoInput, DetalleListaDeseosUncheckedCreateWithoutProductoInput> | DetalleListaDeseosCreateWithoutProductoInput[] | DetalleListaDeseosUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetalleListaDeseosCreateOrConnectWithoutProductoInput | DetalleListaDeseosCreateOrConnectWithoutProductoInput[]
    createMany?: DetalleListaDeseosCreateManyProductoInputEnvelope
    connect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
  }

  export type ValoracionUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<ValoracionCreateWithoutProductoInput, ValoracionUncheckedCreateWithoutProductoInput> | ValoracionCreateWithoutProductoInput[] | ValoracionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ValoracionCreateOrConnectWithoutProductoInput | ValoracionCreateOrConnectWithoutProductoInput[]
    createMany?: ValoracionCreateManyProductoInputEnvelope
    connect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type PymeUpdateOneRequiredWithoutProductoNestedInput = {
    create?: XOR<PymeCreateWithoutProductoInput, PymeUncheckedCreateWithoutProductoInput>
    connectOrCreate?: PymeCreateOrConnectWithoutProductoInput
    upsert?: PymeUpsertWithoutProductoInput
    connect?: PymeWhereUniqueInput
    update?: XOR<XOR<PymeUpdateToOneWithWhereWithoutProductoInput, PymeUpdateWithoutProductoInput>, PymeUncheckedUpdateWithoutProductoInput>
  }

  export type CategoriaDeProductoUpdateOneRequiredWithoutProductoNestedInput = {
    create?: XOR<CategoriaDeProductoCreateWithoutProductoInput, CategoriaDeProductoUncheckedCreateWithoutProductoInput>
    connectOrCreate?: CategoriaDeProductoCreateOrConnectWithoutProductoInput
    upsert?: CategoriaDeProductoUpsertWithoutProductoInput
    connect?: CategoriaDeProductoWhereUniqueInput
    update?: XOR<XOR<CategoriaDeProductoUpdateToOneWithWhereWithoutProductoInput, CategoriaDeProductoUpdateWithoutProductoInput>, CategoriaDeProductoUncheckedUpdateWithoutProductoInput>
  }

  export type DetalleCarroComprasUpdateManyWithoutProductoNestedInput = {
    create?: XOR<DetalleCarroComprasCreateWithoutProductoInput, DetalleCarroComprasUncheckedCreateWithoutProductoInput> | DetalleCarroComprasCreateWithoutProductoInput[] | DetalleCarroComprasUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetalleCarroComprasCreateOrConnectWithoutProductoInput | DetalleCarroComprasCreateOrConnectWithoutProductoInput[]
    upsert?: DetalleCarroComprasUpsertWithWhereUniqueWithoutProductoInput | DetalleCarroComprasUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: DetalleCarroComprasCreateManyProductoInputEnvelope
    set?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    disconnect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    delete?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    connect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    update?: DetalleCarroComprasUpdateWithWhereUniqueWithoutProductoInput | DetalleCarroComprasUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: DetalleCarroComprasUpdateManyWithWhereWithoutProductoInput | DetalleCarroComprasUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: DetalleCarroComprasScalarWhereInput | DetalleCarroComprasScalarWhereInput[]
  }

  export type DetalleListaDeseosUpdateManyWithoutProductoNestedInput = {
    create?: XOR<DetalleListaDeseosCreateWithoutProductoInput, DetalleListaDeseosUncheckedCreateWithoutProductoInput> | DetalleListaDeseosCreateWithoutProductoInput[] | DetalleListaDeseosUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetalleListaDeseosCreateOrConnectWithoutProductoInput | DetalleListaDeseosCreateOrConnectWithoutProductoInput[]
    upsert?: DetalleListaDeseosUpsertWithWhereUniqueWithoutProductoInput | DetalleListaDeseosUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: DetalleListaDeseosCreateManyProductoInputEnvelope
    set?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    disconnect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    delete?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    connect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    update?: DetalleListaDeseosUpdateWithWhereUniqueWithoutProductoInput | DetalleListaDeseosUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: DetalleListaDeseosUpdateManyWithWhereWithoutProductoInput | DetalleListaDeseosUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: DetalleListaDeseosScalarWhereInput | DetalleListaDeseosScalarWhereInput[]
  }

  export type ValoracionUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ValoracionCreateWithoutProductoInput, ValoracionUncheckedCreateWithoutProductoInput> | ValoracionCreateWithoutProductoInput[] | ValoracionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ValoracionCreateOrConnectWithoutProductoInput | ValoracionCreateOrConnectWithoutProductoInput[]
    upsert?: ValoracionUpsertWithWhereUniqueWithoutProductoInput | ValoracionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ValoracionCreateManyProductoInputEnvelope
    set?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    disconnect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    delete?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    connect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    update?: ValoracionUpdateWithWhereUniqueWithoutProductoInput | ValoracionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ValoracionUpdateManyWithWhereWithoutProductoInput | ValoracionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ValoracionScalarWhereInput | ValoracionScalarWhereInput[]
  }

  export type DetalleCarroComprasUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<DetalleCarroComprasCreateWithoutProductoInput, DetalleCarroComprasUncheckedCreateWithoutProductoInput> | DetalleCarroComprasCreateWithoutProductoInput[] | DetalleCarroComprasUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetalleCarroComprasCreateOrConnectWithoutProductoInput | DetalleCarroComprasCreateOrConnectWithoutProductoInput[]
    upsert?: DetalleCarroComprasUpsertWithWhereUniqueWithoutProductoInput | DetalleCarroComprasUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: DetalleCarroComprasCreateManyProductoInputEnvelope
    set?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    disconnect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    delete?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    connect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    update?: DetalleCarroComprasUpdateWithWhereUniqueWithoutProductoInput | DetalleCarroComprasUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: DetalleCarroComprasUpdateManyWithWhereWithoutProductoInput | DetalleCarroComprasUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: DetalleCarroComprasScalarWhereInput | DetalleCarroComprasScalarWhereInput[]
  }

  export type DetalleListaDeseosUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<DetalleListaDeseosCreateWithoutProductoInput, DetalleListaDeseosUncheckedCreateWithoutProductoInput> | DetalleListaDeseosCreateWithoutProductoInput[] | DetalleListaDeseosUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: DetalleListaDeseosCreateOrConnectWithoutProductoInput | DetalleListaDeseosCreateOrConnectWithoutProductoInput[]
    upsert?: DetalleListaDeseosUpsertWithWhereUniqueWithoutProductoInput | DetalleListaDeseosUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: DetalleListaDeseosCreateManyProductoInputEnvelope
    set?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    disconnect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    delete?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    connect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    update?: DetalleListaDeseosUpdateWithWhereUniqueWithoutProductoInput | DetalleListaDeseosUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: DetalleListaDeseosUpdateManyWithWhereWithoutProductoInput | DetalleListaDeseosUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: DetalleListaDeseosScalarWhereInput | DetalleListaDeseosScalarWhereInput[]
  }

  export type ValoracionUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ValoracionCreateWithoutProductoInput, ValoracionUncheckedCreateWithoutProductoInput> | ValoracionCreateWithoutProductoInput[] | ValoracionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ValoracionCreateOrConnectWithoutProductoInput | ValoracionCreateOrConnectWithoutProductoInput[]
    upsert?: ValoracionUpsertWithWhereUniqueWithoutProductoInput | ValoracionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ValoracionCreateManyProductoInputEnvelope
    set?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    disconnect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    delete?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    connect?: ValoracionWhereUniqueInput | ValoracionWhereUniqueInput[]
    update?: ValoracionUpdateWithWhereUniqueWithoutProductoInput | ValoracionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ValoracionUpdateManyWithWhereWithoutProductoInput | ValoracionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ValoracionScalarWhereInput | ValoracionScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutCarroDeComprasInput = {
    create?: XOR<UsuarioCreateWithoutCarroDeComprasInput, UsuarioUncheckedCreateWithoutCarroDeComprasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCarroDeComprasInput
    connect?: UsuarioWhereUniqueInput
  }

  export type VentaCreateNestedOneWithoutCarroDeComprasInput = {
    create?: XOR<VentaCreateWithoutCarroDeComprasInput, VentaUncheckedCreateWithoutCarroDeComprasInput>
    connectOrCreate?: VentaCreateOrConnectWithoutCarroDeComprasInput
    connect?: VentaWhereUniqueInput
  }

  export type DetalleCarroComprasCreateNestedManyWithoutCarroDeComprasInput = {
    create?: XOR<DetalleCarroComprasCreateWithoutCarroDeComprasInput, DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput> | DetalleCarroComprasCreateWithoutCarroDeComprasInput[] | DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput[]
    connectOrCreate?: DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput | DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput[]
    createMany?: DetalleCarroComprasCreateManyCarroDeComprasInputEnvelope
    connect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
  }

  export type VentaUncheckedCreateNestedOneWithoutCarroDeComprasInput = {
    create?: XOR<VentaCreateWithoutCarroDeComprasInput, VentaUncheckedCreateWithoutCarroDeComprasInput>
    connectOrCreate?: VentaCreateOrConnectWithoutCarroDeComprasInput
    connect?: VentaWhereUniqueInput
  }

  export type DetalleCarroComprasUncheckedCreateNestedManyWithoutCarroDeComprasInput = {
    create?: XOR<DetalleCarroComprasCreateWithoutCarroDeComprasInput, DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput> | DetalleCarroComprasCreateWithoutCarroDeComprasInput[] | DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput[]
    connectOrCreate?: DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput | DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput[]
    createMany?: DetalleCarroComprasCreateManyCarroDeComprasInputEnvelope
    connect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutCarroDeComprasNestedInput = {
    create?: XOR<UsuarioCreateWithoutCarroDeComprasInput, UsuarioUncheckedCreateWithoutCarroDeComprasInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCarroDeComprasInput
    upsert?: UsuarioUpsertWithoutCarroDeComprasInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCarroDeComprasInput, UsuarioUpdateWithoutCarroDeComprasInput>, UsuarioUncheckedUpdateWithoutCarroDeComprasInput>
  }

  export type VentaUpdateOneWithoutCarroDeComprasNestedInput = {
    create?: XOR<VentaCreateWithoutCarroDeComprasInput, VentaUncheckedCreateWithoutCarroDeComprasInput>
    connectOrCreate?: VentaCreateOrConnectWithoutCarroDeComprasInput
    upsert?: VentaUpsertWithoutCarroDeComprasInput
    disconnect?: VentaWhereInput | boolean
    delete?: VentaWhereInput | boolean
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutCarroDeComprasInput, VentaUpdateWithoutCarroDeComprasInput>, VentaUncheckedUpdateWithoutCarroDeComprasInput>
  }

  export type DetalleCarroComprasUpdateManyWithoutCarroDeComprasNestedInput = {
    create?: XOR<DetalleCarroComprasCreateWithoutCarroDeComprasInput, DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput> | DetalleCarroComprasCreateWithoutCarroDeComprasInput[] | DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput[]
    connectOrCreate?: DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput | DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput[]
    upsert?: DetalleCarroComprasUpsertWithWhereUniqueWithoutCarroDeComprasInput | DetalleCarroComprasUpsertWithWhereUniqueWithoutCarroDeComprasInput[]
    createMany?: DetalleCarroComprasCreateManyCarroDeComprasInputEnvelope
    set?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    disconnect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    delete?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    connect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    update?: DetalleCarroComprasUpdateWithWhereUniqueWithoutCarroDeComprasInput | DetalleCarroComprasUpdateWithWhereUniqueWithoutCarroDeComprasInput[]
    updateMany?: DetalleCarroComprasUpdateManyWithWhereWithoutCarroDeComprasInput | DetalleCarroComprasUpdateManyWithWhereWithoutCarroDeComprasInput[]
    deleteMany?: DetalleCarroComprasScalarWhereInput | DetalleCarroComprasScalarWhereInput[]
  }

  export type VentaUncheckedUpdateOneWithoutCarroDeComprasNestedInput = {
    create?: XOR<VentaCreateWithoutCarroDeComprasInput, VentaUncheckedCreateWithoutCarroDeComprasInput>
    connectOrCreate?: VentaCreateOrConnectWithoutCarroDeComprasInput
    upsert?: VentaUpsertWithoutCarroDeComprasInput
    disconnect?: VentaWhereInput | boolean
    delete?: VentaWhereInput | boolean
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutCarroDeComprasInput, VentaUpdateWithoutCarroDeComprasInput>, VentaUncheckedUpdateWithoutCarroDeComprasInput>
  }

  export type DetalleCarroComprasUncheckedUpdateManyWithoutCarroDeComprasNestedInput = {
    create?: XOR<DetalleCarroComprasCreateWithoutCarroDeComprasInput, DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput> | DetalleCarroComprasCreateWithoutCarroDeComprasInput[] | DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput[]
    connectOrCreate?: DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput | DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput[]
    upsert?: DetalleCarroComprasUpsertWithWhereUniqueWithoutCarroDeComprasInput | DetalleCarroComprasUpsertWithWhereUniqueWithoutCarroDeComprasInput[]
    createMany?: DetalleCarroComprasCreateManyCarroDeComprasInputEnvelope
    set?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    disconnect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    delete?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    connect?: DetalleCarroComprasWhereUniqueInput | DetalleCarroComprasWhereUniqueInput[]
    update?: DetalleCarroComprasUpdateWithWhereUniqueWithoutCarroDeComprasInput | DetalleCarroComprasUpdateWithWhereUniqueWithoutCarroDeComprasInput[]
    updateMany?: DetalleCarroComprasUpdateManyWithWhereWithoutCarroDeComprasInput | DetalleCarroComprasUpdateManyWithWhereWithoutCarroDeComprasInput[]
    deleteMany?: DetalleCarroComprasScalarWhereInput | DetalleCarroComprasScalarWhereInput[]
  }

  export type ProductoCreateNestedOneWithoutDetalleCarroComprasInput = {
    create?: XOR<ProductoCreateWithoutDetalleCarroComprasInput, ProductoUncheckedCreateWithoutDetalleCarroComprasInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDetalleCarroComprasInput
    connect?: ProductoWhereUniqueInput
  }

  export type CarroDeComprasCreateNestedOneWithoutDetalleCarroComprasInput = {
    create?: XOR<CarroDeComprasCreateWithoutDetalleCarroComprasInput, CarroDeComprasUncheckedCreateWithoutDetalleCarroComprasInput>
    connectOrCreate?: CarroDeComprasCreateOrConnectWithoutDetalleCarroComprasInput
    connect?: CarroDeComprasWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutDetalleCarroComprasNestedInput = {
    create?: XOR<ProductoCreateWithoutDetalleCarroComprasInput, ProductoUncheckedCreateWithoutDetalleCarroComprasInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDetalleCarroComprasInput
    upsert?: ProductoUpsertWithoutDetalleCarroComprasInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutDetalleCarroComprasInput, ProductoUpdateWithoutDetalleCarroComprasInput>, ProductoUncheckedUpdateWithoutDetalleCarroComprasInput>
  }

  export type CarroDeComprasUpdateOneRequiredWithoutDetalleCarroComprasNestedInput = {
    create?: XOR<CarroDeComprasCreateWithoutDetalleCarroComprasInput, CarroDeComprasUncheckedCreateWithoutDetalleCarroComprasInput>
    connectOrCreate?: CarroDeComprasCreateOrConnectWithoutDetalleCarroComprasInput
    upsert?: CarroDeComprasUpsertWithoutDetalleCarroComprasInput
    connect?: CarroDeComprasWhereUniqueInput
    update?: XOR<XOR<CarroDeComprasUpdateToOneWithWhereWithoutDetalleCarroComprasInput, CarroDeComprasUpdateWithoutDetalleCarroComprasInput>, CarroDeComprasUncheckedUpdateWithoutDetalleCarroComprasInput>
  }

  export type UsuarioCreateNestedOneWithoutListaDeDeseosInput = {
    create?: XOR<UsuarioCreateWithoutListaDeDeseosInput, UsuarioUncheckedCreateWithoutListaDeDeseosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutListaDeDeseosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type DetalleListaDeseosCreateNestedManyWithoutListaDeDeseosInput = {
    create?: XOR<DetalleListaDeseosCreateWithoutListaDeDeseosInput, DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput> | DetalleListaDeseosCreateWithoutListaDeDeseosInput[] | DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput[]
    connectOrCreate?: DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput | DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput[]
    createMany?: DetalleListaDeseosCreateManyListaDeDeseosInputEnvelope
    connect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
  }

  export type DetalleListaDeseosUncheckedCreateNestedManyWithoutListaDeDeseosInput = {
    create?: XOR<DetalleListaDeseosCreateWithoutListaDeDeseosInput, DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput> | DetalleListaDeseosCreateWithoutListaDeDeseosInput[] | DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput[]
    connectOrCreate?: DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput | DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput[]
    createMany?: DetalleListaDeseosCreateManyListaDeDeseosInputEnvelope
    connect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutListaDeDeseosNestedInput = {
    create?: XOR<UsuarioCreateWithoutListaDeDeseosInput, UsuarioUncheckedCreateWithoutListaDeDeseosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutListaDeDeseosInput
    upsert?: UsuarioUpsertWithoutListaDeDeseosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutListaDeDeseosInput, UsuarioUpdateWithoutListaDeDeseosInput>, UsuarioUncheckedUpdateWithoutListaDeDeseosInput>
  }

  export type DetalleListaDeseosUpdateManyWithoutListaDeDeseosNestedInput = {
    create?: XOR<DetalleListaDeseosCreateWithoutListaDeDeseosInput, DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput> | DetalleListaDeseosCreateWithoutListaDeDeseosInput[] | DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput[]
    connectOrCreate?: DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput | DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput[]
    upsert?: DetalleListaDeseosUpsertWithWhereUniqueWithoutListaDeDeseosInput | DetalleListaDeseosUpsertWithWhereUniqueWithoutListaDeDeseosInput[]
    createMany?: DetalleListaDeseosCreateManyListaDeDeseosInputEnvelope
    set?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    disconnect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    delete?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    connect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    update?: DetalleListaDeseosUpdateWithWhereUniqueWithoutListaDeDeseosInput | DetalleListaDeseosUpdateWithWhereUniqueWithoutListaDeDeseosInput[]
    updateMany?: DetalleListaDeseosUpdateManyWithWhereWithoutListaDeDeseosInput | DetalleListaDeseosUpdateManyWithWhereWithoutListaDeDeseosInput[]
    deleteMany?: DetalleListaDeseosScalarWhereInput | DetalleListaDeseosScalarWhereInput[]
  }

  export type DetalleListaDeseosUncheckedUpdateManyWithoutListaDeDeseosNestedInput = {
    create?: XOR<DetalleListaDeseosCreateWithoutListaDeDeseosInput, DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput> | DetalleListaDeseosCreateWithoutListaDeDeseosInput[] | DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput[]
    connectOrCreate?: DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput | DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput[]
    upsert?: DetalleListaDeseosUpsertWithWhereUniqueWithoutListaDeDeseosInput | DetalleListaDeseosUpsertWithWhereUniqueWithoutListaDeDeseosInput[]
    createMany?: DetalleListaDeseosCreateManyListaDeDeseosInputEnvelope
    set?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    disconnect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    delete?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    connect?: DetalleListaDeseosWhereUniqueInput | DetalleListaDeseosWhereUniqueInput[]
    update?: DetalleListaDeseosUpdateWithWhereUniqueWithoutListaDeDeseosInput | DetalleListaDeseosUpdateWithWhereUniqueWithoutListaDeDeseosInput[]
    updateMany?: DetalleListaDeseosUpdateManyWithWhereWithoutListaDeDeseosInput | DetalleListaDeseosUpdateManyWithWhereWithoutListaDeDeseosInput[]
    deleteMany?: DetalleListaDeseosScalarWhereInput | DetalleListaDeseosScalarWhereInput[]
  }

  export type ListaDeDeseosCreateNestedOneWithoutDetalleListaDeseosInput = {
    create?: XOR<ListaDeDeseosCreateWithoutDetalleListaDeseosInput, ListaDeDeseosUncheckedCreateWithoutDetalleListaDeseosInput>
    connectOrCreate?: ListaDeDeseosCreateOrConnectWithoutDetalleListaDeseosInput
    connect?: ListaDeDeseosWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutDetalleListaDeseosInput = {
    create?: XOR<ProductoCreateWithoutDetalleListaDeseosInput, ProductoUncheckedCreateWithoutDetalleListaDeseosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDetalleListaDeseosInput
    connect?: ProductoWhereUniqueInput
  }

  export type ListaDeDeseosUpdateOneRequiredWithoutDetalleListaDeseosNestedInput = {
    create?: XOR<ListaDeDeseosCreateWithoutDetalleListaDeseosInput, ListaDeDeseosUncheckedCreateWithoutDetalleListaDeseosInput>
    connectOrCreate?: ListaDeDeseosCreateOrConnectWithoutDetalleListaDeseosInput
    upsert?: ListaDeDeseosUpsertWithoutDetalleListaDeseosInput
    connect?: ListaDeDeseosWhereUniqueInput
    update?: XOR<XOR<ListaDeDeseosUpdateToOneWithWhereWithoutDetalleListaDeseosInput, ListaDeDeseosUpdateWithoutDetalleListaDeseosInput>, ListaDeDeseosUncheckedUpdateWithoutDetalleListaDeseosInput>
  }

  export type ProductoUpdateOneRequiredWithoutDetalleListaDeseosNestedInput = {
    create?: XOR<ProductoCreateWithoutDetalleListaDeseosInput, ProductoUncheckedCreateWithoutDetalleListaDeseosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDetalleListaDeseosInput
    upsert?: ProductoUpsertWithoutDetalleListaDeseosInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutDetalleListaDeseosInput, ProductoUpdateWithoutDetalleListaDeseosInput>, ProductoUncheckedUpdateWithoutDetalleListaDeseosInput>
  }

  export type UsuarioCreateNestedOneWithoutValoracionInput = {
    create?: XOR<UsuarioCreateWithoutValoracionInput, UsuarioUncheckedCreateWithoutValoracionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutValoracionInput
    connect?: UsuarioWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutValoracionInput = {
    create?: XOR<ProductoCreateWithoutValoracionInput, ProductoUncheckedCreateWithoutValoracionInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutValoracionInput
    connect?: ProductoWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutValoracionNestedInput = {
    create?: XOR<UsuarioCreateWithoutValoracionInput, UsuarioUncheckedCreateWithoutValoracionInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutValoracionInput
    upsert?: UsuarioUpsertWithoutValoracionInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutValoracionInput, UsuarioUpdateWithoutValoracionInput>, UsuarioUncheckedUpdateWithoutValoracionInput>
  }

  export type ProductoUpdateOneRequiredWithoutValoracionNestedInput = {
    create?: XOR<ProductoCreateWithoutValoracionInput, ProductoUncheckedCreateWithoutValoracionInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutValoracionInput
    upsert?: ProductoUpsertWithoutValoracionInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutValoracionInput, ProductoUpdateWithoutValoracionInput>, ProductoUncheckedUpdateWithoutValoracionInput>
  }

  export type VentaCreateNestedManyWithoutMetodoPagoInput = {
    create?: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput> | VentaCreateWithoutMetodoPagoInput[] | VentaUncheckedCreateWithoutMetodoPagoInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutMetodoPagoInput | VentaCreateOrConnectWithoutMetodoPagoInput[]
    createMany?: VentaCreateManyMetodoPagoInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type VentaUncheckedCreateNestedManyWithoutMetodoPagoInput = {
    create?: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput> | VentaCreateWithoutMetodoPagoInput[] | VentaUncheckedCreateWithoutMetodoPagoInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutMetodoPagoInput | VentaCreateOrConnectWithoutMetodoPagoInput[]
    createMany?: VentaCreateManyMetodoPagoInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type VentaUpdateManyWithoutMetodoPagoNestedInput = {
    create?: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput> | VentaCreateWithoutMetodoPagoInput[] | VentaUncheckedCreateWithoutMetodoPagoInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutMetodoPagoInput | VentaCreateOrConnectWithoutMetodoPagoInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutMetodoPagoInput | VentaUpsertWithWhereUniqueWithoutMetodoPagoInput[]
    createMany?: VentaCreateManyMetodoPagoInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutMetodoPagoInput | VentaUpdateWithWhereUniqueWithoutMetodoPagoInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutMetodoPagoInput | VentaUpdateManyWithWhereWithoutMetodoPagoInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type VentaUncheckedUpdateManyWithoutMetodoPagoNestedInput = {
    create?: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput> | VentaCreateWithoutMetodoPagoInput[] | VentaUncheckedCreateWithoutMetodoPagoInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutMetodoPagoInput | VentaCreateOrConnectWithoutMetodoPagoInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutMetodoPagoInput | VentaUpsertWithWhereUniqueWithoutMetodoPagoInput[]
    createMany?: VentaCreateManyMetodoPagoInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutMetodoPagoInput | VentaUpdateWithWhereUniqueWithoutMetodoPagoInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutMetodoPagoInput | VentaUpdateManyWithWhereWithoutMetodoPagoInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type CarroDeComprasCreateNestedOneWithoutVentaInput = {
    create?: XOR<CarroDeComprasCreateWithoutVentaInput, CarroDeComprasUncheckedCreateWithoutVentaInput>
    connectOrCreate?: CarroDeComprasCreateOrConnectWithoutVentaInput
    connect?: CarroDeComprasWhereUniqueInput
  }

  export type MetodoPagoCreateNestedOneWithoutVentaInput = {
    create?: XOR<MetodoPagoCreateWithoutVentaInput, MetodoPagoUncheckedCreateWithoutVentaInput>
    connectOrCreate?: MetodoPagoCreateOrConnectWithoutVentaInput
    connect?: MetodoPagoWhereUniqueInput
  }

  export type CarroDeComprasUpdateOneRequiredWithoutVentaNestedInput = {
    create?: XOR<CarroDeComprasCreateWithoutVentaInput, CarroDeComprasUncheckedCreateWithoutVentaInput>
    connectOrCreate?: CarroDeComprasCreateOrConnectWithoutVentaInput
    upsert?: CarroDeComprasUpsertWithoutVentaInput
    connect?: CarroDeComprasWhereUniqueInput
    update?: XOR<XOR<CarroDeComprasUpdateToOneWithWhereWithoutVentaInput, CarroDeComprasUpdateWithoutVentaInput>, CarroDeComprasUncheckedUpdateWithoutVentaInput>
  }

  export type MetodoPagoUpdateOneRequiredWithoutVentaNestedInput = {
    create?: XOR<MetodoPagoCreateWithoutVentaInput, MetodoPagoUncheckedCreateWithoutVentaInput>
    connectOrCreate?: MetodoPagoCreateOrConnectWithoutVentaInput
    upsert?: MetodoPagoUpsertWithoutVentaInput
    connect?: MetodoPagoWhereUniqueInput
    update?: XOR<XOR<MetodoPagoUpdateToOneWithWhereWithoutVentaInput, MetodoPagoUpdateWithoutVentaInput>, MetodoPagoUncheckedUpdateWithoutVentaInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type CiudadCreateWithoutRegionInput = {
    nombre: string
    Comuna?: ComunaCreateNestedManyWithoutCiudadInput
  }

  export type CiudadUncheckedCreateWithoutRegionInput = {
    id_ciudad?: number
    nombre: string
    Comuna?: ComunaUncheckedCreateNestedManyWithoutCiudadInput
  }

  export type CiudadCreateOrConnectWithoutRegionInput = {
    where: CiudadWhereUniqueInput
    create: XOR<CiudadCreateWithoutRegionInput, CiudadUncheckedCreateWithoutRegionInput>
  }

  export type CiudadCreateManyRegionInputEnvelope = {
    data: CiudadCreateManyRegionInput | CiudadCreateManyRegionInput[]
    skipDuplicates?: boolean
  }

  export type CiudadUpsertWithWhereUniqueWithoutRegionInput = {
    where: CiudadWhereUniqueInput
    update: XOR<CiudadUpdateWithoutRegionInput, CiudadUncheckedUpdateWithoutRegionInput>
    create: XOR<CiudadCreateWithoutRegionInput, CiudadUncheckedCreateWithoutRegionInput>
  }

  export type CiudadUpdateWithWhereUniqueWithoutRegionInput = {
    where: CiudadWhereUniqueInput
    data: XOR<CiudadUpdateWithoutRegionInput, CiudadUncheckedUpdateWithoutRegionInput>
  }

  export type CiudadUpdateManyWithWhereWithoutRegionInput = {
    where: CiudadScalarWhereInput
    data: XOR<CiudadUpdateManyMutationInput, CiudadUncheckedUpdateManyWithoutRegionInput>
  }

  export type CiudadScalarWhereInput = {
    AND?: CiudadScalarWhereInput | CiudadScalarWhereInput[]
    OR?: CiudadScalarWhereInput[]
    NOT?: CiudadScalarWhereInput | CiudadScalarWhereInput[]
    id_ciudad?: IntFilter<"Ciudad"> | number
    nombre?: StringFilter<"Ciudad"> | string
    id_region?: IntFilter<"Ciudad"> | number
  }

  export type RegionCreateWithoutCiudadInput = {
    nombre: string
  }

  export type RegionUncheckedCreateWithoutCiudadInput = {
    id_region?: number
    nombre: string
  }

  export type RegionCreateOrConnectWithoutCiudadInput = {
    where: RegionWhereUniqueInput
    create: XOR<RegionCreateWithoutCiudadInput, RegionUncheckedCreateWithoutCiudadInput>
  }

  export type ComunaCreateWithoutCiudadInput = {
    nombre: string
    Direccion?: DireccionCreateNestedManyWithoutComunaInput
  }

  export type ComunaUncheckedCreateWithoutCiudadInput = {
    id_comuna?: number
    nombre: string
    Direccion?: DireccionUncheckedCreateNestedManyWithoutComunaInput
  }

  export type ComunaCreateOrConnectWithoutCiudadInput = {
    where: ComunaWhereUniqueInput
    create: XOR<ComunaCreateWithoutCiudadInput, ComunaUncheckedCreateWithoutCiudadInput>
  }

  export type ComunaCreateManyCiudadInputEnvelope = {
    data: ComunaCreateManyCiudadInput | ComunaCreateManyCiudadInput[]
    skipDuplicates?: boolean
  }

  export type RegionUpsertWithoutCiudadInput = {
    update: XOR<RegionUpdateWithoutCiudadInput, RegionUncheckedUpdateWithoutCiudadInput>
    create: XOR<RegionCreateWithoutCiudadInput, RegionUncheckedCreateWithoutCiudadInput>
    where?: RegionWhereInput
  }

  export type RegionUpdateToOneWithWhereWithoutCiudadInput = {
    where?: RegionWhereInput
    data: XOR<RegionUpdateWithoutCiudadInput, RegionUncheckedUpdateWithoutCiudadInput>
  }

  export type RegionUpdateWithoutCiudadInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type RegionUncheckedUpdateWithoutCiudadInput = {
    id_region?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ComunaUpsertWithWhereUniqueWithoutCiudadInput = {
    where: ComunaWhereUniqueInput
    update: XOR<ComunaUpdateWithoutCiudadInput, ComunaUncheckedUpdateWithoutCiudadInput>
    create: XOR<ComunaCreateWithoutCiudadInput, ComunaUncheckedCreateWithoutCiudadInput>
  }

  export type ComunaUpdateWithWhereUniqueWithoutCiudadInput = {
    where: ComunaWhereUniqueInput
    data: XOR<ComunaUpdateWithoutCiudadInput, ComunaUncheckedUpdateWithoutCiudadInput>
  }

  export type ComunaUpdateManyWithWhereWithoutCiudadInput = {
    where: ComunaScalarWhereInput
    data: XOR<ComunaUpdateManyMutationInput, ComunaUncheckedUpdateManyWithoutCiudadInput>
  }

  export type ComunaScalarWhereInput = {
    AND?: ComunaScalarWhereInput | ComunaScalarWhereInput[]
    OR?: ComunaScalarWhereInput[]
    NOT?: ComunaScalarWhereInput | ComunaScalarWhereInput[]
    id_comuna?: IntFilter<"Comuna"> | number
    nombre?: StringFilter<"Comuna"> | string
    id_ciudad?: IntFilter<"Comuna"> | number
  }

  export type CiudadCreateWithoutComunaInput = {
    nombre: string
    Region: RegionCreateNestedOneWithoutCiudadInput
  }

  export type CiudadUncheckedCreateWithoutComunaInput = {
    id_ciudad?: number
    nombre: string
    id_region: number
  }

  export type CiudadCreateOrConnectWithoutComunaInput = {
    where: CiudadWhereUniqueInput
    create: XOR<CiudadCreateWithoutComunaInput, CiudadUncheckedCreateWithoutComunaInput>
  }

  export type DireccionCreateWithoutComunaInput = {
    calle: string
    numero: string
    Usuario?: UsuarioCreateNestedOneWithoutDireccionInput
    Pyme?: PymeCreateNestedOneWithoutDireccionInput
  }

  export type DireccionUncheckedCreateWithoutComunaInput = {
    id_direccion?: number
    calle: string
    numero: string
    Usuario?: UsuarioUncheckedCreateNestedOneWithoutDireccionInput
    Pyme?: PymeUncheckedCreateNestedOneWithoutDireccionInput
  }

  export type DireccionCreateOrConnectWithoutComunaInput = {
    where: DireccionWhereUniqueInput
    create: XOR<DireccionCreateWithoutComunaInput, DireccionUncheckedCreateWithoutComunaInput>
  }

  export type DireccionCreateManyComunaInputEnvelope = {
    data: DireccionCreateManyComunaInput | DireccionCreateManyComunaInput[]
    skipDuplicates?: boolean
  }

  export type CiudadUpsertWithoutComunaInput = {
    update: XOR<CiudadUpdateWithoutComunaInput, CiudadUncheckedUpdateWithoutComunaInput>
    create: XOR<CiudadCreateWithoutComunaInput, CiudadUncheckedCreateWithoutComunaInput>
    where?: CiudadWhereInput
  }

  export type CiudadUpdateToOneWithWhereWithoutComunaInput = {
    where?: CiudadWhereInput
    data: XOR<CiudadUpdateWithoutComunaInput, CiudadUncheckedUpdateWithoutComunaInput>
  }

  export type CiudadUpdateWithoutComunaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    Region?: RegionUpdateOneRequiredWithoutCiudadNestedInput
  }

  export type CiudadUncheckedUpdateWithoutComunaInput = {
    id_ciudad?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_region?: IntFieldUpdateOperationsInput | number
  }

  export type DireccionUpsertWithWhereUniqueWithoutComunaInput = {
    where: DireccionWhereUniqueInput
    update: XOR<DireccionUpdateWithoutComunaInput, DireccionUncheckedUpdateWithoutComunaInput>
    create: XOR<DireccionCreateWithoutComunaInput, DireccionUncheckedCreateWithoutComunaInput>
  }

  export type DireccionUpdateWithWhereUniqueWithoutComunaInput = {
    where: DireccionWhereUniqueInput
    data: XOR<DireccionUpdateWithoutComunaInput, DireccionUncheckedUpdateWithoutComunaInput>
  }

  export type DireccionUpdateManyWithWhereWithoutComunaInput = {
    where: DireccionScalarWhereInput
    data: XOR<DireccionUpdateManyMutationInput, DireccionUncheckedUpdateManyWithoutComunaInput>
  }

  export type DireccionScalarWhereInput = {
    AND?: DireccionScalarWhereInput | DireccionScalarWhereInput[]
    OR?: DireccionScalarWhereInput[]
    NOT?: DireccionScalarWhereInput | DireccionScalarWhereInput[]
    id_direccion?: IntFilter<"Direccion"> | number
    calle?: StringFilter<"Direccion"> | string
    numero?: StringFilter<"Direccion"> | string
    id_comuna?: IntFilter<"Direccion"> | number
  }

  export type ComunaCreateWithoutDireccionInput = {
    nombre: string
    Ciudad: CiudadCreateNestedOneWithoutComunaInput
  }

  export type ComunaUncheckedCreateWithoutDireccionInput = {
    id_comuna?: number
    nombre: string
    id_ciudad: number
  }

  export type ComunaCreateOrConnectWithoutDireccionInput = {
    where: ComunaWhereUniqueInput
    create: XOR<ComunaCreateWithoutDireccionInput, ComunaUncheckedCreateWithoutDireccionInput>
  }

  export type UsuarioCreateWithoutDireccionInput = {
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    Rol: RolCreateNestedOneWithoutUsuarioInput
    Pyme?: PymeCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutDireccionInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_rol: number
    Pyme?: PymeUncheckedCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasUncheckedCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosUncheckedCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutDireccionInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutDireccionInput, UsuarioUncheckedCreateWithoutDireccionInput>
  }

  export type PymeCreateWithoutDireccionInput = {
    nombre: string
    rut: string
    descripcion?: string | null
    Usuario: UsuarioCreateNestedOneWithoutPymeInput
    Producto?: ProductoCreateNestedManyWithoutPymeInput
  }

  export type PymeUncheckedCreateWithoutDireccionInput = {
    id_pyme?: number
    nombre: string
    rut: string
    descripcion?: string | null
    id_usuario: number
    Producto?: ProductoUncheckedCreateNestedManyWithoutPymeInput
  }

  export type PymeCreateOrConnectWithoutDireccionInput = {
    where: PymeWhereUniqueInput
    create: XOR<PymeCreateWithoutDireccionInput, PymeUncheckedCreateWithoutDireccionInput>
  }

  export type ComunaUpsertWithoutDireccionInput = {
    update: XOR<ComunaUpdateWithoutDireccionInput, ComunaUncheckedUpdateWithoutDireccionInput>
    create: XOR<ComunaCreateWithoutDireccionInput, ComunaUncheckedCreateWithoutDireccionInput>
    where?: ComunaWhereInput
  }

  export type ComunaUpdateToOneWithWhereWithoutDireccionInput = {
    where?: ComunaWhereInput
    data: XOR<ComunaUpdateWithoutDireccionInput, ComunaUncheckedUpdateWithoutDireccionInput>
  }

  export type ComunaUpdateWithoutDireccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    Ciudad?: CiudadUpdateOneRequiredWithoutComunaNestedInput
  }

  export type ComunaUncheckedUpdateWithoutDireccionInput = {
    id_comuna?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    id_ciudad?: IntFieldUpdateOperationsInput | number
  }

  export type UsuarioUpsertWithoutDireccionInput = {
    update: XOR<UsuarioUpdateWithoutDireccionInput, UsuarioUncheckedUpdateWithoutDireccionInput>
    create: XOR<UsuarioCreateWithoutDireccionInput, UsuarioUncheckedCreateWithoutDireccionInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutDireccionInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutDireccionInput, UsuarioUncheckedUpdateWithoutDireccionInput>
  }

  export type UsuarioUpdateWithoutDireccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    Rol?: RolUpdateOneRequiredWithoutUsuarioNestedInput
    Pyme?: PymeUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutDireccionInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_rol?: IntFieldUpdateOperationsInput | number
    Pyme?: PymeUncheckedUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUncheckedUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUncheckedUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type PymeUpsertWithoutDireccionInput = {
    update: XOR<PymeUpdateWithoutDireccionInput, PymeUncheckedUpdateWithoutDireccionInput>
    create: XOR<PymeCreateWithoutDireccionInput, PymeUncheckedCreateWithoutDireccionInput>
    where?: PymeWhereInput
  }

  export type PymeUpdateToOneWithWhereWithoutDireccionInput = {
    where?: PymeWhereInput
    data: XOR<PymeUpdateWithoutDireccionInput, PymeUncheckedUpdateWithoutDireccionInput>
  }

  export type PymeUpdateWithoutDireccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuarioUpdateOneRequiredWithoutPymeNestedInput
    Producto?: ProductoUpdateManyWithoutPymeNestedInput
  }

  export type PymeUncheckedUpdateWithoutDireccionInput = {
    id_pyme?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    id_usuario?: IntFieldUpdateOperationsInput | number
    Producto?: ProductoUncheckedUpdateManyWithoutPymeNestedInput
  }

  export type UsuarioCreateWithoutRolInput = {
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    Direccion?: DireccionCreateNestedOneWithoutUsuarioInput
    Pyme?: PymeCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutRolInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_direccion?: number | null
    Pyme?: PymeUncheckedCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasUncheckedCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosUncheckedCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput>
  }

  export type UsuarioCreateManyRolInputEnvelope = {
    data: UsuarioCreateManyRolInput | UsuarioCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type PermisoCreateWithoutRolInput = {
    nombre: string
    descripcion?: string | null
  }

  export type PermisoUncheckedCreateWithoutRolInput = {
    id_permiso?: number
    nombre: string
    descripcion?: string | null
  }

  export type PermisoCreateOrConnectWithoutRolInput = {
    where: PermisoWhereUniqueInput
    create: XOR<PermisoCreateWithoutRolInput, PermisoUncheckedCreateWithoutRolInput>
  }

  export type PermisoCreateManyRolInputEnvelope = {
    data: PermisoCreateManyRolInput | PermisoCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithWhereUniqueWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    update: XOR<UsuarioUpdateWithoutRolInput, UsuarioUncheckedUpdateWithoutRolInput>
    create: XOR<UsuarioCreateWithoutRolInput, UsuarioUncheckedCreateWithoutRolInput>
  }

  export type UsuarioUpdateWithWhereUniqueWithoutRolInput = {
    where: UsuarioWhereUniqueInput
    data: XOR<UsuarioUpdateWithoutRolInput, UsuarioUncheckedUpdateWithoutRolInput>
  }

  export type UsuarioUpdateManyWithWhereWithoutRolInput = {
    where: UsuarioScalarWhereInput
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyWithoutRolInput>
  }

  export type UsuarioScalarWhereInput = {
    AND?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    OR?: UsuarioScalarWhereInput[]
    NOT?: UsuarioScalarWhereInput | UsuarioScalarWhereInput[]
    id_usuario?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    password?: StringFilter<"Usuario"> | string
    fecha_registro?: DateTimeFilter<"Usuario"> | Date | string
    ultimo_login?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    esta_activo?: BoolFilter<"Usuario"> | boolean
    id_direccion?: IntNullableFilter<"Usuario"> | number | null
    id_rol?: IntFilter<"Usuario"> | number
  }

  export type PermisoUpsertWithWhereUniqueWithoutRolInput = {
    where: PermisoWhereUniqueInput
    update: XOR<PermisoUpdateWithoutRolInput, PermisoUncheckedUpdateWithoutRolInput>
    create: XOR<PermisoCreateWithoutRolInput, PermisoUncheckedCreateWithoutRolInput>
  }

  export type PermisoUpdateWithWhereUniqueWithoutRolInput = {
    where: PermisoWhereUniqueInput
    data: XOR<PermisoUpdateWithoutRolInput, PermisoUncheckedUpdateWithoutRolInput>
  }

  export type PermisoUpdateManyWithWhereWithoutRolInput = {
    where: PermisoScalarWhereInput
    data: XOR<PermisoUpdateManyMutationInput, PermisoUncheckedUpdateManyWithoutRolInput>
  }

  export type PermisoScalarWhereInput = {
    AND?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
    OR?: PermisoScalarWhereInput[]
    NOT?: PermisoScalarWhereInput | PermisoScalarWhereInput[]
    id_permiso?: IntFilter<"Permiso"> | number
    nombre?: StringFilter<"Permiso"> | string
    descripcion?: StringNullableFilter<"Permiso"> | string | null
    id_rol?: IntNullableFilter<"Permiso"> | number | null
  }

  export type DireccionCreateWithoutUsuarioInput = {
    calle: string
    numero: string
    Comuna: ComunaCreateNestedOneWithoutDireccionInput
    Pyme?: PymeCreateNestedOneWithoutDireccionInput
  }

  export type DireccionUncheckedCreateWithoutUsuarioInput = {
    id_direccion?: number
    calle: string
    numero: string
    id_comuna: number
    Pyme?: PymeUncheckedCreateNestedOneWithoutDireccionInput
  }

  export type DireccionCreateOrConnectWithoutUsuarioInput = {
    where: DireccionWhereUniqueInput
    create: XOR<DireccionCreateWithoutUsuarioInput, DireccionUncheckedCreateWithoutUsuarioInput>
  }

  export type RolCreateWithoutUsuarioInput = {
    nombre: string
    descripcion?: string | null
    Permiso?: PermisoCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateWithoutUsuarioInput = {
    id_rol?: number
    nombre: string
    descripcion?: string | null
    Permiso?: PermisoUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolCreateOrConnectWithoutUsuarioInput = {
    where: RolWhereUniqueInput
    create: XOR<RolCreateWithoutUsuarioInput, RolUncheckedCreateWithoutUsuarioInput>
  }

  export type PymeCreateWithoutUsuarioInput = {
    nombre: string
    rut: string
    descripcion?: string | null
    Direccion: DireccionCreateNestedOneWithoutPymeInput
    Producto?: ProductoCreateNestedManyWithoutPymeInput
  }

  export type PymeUncheckedCreateWithoutUsuarioInput = {
    id_pyme?: number
    nombre: string
    rut: string
    descripcion?: string | null
    id_direccion: number
    Producto?: ProductoUncheckedCreateNestedManyWithoutPymeInput
  }

  export type PymeCreateOrConnectWithoutUsuarioInput = {
    where: PymeWhereUniqueInput
    create: XOR<PymeCreateWithoutUsuarioInput, PymeUncheckedCreateWithoutUsuarioInput>
  }

  export type CarroDeComprasCreateWithoutUsuarioInput = {
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    Venta?: VentaCreateNestedOneWithoutCarroDeComprasInput
    DetalleCarroCompras?: DetalleCarroComprasCreateNestedManyWithoutCarroDeComprasInput
  }

  export type CarroDeComprasUncheckedCreateWithoutUsuarioInput = {
    id_carro_compras?: number
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    Venta?: VentaUncheckedCreateNestedOneWithoutCarroDeComprasInput
    DetalleCarroCompras?: DetalleCarroComprasUncheckedCreateNestedManyWithoutCarroDeComprasInput
  }

  export type CarroDeComprasCreateOrConnectWithoutUsuarioInput = {
    where: CarroDeComprasWhereUniqueInput
    create: XOR<CarroDeComprasCreateWithoutUsuarioInput, CarroDeComprasUncheckedCreateWithoutUsuarioInput>
  }

  export type CarroDeComprasCreateManyUsuarioInputEnvelope = {
    data: CarroDeComprasCreateManyUsuarioInput | CarroDeComprasCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ListaDeDeseosCreateWithoutUsuarioInput = {
    fecha_creacion?: Date | string
    DetalleListaDeseos?: DetalleListaDeseosCreateNestedManyWithoutListaDeDeseosInput
  }

  export type ListaDeDeseosUncheckedCreateWithoutUsuarioInput = {
    id_lista_deseo?: number
    fecha_creacion?: Date | string
    DetalleListaDeseos?: DetalleListaDeseosUncheckedCreateNestedManyWithoutListaDeDeseosInput
  }

  export type ListaDeDeseosCreateOrConnectWithoutUsuarioInput = {
    where: ListaDeDeseosWhereUniqueInput
    create: XOR<ListaDeDeseosCreateWithoutUsuarioInput, ListaDeDeseosUncheckedCreateWithoutUsuarioInput>
  }

  export type ValoracionCreateWithoutUsuarioInput = {
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    Producto: ProductoCreateNestedOneWithoutValoracionInput
  }

  export type ValoracionUncheckedCreateWithoutUsuarioInput = {
    id_valoracion?: number
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    id_producto: number
  }

  export type ValoracionCreateOrConnectWithoutUsuarioInput = {
    where: ValoracionWhereUniqueInput
    create: XOR<ValoracionCreateWithoutUsuarioInput, ValoracionUncheckedCreateWithoutUsuarioInput>
  }

  export type ValoracionCreateManyUsuarioInputEnvelope = {
    data: ValoracionCreateManyUsuarioInput | ValoracionCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type DireccionUpsertWithoutUsuarioInput = {
    update: XOR<DireccionUpdateWithoutUsuarioInput, DireccionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<DireccionCreateWithoutUsuarioInput, DireccionUncheckedCreateWithoutUsuarioInput>
    where?: DireccionWhereInput
  }

  export type DireccionUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: DireccionWhereInput
    data: XOR<DireccionUpdateWithoutUsuarioInput, DireccionUncheckedUpdateWithoutUsuarioInput>
  }

  export type DireccionUpdateWithoutUsuarioInput = {
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    Comuna?: ComunaUpdateOneRequiredWithoutDireccionNestedInput
    Pyme?: PymeUpdateOneWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateWithoutUsuarioInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    id_comuna?: IntFieldUpdateOperationsInput | number
    Pyme?: PymeUncheckedUpdateOneWithoutDireccionNestedInput
  }

  export type RolUpsertWithoutUsuarioInput = {
    update: XOR<RolUpdateWithoutUsuarioInput, RolUncheckedUpdateWithoutUsuarioInput>
    create: XOR<RolCreateWithoutUsuarioInput, RolUncheckedCreateWithoutUsuarioInput>
    where?: RolWhereInput
  }

  export type RolUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: RolWhereInput
    data: XOR<RolUpdateWithoutUsuarioInput, RolUncheckedUpdateWithoutUsuarioInput>
  }

  export type RolUpdateWithoutUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Permiso?: PermisoUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateWithoutUsuarioInput = {
    id_rol?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Permiso?: PermisoUncheckedUpdateManyWithoutRolNestedInput
  }

  export type PymeUpsertWithoutUsuarioInput = {
    update: XOR<PymeUpdateWithoutUsuarioInput, PymeUncheckedUpdateWithoutUsuarioInput>
    create: XOR<PymeCreateWithoutUsuarioInput, PymeUncheckedCreateWithoutUsuarioInput>
    where?: PymeWhereInput
  }

  export type PymeUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: PymeWhereInput
    data: XOR<PymeUpdateWithoutUsuarioInput, PymeUncheckedUpdateWithoutUsuarioInput>
  }

  export type PymeUpdateWithoutUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Direccion?: DireccionUpdateOneRequiredWithoutPymeNestedInput
    Producto?: ProductoUpdateManyWithoutPymeNestedInput
  }

  export type PymeUncheckedUpdateWithoutUsuarioInput = {
    id_pyme?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    id_direccion?: IntFieldUpdateOperationsInput | number
    Producto?: ProductoUncheckedUpdateManyWithoutPymeNestedInput
  }

  export type CarroDeComprasUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: CarroDeComprasWhereUniqueInput
    update: XOR<CarroDeComprasUpdateWithoutUsuarioInput, CarroDeComprasUncheckedUpdateWithoutUsuarioInput>
    create: XOR<CarroDeComprasCreateWithoutUsuarioInput, CarroDeComprasUncheckedCreateWithoutUsuarioInput>
  }

  export type CarroDeComprasUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: CarroDeComprasWhereUniqueInput
    data: XOR<CarroDeComprasUpdateWithoutUsuarioInput, CarroDeComprasUncheckedUpdateWithoutUsuarioInput>
  }

  export type CarroDeComprasUpdateManyWithWhereWithoutUsuarioInput = {
    where: CarroDeComprasScalarWhereInput
    data: XOR<CarroDeComprasUpdateManyMutationInput, CarroDeComprasUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type CarroDeComprasScalarWhereInput = {
    AND?: CarroDeComprasScalarWhereInput | CarroDeComprasScalarWhereInput[]
    OR?: CarroDeComprasScalarWhereInput[]
    NOT?: CarroDeComprasScalarWhereInput | CarroDeComprasScalarWhereInput[]
    id_carro_compras?: IntFilter<"CarroDeCompras"> | number
    fecha?: DateTimeFilter<"CarroDeCompras"> | Date | string
    total?: DecimalFilter<"CarroDeCompras"> | Decimal | DecimalJsLike | number | string
    estado?: StringFilter<"CarroDeCompras"> | string
    id_usuario?: IntFilter<"CarroDeCompras"> | number
  }

  export type ListaDeDeseosUpsertWithoutUsuarioInput = {
    update: XOR<ListaDeDeseosUpdateWithoutUsuarioInput, ListaDeDeseosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ListaDeDeseosCreateWithoutUsuarioInput, ListaDeDeseosUncheckedCreateWithoutUsuarioInput>
    where?: ListaDeDeseosWhereInput
  }

  export type ListaDeDeseosUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: ListaDeDeseosWhereInput
    data: XOR<ListaDeDeseosUpdateWithoutUsuarioInput, ListaDeDeseosUncheckedUpdateWithoutUsuarioInput>
  }

  export type ListaDeDeseosUpdateWithoutUsuarioInput = {
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    DetalleListaDeseos?: DetalleListaDeseosUpdateManyWithoutListaDeDeseosNestedInput
  }

  export type ListaDeDeseosUncheckedUpdateWithoutUsuarioInput = {
    id_lista_deseo?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    DetalleListaDeseos?: DetalleListaDeseosUncheckedUpdateManyWithoutListaDeDeseosNestedInput
  }

  export type ValoracionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ValoracionWhereUniqueInput
    update: XOR<ValoracionUpdateWithoutUsuarioInput, ValoracionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ValoracionCreateWithoutUsuarioInput, ValoracionUncheckedCreateWithoutUsuarioInput>
  }

  export type ValoracionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ValoracionWhereUniqueInput
    data: XOR<ValoracionUpdateWithoutUsuarioInput, ValoracionUncheckedUpdateWithoutUsuarioInput>
  }

  export type ValoracionUpdateManyWithWhereWithoutUsuarioInput = {
    where: ValoracionScalarWhereInput
    data: XOR<ValoracionUpdateManyMutationInput, ValoracionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ValoracionScalarWhereInput = {
    AND?: ValoracionScalarWhereInput | ValoracionScalarWhereInput[]
    OR?: ValoracionScalarWhereInput[]
    NOT?: ValoracionScalarWhereInput | ValoracionScalarWhereInput[]
    id_valoracion?: IntFilter<"Valoracion"> | number
    puntaje?: IntFilter<"Valoracion"> | number
    comentario?: StringNullableFilter<"Valoracion"> | string | null
    fecha?: DateTimeFilter<"Valoracion"> | Date | string
    id_usuario?: IntFilter<"Valoracion"> | number
    id_producto?: IntFilter<"Valoracion"> | number
  }

  export type RolCreateWithoutPermisoInput = {
    nombre: string
    descripcion?: string | null
    Usuario?: UsuarioCreateNestedManyWithoutRolInput
  }

  export type RolUncheckedCreateWithoutPermisoInput = {
    id_rol?: number
    nombre: string
    descripcion?: string | null
    Usuario?: UsuarioUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolCreateOrConnectWithoutPermisoInput = {
    where: RolWhereUniqueInput
    create: XOR<RolCreateWithoutPermisoInput, RolUncheckedCreateWithoutPermisoInput>
  }

  export type RolUpsertWithoutPermisoInput = {
    update: XOR<RolUpdateWithoutPermisoInput, RolUncheckedUpdateWithoutPermisoInput>
    create: XOR<RolCreateWithoutPermisoInput, RolUncheckedCreateWithoutPermisoInput>
    where?: RolWhereInput
  }

  export type RolUpdateToOneWithWhereWithoutPermisoInput = {
    where?: RolWhereInput
    data: XOR<RolUpdateWithoutPermisoInput, RolUncheckedUpdateWithoutPermisoInput>
  }

  export type RolUpdateWithoutPermisoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuarioUpdateManyWithoutRolNestedInput
  }

  export type RolUncheckedUpdateWithoutPermisoInput = {
    id_rol?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuarioUncheckedUpdateManyWithoutRolNestedInput
  }

  export type UsuarioCreateWithoutPymeInput = {
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    Direccion?: DireccionCreateNestedOneWithoutUsuarioInput
    Rol: RolCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutPymeInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_direccion?: number | null
    id_rol: number
    CarroDeCompras?: CarroDeComprasUncheckedCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosUncheckedCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutPymeInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPymeInput, UsuarioUncheckedCreateWithoutPymeInput>
  }

  export type DireccionCreateWithoutPymeInput = {
    calle: string
    numero: string
    Comuna: ComunaCreateNestedOneWithoutDireccionInput
    Usuario?: UsuarioCreateNestedOneWithoutDireccionInput
  }

  export type DireccionUncheckedCreateWithoutPymeInput = {
    id_direccion?: number
    calle: string
    numero: string
    id_comuna: number
    Usuario?: UsuarioUncheckedCreateNestedOneWithoutDireccionInput
  }

  export type DireccionCreateOrConnectWithoutPymeInput = {
    where: DireccionWhereUniqueInput
    create: XOR<DireccionCreateWithoutPymeInput, DireccionUncheckedCreateWithoutPymeInput>
  }

  export type ProductoCreateWithoutPymeInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    CategoriaDeProducto: CategoriaDeProductoCreateNestedOneWithoutProductoInput
    DetalleCarroCompras?: DetalleCarroComprasCreateNestedManyWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutPymeInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_categoria_producto: number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedCreateNestedManyWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosUncheckedCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutPymeInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutPymeInput, ProductoUncheckedCreateWithoutPymeInput>
  }

  export type ProductoCreateManyPymeInputEnvelope = {
    data: ProductoCreateManyPymeInput | ProductoCreateManyPymeInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutPymeInput = {
    update: XOR<UsuarioUpdateWithoutPymeInput, UsuarioUncheckedUpdateWithoutPymeInput>
    create: XOR<UsuarioCreateWithoutPymeInput, UsuarioUncheckedCreateWithoutPymeInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPymeInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPymeInput, UsuarioUncheckedUpdateWithoutPymeInput>
  }

  export type UsuarioUpdateWithoutPymeInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    Direccion?: DireccionUpdateOneWithoutUsuarioNestedInput
    Rol?: RolUpdateOneRequiredWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPymeInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_direccion?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: IntFieldUpdateOperationsInput | number
    CarroDeCompras?: CarroDeComprasUncheckedUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUncheckedUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type DireccionUpsertWithoutPymeInput = {
    update: XOR<DireccionUpdateWithoutPymeInput, DireccionUncheckedUpdateWithoutPymeInput>
    create: XOR<DireccionCreateWithoutPymeInput, DireccionUncheckedCreateWithoutPymeInput>
    where?: DireccionWhereInput
  }

  export type DireccionUpdateToOneWithWhereWithoutPymeInput = {
    where?: DireccionWhereInput
    data: XOR<DireccionUpdateWithoutPymeInput, DireccionUncheckedUpdateWithoutPymeInput>
  }

  export type DireccionUpdateWithoutPymeInput = {
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    Comuna?: ComunaUpdateOneRequiredWithoutDireccionNestedInput
    Usuario?: UsuarioUpdateOneWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateWithoutPymeInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    id_comuna?: IntFieldUpdateOperationsInput | number
    Usuario?: UsuarioUncheckedUpdateOneWithoutDireccionNestedInput
  }

  export type ProductoUpsertWithWhereUniqueWithoutPymeInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutPymeInput, ProductoUncheckedUpdateWithoutPymeInput>
    create: XOR<ProductoCreateWithoutPymeInput, ProductoUncheckedCreateWithoutPymeInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutPymeInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutPymeInput, ProductoUncheckedUpdateWithoutPymeInput>
  }

  export type ProductoUpdateManyWithWhereWithoutPymeInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutPymeInput>
  }

  export type ProductoScalarWhereInput = {
    AND?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    OR?: ProductoScalarWhereInput[]
    NOT?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    id_producto?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"Producto"> | number
    estado?: StringFilter<"Producto"> | string
    fecha_publicacion?: DateTimeFilter<"Producto"> | Date | string
    fecha_actualizacion?: DateTimeFilter<"Producto"> | Date | string
    img_url?: StringNullableFilter<"Producto"> | string | null
    id_pyme?: IntFilter<"Producto"> | number
    id_categoria_producto?: IntFilter<"Producto"> | number
  }

  export type ProductoCreateWithoutCategoriaDeProductoInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    Pyme: PymeCreateNestedOneWithoutProductoInput
    DetalleCarroCompras?: DetalleCarroComprasCreateNestedManyWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutCategoriaDeProductoInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_pyme: number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedCreateNestedManyWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosUncheckedCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutCategoriaDeProductoInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutCategoriaDeProductoInput, ProductoUncheckedCreateWithoutCategoriaDeProductoInput>
  }

  export type ProductoCreateManyCategoriaDeProductoInputEnvelope = {
    data: ProductoCreateManyCategoriaDeProductoInput | ProductoCreateManyCategoriaDeProductoInput[]
    skipDuplicates?: boolean
  }

  export type ProductoUpsertWithWhereUniqueWithoutCategoriaDeProductoInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutCategoriaDeProductoInput, ProductoUncheckedUpdateWithoutCategoriaDeProductoInput>
    create: XOR<ProductoCreateWithoutCategoriaDeProductoInput, ProductoUncheckedCreateWithoutCategoriaDeProductoInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutCategoriaDeProductoInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutCategoriaDeProductoInput, ProductoUncheckedUpdateWithoutCategoriaDeProductoInput>
  }

  export type ProductoUpdateManyWithWhereWithoutCategoriaDeProductoInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutCategoriaDeProductoInput>
  }

  export type PymeCreateWithoutProductoInput = {
    nombre: string
    rut: string
    descripcion?: string | null
    Usuario: UsuarioCreateNestedOneWithoutPymeInput
    Direccion: DireccionCreateNestedOneWithoutPymeInput
  }

  export type PymeUncheckedCreateWithoutProductoInput = {
    id_pyme?: number
    nombre: string
    rut: string
    descripcion?: string | null
    id_usuario: number
    id_direccion: number
  }

  export type PymeCreateOrConnectWithoutProductoInput = {
    where: PymeWhereUniqueInput
    create: XOR<PymeCreateWithoutProductoInput, PymeUncheckedCreateWithoutProductoInput>
  }

  export type CategoriaDeProductoCreateWithoutProductoInput = {
    nombre: string
    descripcion?: string | null
  }

  export type CategoriaDeProductoUncheckedCreateWithoutProductoInput = {
    id_categoria_producto?: number
    nombre: string
    descripcion?: string | null
  }

  export type CategoriaDeProductoCreateOrConnectWithoutProductoInput = {
    where: CategoriaDeProductoWhereUniqueInput
    create: XOR<CategoriaDeProductoCreateWithoutProductoInput, CategoriaDeProductoUncheckedCreateWithoutProductoInput>
  }

  export type DetalleCarroComprasCreateWithoutProductoInput = {
    cantidad: number
    CarroDeCompras: CarroDeComprasCreateNestedOneWithoutDetalleCarroComprasInput
  }

  export type DetalleCarroComprasUncheckedCreateWithoutProductoInput = {
    id_detalle_carro_compras?: number
    cantidad: number
    id_carro_compras: number
  }

  export type DetalleCarroComprasCreateOrConnectWithoutProductoInput = {
    where: DetalleCarroComprasWhereUniqueInput
    create: XOR<DetalleCarroComprasCreateWithoutProductoInput, DetalleCarroComprasUncheckedCreateWithoutProductoInput>
  }

  export type DetalleCarroComprasCreateManyProductoInputEnvelope = {
    data: DetalleCarroComprasCreateManyProductoInput | DetalleCarroComprasCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type DetalleListaDeseosCreateWithoutProductoInput = {
    fecha_agregado?: Date | string
    ListaDeDeseos: ListaDeDeseosCreateNestedOneWithoutDetalleListaDeseosInput
  }

  export type DetalleListaDeseosUncheckedCreateWithoutProductoInput = {
    id_detalle_lista_deseos?: number
    fecha_agregado?: Date | string
    id_lista_deseo: number
  }

  export type DetalleListaDeseosCreateOrConnectWithoutProductoInput = {
    where: DetalleListaDeseosWhereUniqueInput
    create: XOR<DetalleListaDeseosCreateWithoutProductoInput, DetalleListaDeseosUncheckedCreateWithoutProductoInput>
  }

  export type DetalleListaDeseosCreateManyProductoInputEnvelope = {
    data: DetalleListaDeseosCreateManyProductoInput | DetalleListaDeseosCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type ValoracionCreateWithoutProductoInput = {
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    Usuario: UsuarioCreateNestedOneWithoutValoracionInput
  }

  export type ValoracionUncheckedCreateWithoutProductoInput = {
    id_valoracion?: number
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    id_usuario: number
  }

  export type ValoracionCreateOrConnectWithoutProductoInput = {
    where: ValoracionWhereUniqueInput
    create: XOR<ValoracionCreateWithoutProductoInput, ValoracionUncheckedCreateWithoutProductoInput>
  }

  export type ValoracionCreateManyProductoInputEnvelope = {
    data: ValoracionCreateManyProductoInput | ValoracionCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type PymeUpsertWithoutProductoInput = {
    update: XOR<PymeUpdateWithoutProductoInput, PymeUncheckedUpdateWithoutProductoInput>
    create: XOR<PymeCreateWithoutProductoInput, PymeUncheckedCreateWithoutProductoInput>
    where?: PymeWhereInput
  }

  export type PymeUpdateToOneWithWhereWithoutProductoInput = {
    where?: PymeWhereInput
    data: XOR<PymeUpdateWithoutProductoInput, PymeUncheckedUpdateWithoutProductoInput>
  }

  export type PymeUpdateWithoutProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuarioUpdateOneRequiredWithoutPymeNestedInput
    Direccion?: DireccionUpdateOneRequiredWithoutPymeNestedInput
  }

  export type PymeUncheckedUpdateWithoutProductoInput = {
    id_pyme?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    rut?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    id_usuario?: IntFieldUpdateOperationsInput | number
    id_direccion?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriaDeProductoUpsertWithoutProductoInput = {
    update: XOR<CategoriaDeProductoUpdateWithoutProductoInput, CategoriaDeProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<CategoriaDeProductoCreateWithoutProductoInput, CategoriaDeProductoUncheckedCreateWithoutProductoInput>
    where?: CategoriaDeProductoWhereInput
  }

  export type CategoriaDeProductoUpdateToOneWithWhereWithoutProductoInput = {
    where?: CategoriaDeProductoWhereInput
    data: XOR<CategoriaDeProductoUpdateWithoutProductoInput, CategoriaDeProductoUncheckedUpdateWithoutProductoInput>
  }

  export type CategoriaDeProductoUpdateWithoutProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoriaDeProductoUncheckedUpdateWithoutProductoInput = {
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DetalleCarroComprasUpsertWithWhereUniqueWithoutProductoInput = {
    where: DetalleCarroComprasWhereUniqueInput
    update: XOR<DetalleCarroComprasUpdateWithoutProductoInput, DetalleCarroComprasUncheckedUpdateWithoutProductoInput>
    create: XOR<DetalleCarroComprasCreateWithoutProductoInput, DetalleCarroComprasUncheckedCreateWithoutProductoInput>
  }

  export type DetalleCarroComprasUpdateWithWhereUniqueWithoutProductoInput = {
    where: DetalleCarroComprasWhereUniqueInput
    data: XOR<DetalleCarroComprasUpdateWithoutProductoInput, DetalleCarroComprasUncheckedUpdateWithoutProductoInput>
  }

  export type DetalleCarroComprasUpdateManyWithWhereWithoutProductoInput = {
    where: DetalleCarroComprasScalarWhereInput
    data: XOR<DetalleCarroComprasUpdateManyMutationInput, DetalleCarroComprasUncheckedUpdateManyWithoutProductoInput>
  }

  export type DetalleCarroComprasScalarWhereInput = {
    AND?: DetalleCarroComprasScalarWhereInput | DetalleCarroComprasScalarWhereInput[]
    OR?: DetalleCarroComprasScalarWhereInput[]
    NOT?: DetalleCarroComprasScalarWhereInput | DetalleCarroComprasScalarWhereInput[]
    id_detalle_carro_compras?: IntFilter<"DetalleCarroCompras"> | number
    cantidad?: IntFilter<"DetalleCarroCompras"> | number
    id_producto?: IntFilter<"DetalleCarroCompras"> | number
    id_carro_compras?: IntFilter<"DetalleCarroCompras"> | number
  }

  export type DetalleListaDeseosUpsertWithWhereUniqueWithoutProductoInput = {
    where: DetalleListaDeseosWhereUniqueInput
    update: XOR<DetalleListaDeseosUpdateWithoutProductoInput, DetalleListaDeseosUncheckedUpdateWithoutProductoInput>
    create: XOR<DetalleListaDeseosCreateWithoutProductoInput, DetalleListaDeseosUncheckedCreateWithoutProductoInput>
  }

  export type DetalleListaDeseosUpdateWithWhereUniqueWithoutProductoInput = {
    where: DetalleListaDeseosWhereUniqueInput
    data: XOR<DetalleListaDeseosUpdateWithoutProductoInput, DetalleListaDeseosUncheckedUpdateWithoutProductoInput>
  }

  export type DetalleListaDeseosUpdateManyWithWhereWithoutProductoInput = {
    where: DetalleListaDeseosScalarWhereInput
    data: XOR<DetalleListaDeseosUpdateManyMutationInput, DetalleListaDeseosUncheckedUpdateManyWithoutProductoInput>
  }

  export type DetalleListaDeseosScalarWhereInput = {
    AND?: DetalleListaDeseosScalarWhereInput | DetalleListaDeseosScalarWhereInput[]
    OR?: DetalleListaDeseosScalarWhereInput[]
    NOT?: DetalleListaDeseosScalarWhereInput | DetalleListaDeseosScalarWhereInput[]
    id_detalle_lista_deseos?: IntFilter<"DetalleListaDeseos"> | number
    fecha_agregado?: DateTimeFilter<"DetalleListaDeseos"> | Date | string
    id_lista_deseo?: IntFilter<"DetalleListaDeseos"> | number
    id_producto?: IntFilter<"DetalleListaDeseos"> | number
  }

  export type ValoracionUpsertWithWhereUniqueWithoutProductoInput = {
    where: ValoracionWhereUniqueInput
    update: XOR<ValoracionUpdateWithoutProductoInput, ValoracionUncheckedUpdateWithoutProductoInput>
    create: XOR<ValoracionCreateWithoutProductoInput, ValoracionUncheckedCreateWithoutProductoInput>
  }

  export type ValoracionUpdateWithWhereUniqueWithoutProductoInput = {
    where: ValoracionWhereUniqueInput
    data: XOR<ValoracionUpdateWithoutProductoInput, ValoracionUncheckedUpdateWithoutProductoInput>
  }

  export type ValoracionUpdateManyWithWhereWithoutProductoInput = {
    where: ValoracionScalarWhereInput
    data: XOR<ValoracionUpdateManyMutationInput, ValoracionUncheckedUpdateManyWithoutProductoInput>
  }

  export type UsuarioCreateWithoutCarroDeComprasInput = {
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    Direccion?: DireccionCreateNestedOneWithoutUsuarioInput
    Rol: RolCreateNestedOneWithoutUsuarioInput
    Pyme?: PymeCreateNestedOneWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutCarroDeComprasInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_direccion?: number | null
    id_rol: number
    Pyme?: PymeUncheckedCreateNestedOneWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosUncheckedCreateNestedOneWithoutUsuarioInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutCarroDeComprasInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCarroDeComprasInput, UsuarioUncheckedCreateWithoutCarroDeComprasInput>
  }

  export type VentaCreateWithoutCarroDeComprasInput = {
    monto_total: Decimal | DecimalJsLike | number | string
    fecha_venta?: Date | string
    MetodoPago: MetodoPagoCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutCarroDeComprasInput = {
    id_venta?: number
    monto_total: Decimal | DecimalJsLike | number | string
    fecha_venta?: Date | string
    id_metodo_pago: number
  }

  export type VentaCreateOrConnectWithoutCarroDeComprasInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutCarroDeComprasInput, VentaUncheckedCreateWithoutCarroDeComprasInput>
  }

  export type DetalleCarroComprasCreateWithoutCarroDeComprasInput = {
    cantidad: number
    Producto: ProductoCreateNestedOneWithoutDetalleCarroComprasInput
  }

  export type DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput = {
    id_detalle_carro_compras?: number
    cantidad: number
    id_producto: number
  }

  export type DetalleCarroComprasCreateOrConnectWithoutCarroDeComprasInput = {
    where: DetalleCarroComprasWhereUniqueInput
    create: XOR<DetalleCarroComprasCreateWithoutCarroDeComprasInput, DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput>
  }

  export type DetalleCarroComprasCreateManyCarroDeComprasInputEnvelope = {
    data: DetalleCarroComprasCreateManyCarroDeComprasInput | DetalleCarroComprasCreateManyCarroDeComprasInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutCarroDeComprasInput = {
    update: XOR<UsuarioUpdateWithoutCarroDeComprasInput, UsuarioUncheckedUpdateWithoutCarroDeComprasInput>
    create: XOR<UsuarioCreateWithoutCarroDeComprasInput, UsuarioUncheckedCreateWithoutCarroDeComprasInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCarroDeComprasInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCarroDeComprasInput, UsuarioUncheckedUpdateWithoutCarroDeComprasInput>
  }

  export type UsuarioUpdateWithoutCarroDeComprasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    Direccion?: DireccionUpdateOneWithoutUsuarioNestedInput
    Rol?: RolUpdateOneRequiredWithoutUsuarioNestedInput
    Pyme?: PymeUpdateOneWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCarroDeComprasInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_direccion?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: IntFieldUpdateOperationsInput | number
    Pyme?: PymeUncheckedUpdateOneWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUncheckedUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type VentaUpsertWithoutCarroDeComprasInput = {
    update: XOR<VentaUpdateWithoutCarroDeComprasInput, VentaUncheckedUpdateWithoutCarroDeComprasInput>
    create: XOR<VentaCreateWithoutCarroDeComprasInput, VentaUncheckedCreateWithoutCarroDeComprasInput>
    where?: VentaWhereInput
  }

  export type VentaUpdateToOneWithWhereWithoutCarroDeComprasInput = {
    where?: VentaWhereInput
    data: XOR<VentaUpdateWithoutCarroDeComprasInput, VentaUncheckedUpdateWithoutCarroDeComprasInput>
  }

  export type VentaUpdateWithoutCarroDeComprasInput = {
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    MetodoPago?: MetodoPagoUpdateOneRequiredWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutCarroDeComprasInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    id_metodo_pago?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleCarroComprasUpsertWithWhereUniqueWithoutCarroDeComprasInput = {
    where: DetalleCarroComprasWhereUniqueInput
    update: XOR<DetalleCarroComprasUpdateWithoutCarroDeComprasInput, DetalleCarroComprasUncheckedUpdateWithoutCarroDeComprasInput>
    create: XOR<DetalleCarroComprasCreateWithoutCarroDeComprasInput, DetalleCarroComprasUncheckedCreateWithoutCarroDeComprasInput>
  }

  export type DetalleCarroComprasUpdateWithWhereUniqueWithoutCarroDeComprasInput = {
    where: DetalleCarroComprasWhereUniqueInput
    data: XOR<DetalleCarroComprasUpdateWithoutCarroDeComprasInput, DetalleCarroComprasUncheckedUpdateWithoutCarroDeComprasInput>
  }

  export type DetalleCarroComprasUpdateManyWithWhereWithoutCarroDeComprasInput = {
    where: DetalleCarroComprasScalarWhereInput
    data: XOR<DetalleCarroComprasUpdateManyMutationInput, DetalleCarroComprasUncheckedUpdateManyWithoutCarroDeComprasInput>
  }

  export type ProductoCreateWithoutDetalleCarroComprasInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    Pyme: PymeCreateNestedOneWithoutProductoInput
    CategoriaDeProducto: CategoriaDeProductoCreateNestedOneWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutDetalleCarroComprasInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_pyme: number
    id_categoria_producto: number
    DetalleListaDeseos?: DetalleListaDeseosUncheckedCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutDetalleCarroComprasInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutDetalleCarroComprasInput, ProductoUncheckedCreateWithoutDetalleCarroComprasInput>
  }

  export type CarroDeComprasCreateWithoutDetalleCarroComprasInput = {
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    Usuario: UsuarioCreateNestedOneWithoutCarroDeComprasInput
    Venta?: VentaCreateNestedOneWithoutCarroDeComprasInput
  }

  export type CarroDeComprasUncheckedCreateWithoutDetalleCarroComprasInput = {
    id_carro_compras?: number
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    id_usuario: number
    Venta?: VentaUncheckedCreateNestedOneWithoutCarroDeComprasInput
  }

  export type CarroDeComprasCreateOrConnectWithoutDetalleCarroComprasInput = {
    where: CarroDeComprasWhereUniqueInput
    create: XOR<CarroDeComprasCreateWithoutDetalleCarroComprasInput, CarroDeComprasUncheckedCreateWithoutDetalleCarroComprasInput>
  }

  export type ProductoUpsertWithoutDetalleCarroComprasInput = {
    update: XOR<ProductoUpdateWithoutDetalleCarroComprasInput, ProductoUncheckedUpdateWithoutDetalleCarroComprasInput>
    create: XOR<ProductoCreateWithoutDetalleCarroComprasInput, ProductoUncheckedCreateWithoutDetalleCarroComprasInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutDetalleCarroComprasInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutDetalleCarroComprasInput, ProductoUncheckedUpdateWithoutDetalleCarroComprasInput>
  }

  export type ProductoUpdateWithoutDetalleCarroComprasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    Pyme?: PymeUpdateOneRequiredWithoutProductoNestedInput
    CategoriaDeProducto?: CategoriaDeProductoUpdateOneRequiredWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutDetalleCarroComprasInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_pyme?: IntFieldUpdateOperationsInput | number
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
    DetalleListaDeseos?: DetalleListaDeseosUncheckedUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type CarroDeComprasUpsertWithoutDetalleCarroComprasInput = {
    update: XOR<CarroDeComprasUpdateWithoutDetalleCarroComprasInput, CarroDeComprasUncheckedUpdateWithoutDetalleCarroComprasInput>
    create: XOR<CarroDeComprasCreateWithoutDetalleCarroComprasInput, CarroDeComprasUncheckedCreateWithoutDetalleCarroComprasInput>
    where?: CarroDeComprasWhereInput
  }

  export type CarroDeComprasUpdateToOneWithWhereWithoutDetalleCarroComprasInput = {
    where?: CarroDeComprasWhereInput
    data: XOR<CarroDeComprasUpdateWithoutDetalleCarroComprasInput, CarroDeComprasUncheckedUpdateWithoutDetalleCarroComprasInput>
  }

  export type CarroDeComprasUpdateWithoutDetalleCarroComprasInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUpdateOneRequiredWithoutCarroDeComprasNestedInput
    Venta?: VentaUpdateOneWithoutCarroDeComprasNestedInput
  }

  export type CarroDeComprasUncheckedUpdateWithoutDetalleCarroComprasInput = {
    id_carro_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    id_usuario?: IntFieldUpdateOperationsInput | number
    Venta?: VentaUncheckedUpdateOneWithoutCarroDeComprasNestedInput
  }

  export type UsuarioCreateWithoutListaDeDeseosInput = {
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    Direccion?: DireccionCreateNestedOneWithoutUsuarioInput
    Rol: RolCreateNestedOneWithoutUsuarioInput
    Pyme?: PymeCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasCreateNestedManyWithoutUsuarioInput
    Valoracion?: ValoracionCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutListaDeDeseosInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_direccion?: number | null
    id_rol: number
    Pyme?: PymeUncheckedCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasUncheckedCreateNestedManyWithoutUsuarioInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutListaDeDeseosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutListaDeDeseosInput, UsuarioUncheckedCreateWithoutListaDeDeseosInput>
  }

  export type DetalleListaDeseosCreateWithoutListaDeDeseosInput = {
    fecha_agregado?: Date | string
    Producto: ProductoCreateNestedOneWithoutDetalleListaDeseosInput
  }

  export type DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput = {
    id_detalle_lista_deseos?: number
    fecha_agregado?: Date | string
    id_producto: number
  }

  export type DetalleListaDeseosCreateOrConnectWithoutListaDeDeseosInput = {
    where: DetalleListaDeseosWhereUniqueInput
    create: XOR<DetalleListaDeseosCreateWithoutListaDeDeseosInput, DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput>
  }

  export type DetalleListaDeseosCreateManyListaDeDeseosInputEnvelope = {
    data: DetalleListaDeseosCreateManyListaDeDeseosInput | DetalleListaDeseosCreateManyListaDeDeseosInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutListaDeDeseosInput = {
    update: XOR<UsuarioUpdateWithoutListaDeDeseosInput, UsuarioUncheckedUpdateWithoutListaDeDeseosInput>
    create: XOR<UsuarioCreateWithoutListaDeDeseosInput, UsuarioUncheckedCreateWithoutListaDeDeseosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutListaDeDeseosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutListaDeDeseosInput, UsuarioUncheckedUpdateWithoutListaDeDeseosInput>
  }

  export type UsuarioUpdateWithoutListaDeDeseosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    Direccion?: DireccionUpdateOneWithoutUsuarioNestedInput
    Rol?: RolUpdateOneRequiredWithoutUsuarioNestedInput
    Pyme?: PymeUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUpdateManyWithoutUsuarioNestedInput
    Valoracion?: ValoracionUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutListaDeDeseosInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_direccion?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: IntFieldUpdateOperationsInput | number
    Pyme?: PymeUncheckedUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUncheckedUpdateManyWithoutUsuarioNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type DetalleListaDeseosUpsertWithWhereUniqueWithoutListaDeDeseosInput = {
    where: DetalleListaDeseosWhereUniqueInput
    update: XOR<DetalleListaDeseosUpdateWithoutListaDeDeseosInput, DetalleListaDeseosUncheckedUpdateWithoutListaDeDeseosInput>
    create: XOR<DetalleListaDeseosCreateWithoutListaDeDeseosInput, DetalleListaDeseosUncheckedCreateWithoutListaDeDeseosInput>
  }

  export type DetalleListaDeseosUpdateWithWhereUniqueWithoutListaDeDeseosInput = {
    where: DetalleListaDeseosWhereUniqueInput
    data: XOR<DetalleListaDeseosUpdateWithoutListaDeDeseosInput, DetalleListaDeseosUncheckedUpdateWithoutListaDeDeseosInput>
  }

  export type DetalleListaDeseosUpdateManyWithWhereWithoutListaDeDeseosInput = {
    where: DetalleListaDeseosScalarWhereInput
    data: XOR<DetalleListaDeseosUpdateManyMutationInput, DetalleListaDeseosUncheckedUpdateManyWithoutListaDeDeseosInput>
  }

  export type ListaDeDeseosCreateWithoutDetalleListaDeseosInput = {
    fecha_creacion?: Date | string
    Usuario: UsuarioCreateNestedOneWithoutListaDeDeseosInput
  }

  export type ListaDeDeseosUncheckedCreateWithoutDetalleListaDeseosInput = {
    id_lista_deseo?: number
    fecha_creacion?: Date | string
    id_usuario: number
  }

  export type ListaDeDeseosCreateOrConnectWithoutDetalleListaDeseosInput = {
    where: ListaDeDeseosWhereUniqueInput
    create: XOR<ListaDeDeseosCreateWithoutDetalleListaDeseosInput, ListaDeDeseosUncheckedCreateWithoutDetalleListaDeseosInput>
  }

  export type ProductoCreateWithoutDetalleListaDeseosInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    Pyme: PymeCreateNestedOneWithoutProductoInput
    CategoriaDeProducto: CategoriaDeProductoCreateNestedOneWithoutProductoInput
    DetalleCarroCompras?: DetalleCarroComprasCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutDetalleListaDeseosInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_pyme: number
    id_categoria_producto: number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedCreateNestedManyWithoutProductoInput
    Valoracion?: ValoracionUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutDetalleListaDeseosInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutDetalleListaDeseosInput, ProductoUncheckedCreateWithoutDetalleListaDeseosInput>
  }

  export type ListaDeDeseosUpsertWithoutDetalleListaDeseosInput = {
    update: XOR<ListaDeDeseosUpdateWithoutDetalleListaDeseosInput, ListaDeDeseosUncheckedUpdateWithoutDetalleListaDeseosInput>
    create: XOR<ListaDeDeseosCreateWithoutDetalleListaDeseosInput, ListaDeDeseosUncheckedCreateWithoutDetalleListaDeseosInput>
    where?: ListaDeDeseosWhereInput
  }

  export type ListaDeDeseosUpdateToOneWithWhereWithoutDetalleListaDeseosInput = {
    where?: ListaDeDeseosWhereInput
    data: XOR<ListaDeDeseosUpdateWithoutDetalleListaDeseosInput, ListaDeDeseosUncheckedUpdateWithoutDetalleListaDeseosInput>
  }

  export type ListaDeDeseosUpdateWithoutDetalleListaDeseosInput = {
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateOneRequiredWithoutListaDeDeseosNestedInput
  }

  export type ListaDeDeseosUncheckedUpdateWithoutDetalleListaDeseosInput = {
    id_lista_deseo?: IntFieldUpdateOperationsInput | number
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type ProductoUpsertWithoutDetalleListaDeseosInput = {
    update: XOR<ProductoUpdateWithoutDetalleListaDeseosInput, ProductoUncheckedUpdateWithoutDetalleListaDeseosInput>
    create: XOR<ProductoCreateWithoutDetalleListaDeseosInput, ProductoUncheckedCreateWithoutDetalleListaDeseosInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutDetalleListaDeseosInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutDetalleListaDeseosInput, ProductoUncheckedUpdateWithoutDetalleListaDeseosInput>
  }

  export type ProductoUpdateWithoutDetalleListaDeseosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    Pyme?: PymeUpdateOneRequiredWithoutProductoNestedInput
    CategoriaDeProducto?: CategoriaDeProductoUpdateOneRequiredWithoutProductoNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutDetalleListaDeseosInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_pyme?: IntFieldUpdateOperationsInput | number
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type UsuarioCreateWithoutValoracionInput = {
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    Direccion?: DireccionCreateNestedOneWithoutUsuarioInput
    Rol: RolCreateNestedOneWithoutUsuarioInput
    Pyme?: PymeCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutValoracionInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_direccion?: number | null
    id_rol: number
    Pyme?: PymeUncheckedCreateNestedOneWithoutUsuarioInput
    CarroDeCompras?: CarroDeComprasUncheckedCreateNestedManyWithoutUsuarioInput
    ListaDeDeseos?: ListaDeDeseosUncheckedCreateNestedOneWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutValoracionInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutValoracionInput, UsuarioUncheckedCreateWithoutValoracionInput>
  }

  export type ProductoCreateWithoutValoracionInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    Pyme: PymeCreateNestedOneWithoutProductoInput
    CategoriaDeProducto: CategoriaDeProductoCreateNestedOneWithoutProductoInput
    DetalleCarroCompras?: DetalleCarroComprasCreateNestedManyWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutValoracionInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_pyme: number
    id_categoria_producto: number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedCreateNestedManyWithoutProductoInput
    DetalleListaDeseos?: DetalleListaDeseosUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutValoracionInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutValoracionInput, ProductoUncheckedCreateWithoutValoracionInput>
  }

  export type UsuarioUpsertWithoutValoracionInput = {
    update: XOR<UsuarioUpdateWithoutValoracionInput, UsuarioUncheckedUpdateWithoutValoracionInput>
    create: XOR<UsuarioCreateWithoutValoracionInput, UsuarioUncheckedCreateWithoutValoracionInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutValoracionInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutValoracionInput, UsuarioUncheckedUpdateWithoutValoracionInput>
  }

  export type UsuarioUpdateWithoutValoracionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    Direccion?: DireccionUpdateOneWithoutUsuarioNestedInput
    Rol?: RolUpdateOneRequiredWithoutUsuarioNestedInput
    Pyme?: PymeUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUpdateOneWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutValoracionInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_direccion?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: IntFieldUpdateOperationsInput | number
    Pyme?: PymeUncheckedUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUncheckedUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUncheckedUpdateOneWithoutUsuarioNestedInput
  }

  export type ProductoUpsertWithoutValoracionInput = {
    update: XOR<ProductoUpdateWithoutValoracionInput, ProductoUncheckedUpdateWithoutValoracionInput>
    create: XOR<ProductoCreateWithoutValoracionInput, ProductoUncheckedCreateWithoutValoracionInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutValoracionInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutValoracionInput, ProductoUncheckedUpdateWithoutValoracionInput>
  }

  export type ProductoUpdateWithoutValoracionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    Pyme?: PymeUpdateOneRequiredWithoutProductoNestedInput
    CategoriaDeProducto?: CategoriaDeProductoUpdateOneRequiredWithoutProductoNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUpdateManyWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutValoracionInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_pyme?: IntFieldUpdateOperationsInput | number
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedUpdateManyWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type VentaCreateWithoutMetodoPagoInput = {
    monto_total: Decimal | DecimalJsLike | number | string
    fecha_venta?: Date | string
    CarroDeCompras: CarroDeComprasCreateNestedOneWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutMetodoPagoInput = {
    id_venta?: number
    monto_total: Decimal | DecimalJsLike | number | string
    fecha_venta?: Date | string
    id_carro_compras: number
  }

  export type VentaCreateOrConnectWithoutMetodoPagoInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput>
  }

  export type VentaCreateManyMetodoPagoInputEnvelope = {
    data: VentaCreateManyMetodoPagoInput | VentaCreateManyMetodoPagoInput[]
    skipDuplicates?: boolean
  }

  export type VentaUpsertWithWhereUniqueWithoutMetodoPagoInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutMetodoPagoInput, VentaUncheckedUpdateWithoutMetodoPagoInput>
    create: XOR<VentaCreateWithoutMetodoPagoInput, VentaUncheckedCreateWithoutMetodoPagoInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutMetodoPagoInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutMetodoPagoInput, VentaUncheckedUpdateWithoutMetodoPagoInput>
  }

  export type VentaUpdateManyWithWhereWithoutMetodoPagoInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutMetodoPagoInput>
  }

  export type VentaScalarWhereInput = {
    AND?: VentaScalarWhereInput | VentaScalarWhereInput[]
    OR?: VentaScalarWhereInput[]
    NOT?: VentaScalarWhereInput | VentaScalarWhereInput[]
    id_venta?: IntFilter<"Venta"> | number
    monto_total?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFilter<"Venta"> | Date | string
    id_carro_compras?: IntFilter<"Venta"> | number
    id_metodo_pago?: IntFilter<"Venta"> | number
  }

  export type CarroDeComprasCreateWithoutVentaInput = {
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    Usuario: UsuarioCreateNestedOneWithoutCarroDeComprasInput
    DetalleCarroCompras?: DetalleCarroComprasCreateNestedManyWithoutCarroDeComprasInput
  }

  export type CarroDeComprasUncheckedCreateWithoutVentaInput = {
    id_carro_compras?: number
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
    id_usuario: number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedCreateNestedManyWithoutCarroDeComprasInput
  }

  export type CarroDeComprasCreateOrConnectWithoutVentaInput = {
    where: CarroDeComprasWhereUniqueInput
    create: XOR<CarroDeComprasCreateWithoutVentaInput, CarroDeComprasUncheckedCreateWithoutVentaInput>
  }

  export type MetodoPagoCreateWithoutVentaInput = {
    tipo: string
    descripcion?: string | null
  }

  export type MetodoPagoUncheckedCreateWithoutVentaInput = {
    id_metodo_pago?: number
    tipo: string
    descripcion?: string | null
  }

  export type MetodoPagoCreateOrConnectWithoutVentaInput = {
    where: MetodoPagoWhereUniqueInput
    create: XOR<MetodoPagoCreateWithoutVentaInput, MetodoPagoUncheckedCreateWithoutVentaInput>
  }

  export type CarroDeComprasUpsertWithoutVentaInput = {
    update: XOR<CarroDeComprasUpdateWithoutVentaInput, CarroDeComprasUncheckedUpdateWithoutVentaInput>
    create: XOR<CarroDeComprasCreateWithoutVentaInput, CarroDeComprasUncheckedCreateWithoutVentaInput>
    where?: CarroDeComprasWhereInput
  }

  export type CarroDeComprasUpdateToOneWithWhereWithoutVentaInput = {
    where?: CarroDeComprasWhereInput
    data: XOR<CarroDeComprasUpdateWithoutVentaInput, CarroDeComprasUncheckedUpdateWithoutVentaInput>
  }

  export type CarroDeComprasUpdateWithoutVentaInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUpdateOneRequiredWithoutCarroDeComprasNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUpdateManyWithoutCarroDeComprasNestedInput
  }

  export type CarroDeComprasUncheckedUpdateWithoutVentaInput = {
    id_carro_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    id_usuario?: IntFieldUpdateOperationsInput | number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedUpdateManyWithoutCarroDeComprasNestedInput
  }

  export type MetodoPagoUpsertWithoutVentaInput = {
    update: XOR<MetodoPagoUpdateWithoutVentaInput, MetodoPagoUncheckedUpdateWithoutVentaInput>
    create: XOR<MetodoPagoCreateWithoutVentaInput, MetodoPagoUncheckedCreateWithoutVentaInput>
    where?: MetodoPagoWhereInput
  }

  export type MetodoPagoUpdateToOneWithWhereWithoutVentaInput = {
    where?: MetodoPagoWhereInput
    data: XOR<MetodoPagoUpdateWithoutVentaInput, MetodoPagoUncheckedUpdateWithoutVentaInput>
  }

  export type MetodoPagoUpdateWithoutVentaInput = {
    tipo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MetodoPagoUncheckedUpdateWithoutVentaInput = {
    id_metodo_pago?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiudadCreateManyRegionInput = {
    id_ciudad?: number
    nombre: string
  }

  export type CiudadUpdateWithoutRegionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    Comuna?: ComunaUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadUncheckedUpdateWithoutRegionInput = {
    id_ciudad?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    Comuna?: ComunaUncheckedUpdateManyWithoutCiudadNestedInput
  }

  export type CiudadUncheckedUpdateManyWithoutRegionInput = {
    id_ciudad?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ComunaCreateManyCiudadInput = {
    id_comuna?: number
    nombre: string
  }

  export type ComunaUpdateWithoutCiudadInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    Direccion?: DireccionUpdateManyWithoutComunaNestedInput
  }

  export type ComunaUncheckedUpdateWithoutCiudadInput = {
    id_comuna?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    Direccion?: DireccionUncheckedUpdateManyWithoutComunaNestedInput
  }

  export type ComunaUncheckedUpdateManyWithoutCiudadInput = {
    id_comuna?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type DireccionCreateManyComunaInput = {
    id_direccion?: number
    calle: string
    numero: string
  }

  export type DireccionUpdateWithoutComunaInput = {
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUpdateOneWithoutDireccionNestedInput
    Pyme?: PymeUpdateOneWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateWithoutComunaInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
    Usuario?: UsuarioUncheckedUpdateOneWithoutDireccionNestedInput
    Pyme?: PymeUncheckedUpdateOneWithoutDireccionNestedInput
  }

  export type DireccionUncheckedUpdateManyWithoutComunaInput = {
    id_direccion?: IntFieldUpdateOperationsInput | number
    calle?: StringFieldUpdateOperationsInput | string
    numero?: StringFieldUpdateOperationsInput | string
  }

  export type UsuarioCreateManyRolInput = {
    id_usuario?: number
    nombre: string
    email: string
    password: string
    fecha_registro?: Date | string
    ultimo_login?: Date | string | null
    esta_activo?: boolean
    id_direccion?: number | null
  }

  export type PermisoCreateManyRolInput = {
    id_permiso?: number
    nombre: string
    descripcion?: string | null
  }

  export type UsuarioUpdateWithoutRolInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    Direccion?: DireccionUpdateOneWithoutUsuarioNestedInput
    Pyme?: PymeUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutRolInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_direccion?: NullableIntFieldUpdateOperationsInput | number | null
    Pyme?: PymeUncheckedUpdateOneWithoutUsuarioNestedInput
    CarroDeCompras?: CarroDeComprasUncheckedUpdateManyWithoutUsuarioNestedInput
    ListaDeDeseos?: ListaDeDeseosUncheckedUpdateOneWithoutUsuarioNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateManyWithoutRolInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    esta_activo?: BoolFieldUpdateOperationsInput | boolean
    id_direccion?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PermisoUpdateWithoutRolInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermisoUncheckedUpdateWithoutRolInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermisoUncheckedUpdateManyWithoutRolInput = {
    id_permiso?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CarroDeComprasCreateManyUsuarioInput = {
    id_carro_compras?: number
    fecha?: Date | string
    total: Decimal | DecimalJsLike | number | string
    estado: string
  }

  export type ValoracionCreateManyUsuarioInput = {
    id_valoracion?: number
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    id_producto: number
  }

  export type CarroDeComprasUpdateWithoutUsuarioInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    Venta?: VentaUpdateOneWithoutCarroDeComprasNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUpdateManyWithoutCarroDeComprasNestedInput
  }

  export type CarroDeComprasUncheckedUpdateWithoutUsuarioInput = {
    id_carro_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
    Venta?: VentaUncheckedUpdateOneWithoutCarroDeComprasNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUncheckedUpdateManyWithoutCarroDeComprasNestedInput
  }

  export type CarroDeComprasUncheckedUpdateManyWithoutUsuarioInput = {
    id_carro_compras?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type ValoracionUpdateWithoutUsuarioInput = {
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    Producto?: ProductoUpdateOneRequiredWithoutValoracionNestedInput
  }

  export type ValoracionUncheckedUpdateWithoutUsuarioInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type ValoracionUncheckedUpdateManyWithoutUsuarioInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type ProductoCreateManyPymeInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_categoria_producto: number
  }

  export type ProductoUpdateWithoutPymeInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    CategoriaDeProducto?: CategoriaDeProductoUpdateOneRequiredWithoutProductoNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUpdateManyWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutPymeInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedUpdateManyWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUncheckedUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutPymeInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_categoria_producto?: IntFieldUpdateOperationsInput | number
  }

  export type ProductoCreateManyCategoriaDeProductoInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock: number
    estado: string
    fecha_publicacion?: Date | string
    fecha_actualizacion?: Date | string
    img_url?: string | null
    id_pyme: number
  }

  export type ProductoUpdateWithoutCategoriaDeProductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    Pyme?: PymeUpdateOneRequiredWithoutProductoNestedInput
    DetalleCarroCompras?: DetalleCarroComprasUpdateManyWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutCategoriaDeProductoInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_pyme?: IntFieldUpdateOperationsInput | number
    DetalleCarroCompras?: DetalleCarroComprasUncheckedUpdateManyWithoutProductoNestedInput
    DetalleListaDeseos?: DetalleListaDeseosUncheckedUpdateManyWithoutProductoNestedInput
    Valoracion?: ValoracionUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutCategoriaDeProductoInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    estado?: StringFieldUpdateOperationsInput | string
    fecha_publicacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_actualizacion?: DateTimeFieldUpdateOperationsInput | Date | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    id_pyme?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleCarroComprasCreateManyProductoInput = {
    id_detalle_carro_compras?: number
    cantidad: number
    id_carro_compras: number
  }

  export type DetalleListaDeseosCreateManyProductoInput = {
    id_detalle_lista_deseos?: number
    fecha_agregado?: Date | string
    id_lista_deseo: number
  }

  export type ValoracionCreateManyProductoInput = {
    id_valoracion?: number
    puntaje: number
    comentario?: string | null
    fecha?: Date | string
    id_usuario: number
  }

  export type DetalleCarroComprasUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    CarroDeCompras?: CarroDeComprasUpdateOneRequiredWithoutDetalleCarroComprasNestedInput
  }

  export type DetalleCarroComprasUncheckedUpdateWithoutProductoInput = {
    id_detalle_carro_compras?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    id_carro_compras?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleCarroComprasUncheckedUpdateManyWithoutProductoInput = {
    id_detalle_carro_compras?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    id_carro_compras?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleListaDeseosUpdateWithoutProductoInput = {
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    ListaDeDeseos?: ListaDeDeseosUpdateOneRequiredWithoutDetalleListaDeseosNestedInput
  }

  export type DetalleListaDeseosUncheckedUpdateWithoutProductoInput = {
    id_detalle_lista_deseos?: IntFieldUpdateOperationsInput | number
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    id_lista_deseo?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleListaDeseosUncheckedUpdateManyWithoutProductoInput = {
    id_detalle_lista_deseos?: IntFieldUpdateOperationsInput | number
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    id_lista_deseo?: IntFieldUpdateOperationsInput | number
  }

  export type ValoracionUpdateWithoutProductoInput = {
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    Usuario?: UsuarioUpdateOneRequiredWithoutValoracionNestedInput
  }

  export type ValoracionUncheckedUpdateWithoutProductoInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type ValoracionUncheckedUpdateManyWithoutProductoInput = {
    id_valoracion?: IntFieldUpdateOperationsInput | number
    puntaje?: IntFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleCarroComprasCreateManyCarroDeComprasInput = {
    id_detalle_carro_compras?: number
    cantidad: number
    id_producto: number
  }

  export type DetalleCarroComprasUpdateWithoutCarroDeComprasInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    Producto?: ProductoUpdateOneRequiredWithoutDetalleCarroComprasNestedInput
  }

  export type DetalleCarroComprasUncheckedUpdateWithoutCarroDeComprasInput = {
    id_detalle_carro_compras?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleCarroComprasUncheckedUpdateManyWithoutCarroDeComprasInput = {
    id_detalle_carro_compras?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleListaDeseosCreateManyListaDeDeseosInput = {
    id_detalle_lista_deseos?: number
    fecha_agregado?: Date | string
    id_producto: number
  }

  export type DetalleListaDeseosUpdateWithoutListaDeDeseosInput = {
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    Producto?: ProductoUpdateOneRequiredWithoutDetalleListaDeseosNestedInput
  }

  export type DetalleListaDeseosUncheckedUpdateWithoutListaDeDeseosInput = {
    id_detalle_lista_deseos?: IntFieldUpdateOperationsInput | number
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type DetalleListaDeseosUncheckedUpdateManyWithoutListaDeDeseosInput = {
    id_detalle_lista_deseos?: IntFieldUpdateOperationsInput | number
    fecha_agregado?: DateTimeFieldUpdateOperationsInput | Date | string
    id_producto?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCreateManyMetodoPagoInput = {
    id_venta?: number
    monto_total: Decimal | DecimalJsLike | number | string
    fecha_venta?: Date | string
    id_carro_compras: number
  }

  export type VentaUpdateWithoutMetodoPagoInput = {
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    CarroDeCompras?: CarroDeComprasUpdateOneRequiredWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutMetodoPagoInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    id_carro_compras?: IntFieldUpdateOperationsInput | number
  }

  export type VentaUncheckedUpdateManyWithoutMetodoPagoInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    monto_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    id_carro_compras?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}